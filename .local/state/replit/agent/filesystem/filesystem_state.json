{"file_contents":{"Auth/auth.css":{"content":"/* /Auth/auth.css */\n\n/* --- Global & Font --- */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n@font-face {\n    font-family: 'Optimistic';\n    src: url('../Assets/Fonts/Optimistic_Text_A_Md.ttf');\n}\n\n/* --- Body & Theme --- */\nbody {\n    font-family: \"Optimistic\", sans-serif;\n    background: #f8f9fc;\n    color: #1a1a1c;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    padding: 20px;\n    position: relative; /* For background animation positioning */\n    overflow-y: auto; /* Allow vertical scrolling */\n    overflow-x: hidden; /* Hide horizontal overflow from animation */\n}\n\n/* --- Auth Container & Card --- */\n.auth-container {\n    width: 100%;\n    max-width: 420px;\n}\n\n.auth-card {\n    background: #ffffff;\n    border-radius: 16px;\n    padding: 32px;    \n    border: 2px solid #0e639c;\n    box-shadow: 0 4px 12px rgba(14, 99, 156, 0.12); /* Enhanced shadow with blue tint */\n    position: relative; /* For theme toggle positioning */\n    text-align: center;\n}\n\n/* Theme Toggle Button */\n.theme-toggle {\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    background: none;\n    border: 2px solid #e0e0e0;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease;\n    z-index: 1000;\n}\n\n.theme-toggle:hover {\n    border-color: #0e639c;\n    transform: scale(1.1);\n}\n\n.theme-icon {\n    font-size: 18px;\n    transition: transform 0.3s ease;\n}\n\n.theme-toggle:hover .theme-icon {\n    transform: rotate(180deg);\n}\n\n\n\n.auth-card {\n    transition: opacity 0.3s ease-out;\n}\n\n/* Loading animation for auth card */\n@keyframes authCardLoad {\n    0% {\n        opacity: 0;\n        transform: scale(0.95);\n    }\n    100% {\n        opacity: 1;\n        transform: scale(1);\n    }\n}\n\n.auth-card.loading {\n    animation: authCardLoad 0.4s ease-out forwards;\n}\n\n.auth-title {\n    font-size: 32px;\n    font-weight: bold;\n    color: #0e639c;\n    margin-bottom: 8px;\n}\n\n.auth-subtitle {\n    font-size: 16px;\n    color: #555;\n    margin-bottom: 24px;\n}\n\n/* --- Form & Inputs --- */\n.auth-form {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n\n.input-wrapper {\n    position: relative;\n}\n\n.input-icon {\n    position: absolute;\n    left: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 18px;\n    height: 18px;\n    background-color: #555; /* Standard inactive icon color */\n    -webkit-mask-size: contain;\n    mask-size: contain;\n    -webkit-mask-position: center;\n    mask-position: center;\n    -webkit-mask-repeat: no-repeat;\n    z-index: 2; /* Ensure icon is above the input field */\n    mask-repeat: no-repeat;\n}\n/* Correctly formatted data URIs for SVG icons */\n.icon-user { -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'/%3E%3Ccircle cx='12' cy='7' r='4'/%3E%3C/svg%3E\"); mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'/%3E%3Ccircle cx='12' cy='7' r='4'/%3E%3C/svg%3E\"); }\n.icon-email { -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'/%3E%3Cpolyline points='22,6 12,13 2,6'/%3E%3C/svg%3E\"); mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'/%3E%3Cpolyline points='22,6 12,13 2,6'/%3E%3C/svg%3E\"); }\n.icon-password { -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='11' width='18' height='11' rx='2' ry='2'/%3E%3Cpath d='M7 11V7a5 5 0 0 1 10 0v4'/%3E%3C/svg%3E\"); mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='11' width='18' height='11' rx='2' ry='2'/%3E%3Cpath d='M7 11V7a5 5 0 0 1 10 0v4'/%3E%3C/svg%3E\"); }\n.icon-referral { -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 12 20 22 4 22 4 12'/%3E%3Crect x='2' y='7' width='20' height='5'/%3E%3Cline x1='12' y1='22' x2='12' y2='7'/%3E%3Cpath d='M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z'/%3E%3Cpath d='M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z'/%3E%3C/svg%3E\"); mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 12 20 22 4 22 4 12'/%3E%3Crect x='2' y='7' width='20' height='5'/%3E%3Cline x1='12' y1='22' x2='12' y2='7'/%3E%3Cpath d='M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z'/%3E%3Cpath d='M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z'/%3E%3C/svg%3E\"); }\n\n.password-toggle-icon {\n    position: absolute;\n    right: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 20px;\n    height: 20px;\n    background-color: #555; /* Standard inactive icon color */\n    -webkit-mask-size: contain;\n    mask-size: contain;\n    -webkit-mask-position: center;\n    mask-position: center;\n    -webkit-mask-repeat: no-repeat;\n    mask-repeat: no-repeat;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.password-toggle-icon:hover {\n    background-color: #0e639c; /* Standard active/hover color */\n}\n\n.icon-eye { -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z'/%3E%3Ccircle cx='12' cy='12' r='3'/%3E%3C/svg%3E\"); mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z'/%3E%3Ccircle cx='12' cy='12' r='3'/%3E%3C/svg%3E\"); }\n.icon-eye-slash { -webkit-mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24'/%3E%3Cline x1='1' y1='1' x2='23' y2='23'/%3E%3C/svg%3E\"); mask-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24'/%3E%3Cline x1='1' y1='1' x2='23' y2='23'/%3E%3C/svg%3E\"); }\n\n.input-prefix {\n    position: absolute;\n    left: 40px; /* Position it after the icon */\n    top: 50%;\n    transform: translateY(-50%);\n    font-size: 14px;\n    font-weight: 600; /* Make it bolder */\n    color: #1c1c1e; /* Match input text color */\n    pointer-events: none; /* Make it non-interactive */\n    z-index: 10; /* Ensure it's above the input field */\n}\n\n\n.auth-form input {\n    width: 100%;\n    padding: 12px 40px; /* Symmetrical padding for icons on both sides */\n    border: 2px solid #e1e5e9;\n    border-radius: 8px;\n    background-color: #ffffff;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    position: relative; /* Needed for z-index to work */\n}\n\n/* Adjust padding for inputs without a right-side icon */\n.auth-form input:not([type=\"password\"]) {\n    padding-right: 12px;\n}\n\n/* Adjust left padding for the referral input to make space for the prefix */\n#signup-referral {\n    padding-left: 95px; /* 40px for icon + 55px for prefix and spacing */\n    letter-spacing: 0.5px; /* Better readability for codes */\n}\n\n.auth-form input:focus {\n    outline: none;\n    border-color: #0e639c;\n}\n\n.auth-form input.input-error {\n    border-color: #d9534f;\n    box-shadow: 0 0 0 3px rgba(217, 83, 79, 0.1);\n    animation: inputShake 0.4s ease;\n}\n\n.auth-form input.input-success {\n    border-color: #28a745;\n    box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);\n}\n\n@keyframes inputShake {\n    0%, 100% { transform: translateX(0); }\n    25% { transform: translateX(-3px); }\n    75% { transform: translateX(3px); }\n}\n\n/* Input validation states */\n.input-wrapper.validating::after {\n    content: \"⟳\";\n    position: absolute;\n    right: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #6c757d;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    to { transform: translateY(-50%) rotate(360deg); }\n}\n\n.input-wrapper.valid::after {\n    content: \"✓\";\n    position: absolute;\n    right: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #28a745;\n    font-weight: bold;\n}\n\n.input-wrapper.invalid::after {\n    content: \"✗\";\n    position: absolute;\n    right: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #d9534f;\n    font-weight: bold;\n}\n\n\n/* --- Password Strength Indicator --- */\n#password-strength-container {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    margin-top: -8px;\n    padding: 8px 0;\n}\n\n.strength-bar {\n    flex-grow: 1;\n    height: 6px;\n    background-color: #e0e0e0;\n    border-radius: 3px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scaleY(0.8);\n    opacity: 0.5;\n}\n\n.strength-bar.active {\n    transform: scaleY(1);\n    opacity: 1;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#password-strength-text {\n    font-size: 12px;\n    font-weight: 600;\n    color: #555;\n    min-width: 90px;\n    text-align: right;\n    transition: color 0.3s ease;\n    letter-spacing: 0.3px;\n}\n\n/* Strength levels with enhanced colors */\n.strength-bar.active.weak { \n    background: linear-gradient(135deg, #d9534f 0%, #c9302c 100%);\n    animation: pulseWeak 2s ease-in-out infinite;\n}\n\n.strength-bar.active.medium { \n    background: linear-gradient(135deg, #f0ad4e 0%, #ec971f 100%);\n}\n\n.strength-bar.active.strong { \n    background: linear-gradient(135deg, #5bc0de 0%, #31b0d5 100%);\n}\n\n.strength-bar.active.very-strong { \n    background: linear-gradient(135deg, #5cb85c 0%, #449d44 100%);\n    animation: pulseStrong 2s ease-in-out infinite;\n}\n\n@keyframes pulseWeak {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.7; }\n}\n\n@keyframes pulseStrong {\n    0%, 100% { box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\n    50% { box-shadow: 0 2px 8px rgba(92, 184, 92, 0.4); }\n}\n\n/* Dark mode enhancements */\n.dark-mode #password-strength-text {\n    color: #bbb;\n}\n\n.dark-mode .strength-bar {\n    background-color: #444;\n}\n\n.dark-mode .strength-bar.active.weak { \n    background: linear-gradient(135deg, #c9302c 0%, #a02622 100%);\n}\n\n.dark-mode .strength-bar.active.medium { \n    background: linear-gradient(135deg, #ec971f 0%, #d58512 100%);\n}\n\n.dark-mode .strength-bar.active.strong { \n    background: linear-gradient(135deg, #31b0d5 0%, #2390b0 100%);\n}\n\n.dark-mode .strength-bar.active.very-strong { \n    background: linear-gradient(135deg, #449d44 0%, #357a38 100%);\n}\n\n\n/* --- Referral Display --- */\n.referral-name-display {\n    display: none; /* Hidden by default */\n    font-size: 13px;\n    font-weight: 500;\n    padding: 8px 12px;\n    border-radius: 6px;\n    margin-top: 8px;\n    text-align: center;\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: all 0.3s ease;\n}\n\n.referral-name-display.show {\n    display: block;\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.referral-name-display.error {\n    color: #d9534f;\n    background-color: rgba(217, 83, 79, 0.1);\n    border: 1px solid rgba(217, 83, 79, 0.3);\n}\n\n.referral-name-display.success {\n    color: #28a745;\n    background-color: rgba(40, 167, 69, 0.1);\n    border: 1px solid rgba(40, 167, 69, 0.3);\n}\n\n/* Dark mode referral display */\n.dark-mode .referral-name-display.error {\n    color: #ff6b6b;\n    background-color: rgba(255, 107, 107, 0.15);\n    border-color: rgba(255, 107, 107, 0.3);\n}\n\n.dark-mode .referral-name-display.success {\n    color: #51cf66;\n    background-color: rgba(81, 207, 102, 0.15);\n    border-color: rgba(81, 207, 102, 0.3);\n}\n\n/* --- Form Description (for forgot password) --- */\n.form-description {\n    font-size: 14px;\n    color: #555;\n    margin-bottom: 16px;\n    line-height: 1.4;\n}\n\n/* --- Form Options (Remember Me / Forgot Password) --- */\n.form-options {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 14px;\n    margin-top: -8px; /* Pull it closer to the inputs */\n    margin-bottom: 8px;\n}\n\n/* Modifier for when there's only one option (like on signup page) */\n.form-options.single-option {\n    justify-content: flex-start;\n}\n\n.privacy-policy {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    cursor: pointer;\n    color: #555;\n    line-height: 1.4;\n    text-align: left;\n}\n\n.privacy-policy span {\n    padding-left: 8px; /* Space between checkbox and text */\n}\n\n.privacy-policy input[type=\"checkbox\"] {\n    /* Visually hide but keep accessible */\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n}\n\n/* New SVG Checkbox Style */\n.check {\n  cursor: pointer;\n  position: relative;\n  margin: auto;\n  width: 18px;\n  height: 18px;\n  -webkit-tap-highlight-color: transparent;\n  transform: translate3d(0, 0, 0);\n}\n\n.check:before {\n  content: \"\";\n  position: absolute;\n  top: -15px;\n  left: -15px;\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: rgba(14, 99, 156, 0.05);\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.check svg {\n  position: relative;\n  z-index: 1;\n  fill: none;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke: #c8ccd4;\n  stroke-width: 1.5;\n  transform: translate3d(0, 0, 0);\n  transition: all 0.2s ease;\n}\n\n.check svg path {\n  stroke-dasharray: 60;\n  stroke-dashoffset: 0;\n}\n\n.check svg polyline {\n  stroke-dasharray: 22;\n  stroke-dashoffset: 66;\n}\n\n.check:hover:before { opacity: 1; }\n.check:hover svg { stroke: #0e639c; }\n\n.extra-link a {\n    color: #0e639c;\n    text-decoration: none;\n    font-weight: 500;\n}\n.extra-link a:hover { text-decoration: underline; }\n\n.privacy-policy input:checked + .check svg { stroke: #0e639c; }\n\n.privacy-policy input:checked + .check svg path {\n  stroke-dashoffset: 60;\n  transition: all 0.3s linear;\n}\n\n.privacy-policy input:checked + .check svg polyline {\n  stroke-dashoffset: 42;\n  transition: all 0.2s linear;\n  transition-delay: 0.15s;\n}\n\n/* --- Error Message --- */\n.error-msg {\n    color: #dc3545;\n    background-color: transparent;\n    border: 1px solid #dc3545;\n    font-size: 14px;\n    text-align: center;\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: all 0.3s ease;\n    border-radius: 8px;\n    padding: 8px 12px;\n    margin: 8px 0 4px 0;\n    min-height: 36px;\n    max-height: 36px;\n    overflow: hidden;\n    line-height: 1.4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.error-msg.success {\n    color: #155724;\n    background-color: transparent;\n    border-color: #155724;\n}\n\n.error-msg.warning {\n    color: #856404;\n    background-color: transparent;\n    border-color: #856404;\n}\n\n.error-msg.show {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.error-msg:not(.show) {\n    opacity: 0;\n    transform: translateY(-10px);\n}\n\n.error-msg.shake {\n    animation: shake 0.5s ease-in-out;\n}\n\n@keyframes shake {\n    0%, 100% { transform: translateX(0); }\n    10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }\n    20%, 40%, 60%, 80% { transform: translateX(4px); }\n}\n\n/* --- Button & Spinner --- */\n.auth-btn {\n    padding: 12px 20px;\n    border-radius: 8px;\n    background: #0e639c;\n    color: #fff;\n    font-weight: bold;\n    font-size: 16px;\n    border: none;\n    cursor: pointer;\n    transition: background 0.2s ease;\n    position: relative;\n    overflow: hidden;\n    min-height: 48px;\n}\n\n.auth-btn:hover:not(:disabled) {\n    background: #0b4f7a;\n}\n\n.auth-btn:active:not(:disabled) {\n    background: #094261;\n}\n\n.auth-btn:disabled {\n    background: #6c757d;\n    cursor: not-allowed;\n}\n\n.auth-btn.loading {\n    pointer-events: none;\n}\n\n.auth-btn.success {\n    background: #28a745;\n    animation: successPulse 0.6s ease;\n}\n\n.auth-btn.green-loading {\n    background: #28a745;\n    pointer-events: none;\n}\n\n.auth-btn.green-loading .spinner {\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-top: 2px solid #fff;\n}\n\n@keyframes successPulse {\n    0%, 100% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n}\n\n.auth-btn .btn-text {\n    transition: opacity 0.2s ease;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.auth-btn .btn-icon {\n    font-size: 18px;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n}\n\n.auth-btn.success .btn-icon {\n    opacity: 1;\n}\n\n.auth-btn .spinner {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 20px;\n    height: 20px;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-top: 2px solid #fff;\n    border-radius: 50%;\n    animation: spin 0.8s linear infinite;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n}\n\n.auth-btn.loading .spinner,\n.auth-btn:disabled .spinner {\n    opacity: 1;\n}\n\n.auth-btn.loading .btn-text,\n.auth-btn:disabled .btn-text {\n    opacity: 0;\n}\n\n@keyframes spin { \n    0% { transform: translate(-50%, -50%) rotate(0deg); }\n    100% { transform: translate(-50%, -50%) rotate(360deg); }\n}\n\n/* --- Switch Auth Link --- */\n.switch-auth {\n    margin-top: 20px;\n    font-size: 14px;\n    color: #555;\n}\n\n.switch-auth a {\n    color: #0e639c;\n    font-weight: bold;\n    text-decoration: none;\n}\n\n.switch-auth a:hover {\n    text-decoration: underline;\n}\n\n/* --- Dark Mode --- */\n.dark-mode body {\n    background: #1e1e1e;\n    color: #d4d4d4;\n}\n\n.dark-mode .auth-card {\n    background: #2d2d30;\n    border-color: #0e639c; /* Ensure border is visible in dark mode */\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3); /* Standard app shadow for dark mode */\n}\n\n.dark-mode .theme-toggle {\n    border-color: #555;\n    color: #d4d4d4;\n}\n\n.dark-mode .theme-toggle:hover {\n    border-color: #0e639c;\n}\n\n.dark-mode .auth-subtitle,\n.dark-mode .switch-auth {\n    color: #bbb;\n}\n\n.dark-mode .form-description {\n    color: #bbb;\n}\n\n.dark-mode .privacy-policy,\n.dark-mode .extra-link a {\n    color: #bbb;\n}\n\n.dark-mode .check svg {\n    stroke: #6a737d;\n}\n\n.dark-mode .check:hover svg,\n.dark-mode .privacy-policy input:checked + .check svg {\n    border-color: #0e639c;\n}\n\n.dark-mode .input-prefix {\n    color: #d4d4d4; /* Match dark mode input text color */\n}\n\n.dark-mode .input-icon {\n    background-color: #d4d4d4; /* Standard dark mode inactive color */\n}\n\n.dark-mode .password-toggle-icon {\n    background-color: #d4d4d4; /* Standard dark mode inactive color */\n}\n\n.dark-mode .password-toggle-icon:hover {\n    background-color: #0e639c; /* Standard active/hover color */\n}\n\n.dark-mode .auth-form input {\n    background-color: #2d2d30;\n    border-color: #555;\n    color: #d4d4d4;\n}\n\n.dark-mode .auth-form input:focus {\n    border-color: #0e639c;\n}\n\n.dark-mode .referral-name-display {\n    background-color: #1c3a50;\n    color: #a5d8ff;\n}\n\n/* --- Animated Background --- */\n/* Static circles removed - JavaScript animation in ui.js handles all background animation */\n/* This prevents conflicts between CSS and JS animations */\n\n/* All static circle styles removed to prevent conflicts with JavaScript animation */\n\n/* Dark mode circle overrides removed - JavaScript animation handles all theming */\n","size_bytes":20782},"Pages/manage-subscription.css":{"content":"body {\n    font-family: sans-serif;\n    background-color: #f4f4f4;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\n\n.container {\n    background-color: #fff;\n    padding: 2rem;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    text-align: center;\n}\n\nh1 {\n    margin-bottom: 1.5rem;\n}\n\n.subscription-details {\n    margin-bottom: 2rem;\n}\n\n.subscription-details h2 {\n    margin-bottom: 1rem;\n}\n\n.actions button {\n    background-color: #dc3545;\n    color: #fff;\n    border: none;\n    padding: 0.8rem 1.5rem;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 1rem;\n    margin: 0 0.5rem;\n}\n\n.actions button#changePlan {\n    background-color: #007bff;\n}\n","size_bytes":740},"Offline/offline.css":{"content":"@font-face {\n    /* Ensure the app's font is available offline */\n    font-family: 'Optimistic';\n    src: url('../Assets/Fonts/Optimistic_Text_A_Md.ttf');\n}\n\nbody {\n    margin: 0;\n    font-family: 'Optimistic', sans-serif;\n    background-color: #f4f5f7;\n    color: #1c1c1e;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    padding: 20px;\n    text-align: center;\n    box-sizing: border-box;\n}\n\n.offline-card {\n    background: #ffffff;\n    border-radius: 12px;\n    padding: 32px 24px;\n    max-width: 350px;\n    width: 100%;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);\n}\n\n.offline-icon {\n    color: #0e639c;\n    margin-bottom: 20px;\n}\n\n.offline-icon svg {\n    width: 60px;\n    height: 60px;\n}\n\n.offline-title {\n    font-size: 24px;\n    font-weight: bold;\n    color: #1c1c1e;\n    margin-bottom: 8px;\n}\n\n.offline-message {\n    font-size: 16px;\n    color: #555;\n    line-height: 1.5;\n}\n\n/* Dark Mode styles for when the user has it enabled */\n@media (prefers-color-scheme: dark) {\n    body {\n        background-color: #1e1e1e;\n    }\n\n    .offline-card {\n        background: #2d2d30;\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    }\n\n    .offline-icon {\n        color: #a5d8ff;\n    }\n\n    .offline-message {\n        color: #aaa;\n    }\n}","size_bytes":1288},"env.js":{"content":"// env.js\n// ================================\n// Supabase-only configuration for StatWise PWA\n// All Firebase dependencies have been removed\n// ================================\n\n// Import Supabase client\nimport { createClient } from \"https://esm.sh/@supabase/supabase-js@2.45.4\";\n\n// Supabase configuration\nconst supabaseUrl = 'https://fwpriiugfjhtoymcbmso.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ3cHJpaXVnZmpodG95bWNibXNvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY5MDc3MTgsImV4cCI6MjA3MjQ4MzcxOH0.Sy3iehhGx2UNi28UBEjfNd81TjMxOVXJjY9HJS3xVjs';\n\n// Create Supabase client with auth and storage configurations\nexport const supabase = createClient(supabaseUrl, supabaseKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    storage: window.localStorage\n  },\n  storage: {\n    buckets: {\n      'profile-pictures': {\n        public: true,\n        allowedMimeTypes: ['image/jpeg', 'image/png', 'image/gif', 'image/webp'],\n        fileSizeLimit: 5242880 // 5MB\n      }\n    }\n  }\n});\n\n// Flutterwave configuration\n// Note: For security, only the PUBLIC KEY should be accessible in frontend code\n// The SECRET and ENCRYPTION keys should remain server-side only\n\n// You can set your Flutterwave public key here directly (it's safe for frontend)\n// Or implement a secure method to fetch it from your Supabase backend\nconst FLUTTERWAVE_PUBLIC_KEY = 'FLWPUBK-30eeb76b5875f40db71221d0960de0a8-X';\n\n// Export Flutterwave public key (only public key is safe for frontend)\nexport const FLWPUBK = FLUTTERWAVE_PUBLIC_KEY;\n\n// Validation - ensure public key exists for payment functionality\nif (!FLWPUBK || FLWPUBK === 'YOUR_FLUTTERWAVE_PUBLIC_KEY_HERE') {\n  console.error('⚠️ FLUTTERWAVE_PUBLIC_KEY is not set. Payment functionality will not work.');\n  console.log('💡 Please update env.js with your actual Flutterwave public key');\n}\n\n// Export auth for compatibility with existing code\nexport const auth = supabase.auth;\n\n// Additional Supabase services for backward compatibility\nexport const db = supabase;\nexport const storage = supabase.storage;\n\n// Remove Firebase messaging since we're not using it anymore\nexport const messaging = null;\n\nconsole.log('✅ Supabase configuration loaded successfully!');","size_bytes":2305},"Offline/offline.js":{"content":"","size_bytes":0},"replit.md":{"content":"# StatWise - AI Sports Prediction PWA\n\n## Overview\nStatWise is a Progressive Web App (PWA) that provides AI-powered sports predictions with a tiered subscription model. Built as a Single Page Application (SPA) using vanilla JavaScript and a complete Supabase serverless architecture, it offers users match predictions with confidence ratings, subscription management, referral programs, and comprehensive user profiles. The application is designed for offline functionality and native-like installation on user devices, aiming for a scalable solution with secure data handling and real-time capabilities.\n\n## User Preferences\nPreferred communication style: Simple, everyday language.\n\n## Recent Updates\n- Removed inactive page feature completely from the application (October 26, 2025)\n  - Deleted activity-manager.js and Pages/inactive.html\n  - Removed all inactive page UI controls and CSS styling\n  - Cleaned up all references from codebase\n- Fixed multiple UX issues:\n  - Removed annoying console spam from manager.js\n  - Fixed signup form validation for privacy policy checkbox\n  - Fixed loader hiding on all signup error paths\n  - Fixed authentication page scrolling functionality\n- Completely converted History feature to Forum with real-time messaging capabilities using Supabase real-time subscriptions\n- Created forum_messages database table with proper user relationships and message threading\n- Implemented comprehensive forum UI with message composition, real-time message display, and responsive design\n- Fixed interactive background animation theme compatibility for both light and dark modes with proper color adaptation\n\n## System Architecture\n\n### Frontend Architecture\nThe application is a Single Page Application (SPA) using vanilla JavaScript ES modules, with `index.html` as the entry point and `main.js` managing dynamic content loading and client-side routing. UI components are modularized within the `Pages/` directory, and styling is handled by `styles.css` with component-specific additions.\n\n### Backend Architecture (Supabase-Only)\nThe application utilizes a complete Supabase serverless architecture:\n-   **Authentication**: Supabase Auth manages user authentication, including registration, login, password reset, and session management, reinforced with Row Level Security.\n-   **Database**: A PostgreSQL database underpins the system, featuring a comprehensive schema for user profiles, predictions, subscription data, payment transactions, referral systems, and administrative functions, with proper indexing and foreign key relationships.\n-   **File Storage**: Supabase Storage is used for user profile picture uploads, generating public URLs automatically.\n-   **Real-time Features**: Built-in real-time subscriptions enable live data updates.\n-   **Security**: Row Level Security (RLS) policies enforce secure data access based on user authentication and subscription tiers.\n-   **API**: Auto-generated REST and GraphQL APIs include built-in authentication and authorization.\n\n### Data Storage Design\nThe PostgreSQL database employs a relational structure with tables for users, predictions, subscriptions, payments, referrals, and admin data. It incorporates indexing, foreign keys, and JSONB fields for flexibility, with RLS ensuring data security.\n\n### Authentication and Authorization\nSupabase Auth provides secure user management. Access control is tier-based (Free, Premium, VIP, VVIP) via Row Level Security policies, restricting features and data according to subscription levels.\n\n### Progressive Web App Features\nThe application is a PWA, utilizing a service worker (`sw.js`) for offline capabilities and caching. It supports installation on user devices and provides an offline page. A Web App Manifest ensures a native-like installation experience.\n\n### Push Notification System\nFirebase Cloud Messaging (FCM) is used for push notifications, sending prediction alerts and account updates, supporting both foreground and background messages.\n\n## External Dependencies\n\n### Payment Processing\n-   **Flutterwave**: Integrated for subscription payment processing.\n\n### Supabase Services\n-   **Supabase Auth**: User authentication and session management.\n-   **PostgreSQL Database**: Primary database for all application data.\n-   **Supabase Storage**: File storage for profile pictures.\n-   **Real-time Subscriptions**: Live data updates.\n-   **Auto-generated APIs**: REST and GraphQL APIs.\n\n### Third-Party Libraries\n-   **Vercel Analytics**: User behavior tracking and performance monitoring.\n\n### External APIs\n-   **IP Geolocation**: api.ipify.org for public IP detection.\n\n### Development Tools\n-   **Node.js/NPM**: Package management.\n-   **HTTP Server**: Development server for local testing.\n-   **Replit**: Development environment and deployment platform.","size_bytes":4809},"Loader/loader.js":{"content":"// loader.js\n\n// Create loader element\nconst loader = document.createElement(\"div\");\nloader.id = \"globalLoader\";\nloader.innerHTML = `\n  <div class=\"loader-overlay\"></div>\n  <div class=\"loader-spinner\"></div>\n`;\ndocument.body.appendChild(loader);\n\nlet loaderTimeout;\nlet loaderActive = false;\n\n// Function to show loader\nexport function showLoader() {\n    // Clear any existing timeout first\n    clearTimeout(loaderTimeout);\n    \n    // Only show the loader if the operation takes more than 300ms\n    loaderTimeout = setTimeout(() => {\n        const loader = document.getElementById(\"globalLoader\");\n        // Only show if document is visible (not in background)\n        if (loader && !loaderActive && document.visibilityState === 'visible') {\n            loader.style.display = \"flex\";\n            loaderActive = true;\n            console.log('🔄 Loader shown');\n        }\n    }, 300); // 300ms delay\n}\n\n// Function to hide loader\nexport function hideLoader() {\n    // Clear the timeout so the loader doesn't appear if the action was fast\n    clearTimeout(loaderTimeout);\n    const loader = document.getElementById(\"globalLoader\");\n    if (loader && loader.style.display === \"flex\") {\n        loader.style.display = \"none\";\n        loaderActive = false;\n        console.log('✅ Loader hidden');\n    }\n}\n\n// Hide loader when page becomes inactive\ndocument.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'hidden' && loaderActive) {\n        hideLoader();\n    }\n});\n\n/**\n * Shows a spinner on a button and disables it.\n * Relies on CSS to hide text and show the spinner.\n * @param {HTMLElement} btn The button element.\n */\nexport function showSpinner(btn) {\n    btn.disabled = true;\n    // The CSS handles showing the spinner and hiding the text when the button is disabled.\n}\n\n/**\n * Hides a spinner on a button and enables it.\n * @param {HTMLElement} btn The button element.\n */\nexport function hideSpinner(btn) {\n    btn.disabled = false;\n    // The CSS will hide the spinner and show the text again.\n}\n","size_bytes":2041},"manager.js":{"content":"// manager.js\n\n/**\n * Disables the right-click context menu to deter basic inspection.\n */\nfunction disableContextMenu() {\n    document.addEventListener('contextmenu', event => event.preventDefault());\n}\n\n/**\n * Disables common developer tools keyboard shortcuts.\n */\nfunction disableDevToolsShortcuts() {\n    document.addEventListener('keydown', function (e) {\n        // Block F12\n        if (e.keyCode === 123) {\n            e.preventDefault();\n        }\n        // Block Ctrl+Shift+I (or Cmd+Option+I on Mac)\n        if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.keyCode === 73) {\n            e.preventDefault();\n        }\n        // Block Ctrl+Shift+J (or Cmd+Option+J on Mac)\n        if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.keyCode === 74) {\n            e.preventDefault();\n        }\n        // Block Ctrl+U (or Cmd+Option+U on Mac)\n        if ((e.ctrlKey || e.metaKey) && e.keyCode === 85) {\n            e.preventDefault();\n        }\n    });\n}\n\n/**\n * Initializes all client-side security measures.\n */\nexport function initializeAppSecurity() {\n    disableContextMenu();\n    disableDevToolsShortcuts();\n    console.log(\"Client-side security manager initialized.\");\n}\n\n/**\n * Determines the initial page to load and executes the loading function.\n * It checks if the main content area is empty and then decides the page\n * based on URL hash, localStorage, or a default value.\n * @param {string} userId - The current user's ID.\n * @param {function} loadPageCallback - The function to call to load the page, expecting (page, userId, addToHistory).\n */\nexport function manageInitialPageLoad(userId, loadPageCallback) {\n    const defaultPage = \"home\";\n\n    // Determine page load priority: URL hash > localStorage > default.\n    const initialHash = window.location.hash.substring(1);\n    const pageToLoad = initialHash || localStorage.getItem(\"lastPage\") || defaultPage;\n\n    // Load the page without adding a new entry to the browser's history.\n    loadPageCallback(pageToLoad, userId, false);\n    return pageToLoad;\n}","size_bytes":2031},"consent-styles.css":{"content":"/* StatWise Consent Management Platform Styles */\n\n/* Consent Banner */\n.consent-banner {\n    display: none;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    z-index: 10000;\n    padding: 20px;\n    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.15);\n    backdrop-filter: blur(10px);\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    animation: slideUp 0.5s ease-out;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n\n.consent-content {\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n.consent-header h3 {\n    margin: 0 0 15px 0;\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #ffffff;\n}\n\n.consent-text {\n    margin-bottom: 20px;\n    line-height: 1.6;\n}\n\n.consent-text p {\n    margin: 0 0 10px 0;\n    color: #f0f0f0;\n}\n\n.consent-buttons {\n    display: flex;\n    gap: 15px;\n    flex-wrap: wrap;\n    margin-bottom: 15px;\n}\n\n.consent-btn {\n    padding: 12px 24px;\n    border: none;\n    border-radius: 8px;\n    font-weight: 600;\n    font-size: 0.95rem;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.consent-btn-primary {\n    background: #00d4aa;\n    color: white;\n}\n\n.consent-btn-primary:hover {\n    background: #00b894;\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(0, 212, 170, 0.4);\n}\n\n.consent-btn-secondary {\n    background: rgba(255, 255, 255, 0.1);\n    color: white;\n    border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.consent-btn-secondary:hover {\n    background: rgba(255, 255, 255, 0.2);\n    transform: translateY(-2px);\n}\n\n.consent-btn-reject {\n    background: #ff6b6b;\n    color: white;\n}\n\n.consent-btn-reject:hover {\n    background: #ff5252;\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4);\n}\n\n.consent-links {\n    text-align: center;\n    margin-top: 15px;\n}\n\n.consent-links a {\n    color: #ffffff;\n    text-decoration: none;\n    font-size: 0.9rem;\n    opacity: 0.9;\n    transition: opacity 0.3s ease;\n}\n\n.consent-links a:hover {\n    opacity: 1;\n    text-decoration: underline;\n}\n\n/* Consent Modal */\n.consent-modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.75);\n    z-index: 10001;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    backdrop-filter: blur(5px);\n    animation: fadeIn 0.3s ease;\n}\n\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.consent-modal-content {\n    background: white;\n    border-radius: 16px;\n    max-width: 600px;\n    width: 100%;\n    max-height: 90vh;\n    overflow-y: auto;\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n    animation: slideIn 0.3s ease;\n}\n\n@keyframes slideIn {\n    from {\n        transform: translateY(30px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n\n.consent-modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 25px 30px 20px;\n    border-bottom: 1px solid #eee;\n}\n\n.consent-modal-header h3 {\n    margin: 0;\n    color: #333;\n    font-size: 1.5rem;\n    font-weight: 600;\n}\n\n.consent-close {\n    background: none;\n    border: none;\n    font-size: 28px;\n    cursor: pointer;\n    color: #999;\n    padding: 0;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    transition: all 0.3s ease;\n}\n\n.consent-close:hover {\n    background: #f5f5f5;\n    color: #666;\n}\n\n.consent-categories {\n    padding: 20px 30px;\n}\n\n.consent-category {\n    margin-bottom: 25px;\n    padding: 20px;\n    border: 1px solid #eee;\n    border-radius: 12px;\n    background: #fafafa;\n    transition: all 0.3s ease;\n}\n\n.consent-category:hover {\n    border-color: #ddd;\n    background: #f5f5f5;\n}\n\n.category-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.category-header h4 {\n    margin: 0;\n    color: #333;\n    font-size: 1.1rem;\n    font-weight: 600;\n}\n\n.category-status.always-on {\n    background: #00d4aa;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 20px;\n    font-size: 0.8rem;\n    font-weight: 600;\n}\n\n.consent-category p {\n    margin: 0;\n    color: #666;\n    line-height: 1.5;\n    font-size: 0.95rem;\n}\n\n/* Toggle Switch */\n.toggle-switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 30px;\n}\n\n.toggle-switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    transition: .4s;\n    border-radius: 30px;\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 22px;\n    width: 22px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\ninput:checked + .slider {\n    background-color: #00d4aa;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(30px);\n}\n\n.consent-modal-buttons {\n    padding: 20px 30px 30px;\n    display: flex;\n    gap: 15px;\n    justify-content: flex-end;\n    border-top: 1px solid #eee;\n}\n\n/* Mobile Responsive */\n@media (max-width: 768px) {\n    .consent-banner {\n        padding: 15px;\n    }\n    \n    .consent-buttons {\n        flex-direction: column;\n    }\n    \n    .consent-btn {\n        width: 100%;\n        justify-content: center;\n    }\n    \n    .consent-modal {\n        padding: 10px;\n    }\n    \n    .consent-modal-content {\n        margin: 0;\n        border-radius: 12px;\n    }\n    \n    .consent-modal-header,\n    .consent-categories,\n    .consent-modal-buttons {\n        padding-left: 20px;\n        padding-right: 20px;\n    }\n    \n    .consent-modal-buttons {\n        flex-direction: column;\n    }\n    \n    .category-header {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 10px;\n    }\n}\n\n@media (max-width: 480px) {\n    .consent-header h3 {\n        font-size: 1.2rem;\n    }\n    \n    .consent-text {\n        font-size: 0.9rem;\n    }\n    \n    .consent-btn {\n        font-size: 0.9rem;\n        padding: 10px 20px;\n    }\n}\n\n/* Dark Mode Support */\n@media (prefers-color-scheme: dark) {\n    .consent-modal-content {\n        background: #2a2a2a;\n        color: #ffffff;\n    }\n    \n    .consent-modal-header {\n        border-bottom-color: #444;\n    }\n    \n    .consent-modal-header h3 {\n        color: #ffffff;\n    }\n    \n    .consent-category {\n        background: #333;\n        border-color: #444;\n        color: #ffffff;\n    }\n    \n    .consent-category:hover {\n        background: #3a3a3a;\n        border-color: #555;\n    }\n    \n    .category-header h4 {\n        color: #ffffff;\n    }\n    \n    .consent-category p {\n        color: #ccc;\n    }\n    \n    .consent-modal-buttons {\n        border-top-color: #444;\n    }\n    \n    .consent-close:hover {\n        background: #3a3a3a;\n        color: #ccc;\n    }\n}\n\n/* High contrast mode */\n@media (prefers-contrast: high) {\n    .consent-banner {\n        background: #000000;\n        border-top: 3px solid #ffffff;\n    }\n    \n    .consent-btn-primary {\n        background: #0066cc;\n    }\n    \n    .consent-btn-secondary {\n        background: #ffffff;\n        color: #000000;\n        border: 2px solid #000000;\n    }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n    .consent-banner,\n    .consent-modal,\n    .consent-modal-content,\n    .consent-btn,\n    .slider {\n        animation: none;\n        transition: none;\n    }\n}","size_bytes":7746},"ui.js":{"content":"// ui.js\n\n/**\n * Creates interactive circle background animation that responds to cursor movement\n * @param {HTMLElement} container Optional container element, or creates one if null\n * @returns {Function} A cleanup function to stop the animation and remove listeners.\n */\nfunction initInteractiveBackground(container = null) {\n    console.log('🌀 Initializing interactive circles background...');\n    \n    // Create background container if not provided\n    let createdElements = false;\n    let backgroundContainer = container;\n    let circles = [];\n    let mouseX = window.innerWidth / 2;\n    let mouseY = window.innerHeight / 2;\n    let animationId;\n    \n    if (!backgroundContainer) {\n        console.log('Creating interactive circles background...');\n        \n        // Create the animated background dynamically with theme-aware background\n        backgroundContainer = document.createElement('div');\n        backgroundContainer.className = 'animated-background-interactive';\n        \n        // Function to get theme-aware background color\n        const getBackgroundColor = () => {\n            const isDark = document.body.classList.contains('dark-mode');\n            return isDark \n                ? getComputedStyle(document.documentElement).getPropertyValue('--primary-bg') || '#1a1d23'\n                : getComputedStyle(document.documentElement).getPropertyValue('--primary-bg') || '#f8f9fc';\n        };\n        \n        backgroundContainer.style.cssText = `\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n            pointer-events: none;\n            overflow: hidden;\n            background-color: ${getBackgroundColor()};\n            transition: background-color 0.3s ease;\n        `;\n        \n        // Create circles container\n        const circlesContainer = document.createElement('div');\n        circlesContainer.className = 'floating-circles-container';\n        circlesContainer.style.cssText = `\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n        `;\n        \n        // Create floating interactive circles\n        const circleCount = 20;\n        \n        console.log(`Creating ${circleCount} interactive circles...`);\n        \n        for (let i = 0; i < circleCount; i++) {\n            const circle = document.createElement('div');\n            circle.className = 'floating-circle';\n            \n            // Random properties for each circle\n            const size = Math.random() * 80 + 20; // 20px to 100px\n            const startX = Math.random() * window.innerWidth;\n            const startY = Math.random() * window.innerHeight;\n            const speed = Math.random() * 1.5 + 0.5; // 0.5 to 2 speed multiplier\n            // Increase base opacity for better visibility, especially in light mode\n            const opacity = 0.2 + Math.random() * 0.4; // 0.2 to 0.6\n            \n            // Circle data object\n            const circleData = {\n                element: circle,\n                x: startX,\n                y: startY,\n                vx: (Math.random() - 0.5) * 2, // Random horizontal velocity\n                vy: (Math.random() - 0.5) * 2, // Random vertical velocity\n                size: size,\n                speed: speed,\n                baseOpacity: opacity,\n                colorType: Math.random() > 0.5 ? 'primary' : 'secondary' // Theme-aware color type\n            };\n            \n            // Get theme-aware colors with better contrast for light mode\n            const getThemeColor = (colorType) => {\n                const isDark = document.body.classList.contains('dark-mode');\n                if (colorType === 'primary') {\n                    return isDark \n                        ? getComputedStyle(document.documentElement).getPropertyValue('--statwise-blue-light') || '#1976d2'\n                        : getComputedStyle(document.documentElement).getPropertyValue('--statwise-blue') || '#0e639c';\n                } else {\n                    // For light mode secondary, use a darker color for better contrast\n                    return isDark \n                        ? getComputedStyle(document.documentElement).getPropertyValue('--text-secondary') || '#b8bcc3'\n                        : '#4a5568'; // Darker gray for better contrast in light mode\n                }\n            };\n            \n            const circleColor = getThemeColor(circleData.colorType);\n            \n            // Style the circle with theme colors\n            circle.style.cssText = `\n                position: absolute;\n                width: ${size}px;\n                height: ${size}px;\n                border-radius: 50%;\n                background: radial-gradient(circle, \n                    ${circleColor}${Math.floor(opacity * 255).toString(16).padStart(2, '0')}, \n                    transparent\n                );\n                left: ${startX}px;\n                top: ${startY}px;\n                pointer-events: none;\n                transition: opacity 0.3s ease, background 0.3s ease;\n                will-change: transform, opacity;\n                z-index: -1;\n            `;\n            \n            circles.push(circleData);\n            circlesContainer.appendChild(circle);\n        }\n        \n        // Mouse tracking for interaction\n        const handleMouseMove = (e) => {\n            mouseX = e.clientX;\n            mouseY = e.clientY;\n        };\n        \n        // Touch support for mobile\n        const handleTouchMove = (e) => {\n            if (e.touches.length > 0) {\n                mouseX = e.touches[0].clientX;\n                mouseY = e.touches[0].clientY;\n            }\n        };\n        \n        // Function to update circle colors and background based on current theme\n        const updateCircleColors = () => {\n            // Update background container color\n            const getBackgroundColor = () => {\n                const isDark = document.body.classList.contains('dark-mode');\n                return isDark \n                    ? getComputedStyle(document.documentElement).getPropertyValue('--primary-bg') || '#1a1d23'\n                    : getComputedStyle(document.documentElement).getPropertyValue('--primary-bg') || '#f8f9fc';\n            };\n            backgroundContainer.style.backgroundColor = getBackgroundColor();\n            \n            // Update circle colors\n            circles.forEach((circle) => {\n                const getThemeColor = (colorType) => {\n                    const isDark = document.body.classList.contains('dark-mode');\n                    if (colorType === 'primary') {\n                        return isDark \n                            ? getComputedStyle(document.documentElement).getPropertyValue('--statwise-blue-light') || '#1976d2'\n                            : getComputedStyle(document.documentElement).getPropertyValue('--statwise-blue') || '#0e639c';\n                    } else {\n                        // For light mode secondary, use a darker color for better contrast\n                        return isDark \n                            ? getComputedStyle(document.documentElement).getPropertyValue('--text-secondary') || '#b8bcc3'\n                            : '#4a5568'; // Darker gray for better contrast in light mode\n                    }\n                };\n                \n                const circleColor = getThemeColor(circle.colorType);\n                const opacity = circle.baseOpacity;\n                \n                // Update the background with new theme color\n                circle.element.style.background = `radial-gradient(circle, \n                    ${circleColor}${Math.floor(opacity * 255).toString(16).padStart(2, '0')}, \n                    transparent\n                )`;\n            });\n        };\n        \n        // Listen for theme changes\n        const handleThemeChange = () => {\n            updateCircleColors();\n        };\n        window.addEventListener('themechange', handleThemeChange);\n        \n        // Animation loop\n        const animateCircles = () => {\n            circles.forEach((circle, index) => {\n                // Update position based on velocity\n                circle.x += circle.vx * circle.speed;\n                circle.y += circle.vy * circle.speed;\n                \n                // Bounce off edges\n                if (circle.x <= 0 || circle.x >= window.innerWidth - circle.size) {\n                    circle.vx *= -1;\n                    circle.x = Math.max(0, Math.min(window.innerWidth - circle.size, circle.x));\n                }\n                if (circle.y <= 0 || circle.y >= window.innerHeight - circle.size) {\n                    circle.vy *= -1;\n                    circle.y = Math.max(0, Math.min(window.innerHeight - circle.size, circle.y));\n                }\n                \n                // Calculate distance to mouse for interaction\n                const dx = mouseX - (circle.x + circle.size / 2);\n                const dy = mouseY - (circle.y + circle.size / 2);\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                \n                // Mouse interaction effect\n                const maxInteractionDistance = 200;\n                if (distance < maxInteractionDistance) {\n                    const influence = (maxInteractionDistance - distance) / maxInteractionDistance;\n                    \n                    // Gentle attraction/repulsion based on circle index\n                    const attraction = index % 3 === 0 ? -0.02 : 0.01;\n                    circle.vx += (dx / distance) * influence * attraction;\n                    circle.vy += (dy / distance) * influence * attraction;\n                    \n                    // Increase opacity when near mouse\n                    const interactOpacity = circle.baseOpacity + influence * 0.4;\n                    circle.element.style.opacity = Math.min(interactOpacity, 0.8);\n                } else {\n                    // Return to base opacity when far from mouse\n                    circle.element.style.opacity = circle.baseOpacity;\n                }\n                \n                // Apply friction\n                circle.vx *= 0.999;\n                circle.vy *= 0.999;\n                \n                // Update DOM position\n                circle.element.style.transform = `translate(${circle.x}px, ${circle.y}px)`;\n            });\n            \n            if (createdElements) {\n                animationId = requestAnimationFrame(animateCircles);\n            }\n        };\n        \n        // Handle window resize\n        const handleResize = () => {\n            circles.forEach(circle => {\n                circle.x = Math.min(circle.x, window.innerWidth - circle.size);\n                circle.y = Math.min(circle.y, window.innerHeight - circle.size);\n            });\n        };\n        \n        // Add event listeners\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('touchmove', handleTouchMove);\n        window.addEventListener('resize', handleResize);\n        \n        backgroundContainer.appendChild(circlesContainer);\n        document.body.insertBefore(backgroundContainer, document.body.firstChild);\n        createdElements = true;\n        \n        // Start animation\n        animateCircles();\n        \n        console.log('✅ Interactive circles background created and animated');\n    }\n\n    // Enhanced cleanup function\n    return () => {\n        if (backgroundContainer && createdElements) {\n            createdElements = false;\n            if (animationId) {\n                cancelAnimationFrame(animationId);\n            }\n            document.removeEventListener('mousemove', handleMouseMove);\n            document.removeEventListener('touchmove', handleTouchMove);\n            window.removeEventListener('resize', handleResize);\n            window.removeEventListener('themechange', handleThemeChange);\n            backgroundContainer.remove();\n            console.log('🧹 Interactive circles background cleaned up');\n        }\n    };\n}\n\n/**\n * Initializes the theme system\n */\nfunction initializeTheme() {\n    console.log('🎨 Initializing theme system...');\n    \n    // Check for saved theme preference or default to 'light'\n    const savedTheme = localStorage.getItem('statwise-theme') || 'light';\n    console.log('Current saved theme:', savedTheme);\n    \n    applyTheme(savedTheme);\n    \n    // Listen for theme changes\n    window.addEventListener('themechange', (e) => {\n        applyTheme(e.detail.theme);\n    });\n    \n    console.log('✅ Theme system initialized successfully');\n}\n\n/**\n * Applies the specified theme while preserving StatWise blue color scheme\n * @param {string} theme - 'light' or 'dark'\n */\nfunction applyTheme(theme) {\n    console.log(`🎨 Applying enhanced theme: ${theme}`);\n    \n    const body = document.body;\n    const html = document.documentElement;\n    \n    // Remove existing theme classes\n    body.classList.remove('light-mode', 'dark-mode');\n    html.classList.remove('light-mode', 'dark-mode');\n    \n    // Apply new theme with enhanced styling\n    if (theme === 'dark') {\n        body.classList.add('dark-mode');\n        html.classList.add('dark-mode');\n        \n        // Update CSS custom properties for dark theme while preserving blue\n        document.documentElement.style.setProperty('--primary-bg', '#1a1d23');\n        document.documentElement.style.setProperty('--secondary-bg', '#2a2f36');\n        document.documentElement.style.setProperty('--card-bg', '#343a41');\n        document.documentElement.style.setProperty('--text-primary', '#ffffff');\n        document.documentElement.style.setProperty('--text-secondary', '#b8bcc3');\n        document.documentElement.style.setProperty('--border-color', '#4a5159');\n        // Preserve StatWise blue\n        document.documentElement.style.setProperty('--statwise-blue', '#0e639c');\n        document.documentElement.style.setProperty('--statwise-blue-light', '#1976d2');\n        document.documentElement.style.setProperty('--statwise-blue-dark', '#0d5488');\n        \n        console.log('✅ Enhanced dark mode applied with preserved blue theme');\n    } else {\n        body.classList.add('light-mode');\n        html.classList.add('light-mode');\n        \n        // Update CSS custom properties for light theme while preserving blue\n        document.documentElement.style.setProperty('--primary-bg', '#f8f9fc');\n        document.documentElement.style.setProperty('--secondary-bg', '#ffffff');\n        document.documentElement.style.setProperty('--card-bg', '#ffffff');\n        document.documentElement.style.setProperty('--text-primary', '#1a1a1c');\n        document.documentElement.style.setProperty('--text-secondary', '#6b7280');\n        document.documentElement.style.setProperty('--border-color', '#e5e7eb');\n        // Preserve StatWise blue\n        document.documentElement.style.setProperty('--statwise-blue', '#0e639c');\n        document.documentElement.style.setProperty('--statwise-blue-light', '#1976d2');\n        document.documentElement.style.setProperty('--statwise-blue-dark', '#0d5488');\n        \n        console.log('✅ Enhanced light mode applied with preserved blue theme');\n    }\n    \n    // Save theme preference\n    localStorage.setItem('statwise-theme', theme);\n    \n    console.log(`✅ Enhanced theme applied successfully: ${theme}`);\n}\n\n/**\n * Toggles between light and dark themes\n */\nfunction toggleTheme() {\n    const currentTheme = localStorage.getItem('statwise-theme') || 'light';\n    const newTheme = currentTheme === 'light' ? 'dark' : 'light';\n    \n    applyTheme(newTheme);\n    \n    // Dispatch theme change event\n    window.dispatchEvent(new CustomEvent('themechange', {\n        detail: { theme: newTheme }\n    }));\n    \n    return newTheme;\n}\n\n/**\n * Creates a new interactive background animation for auth pages\n * Animated floating geometric shapes (circles and squares) that move and react to mouse movement\n * Colors match app theme, no gradients\n * Returns a cleanup function\n */\nfunction initAuthBackgroundAnimation() {\n    // Remove any previous background\n    const oldBg = document.getElementById('auth-bg-animation');\n    if (oldBg) oldBg.remove();\n\n    // Create canvas for animation\n    const canvas = document.createElement('canvas');\n    canvas.id = 'auth-bg-animation';\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.width = '100vw';\n    canvas.style.height = '100vh';\n    canvas.style.zIndex = '-1';\n    canvas.style.pointerEvents = 'none';\n    document.body.appendChild(canvas);\n\n    // Set canvas size\n    function resizeCanvas() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n    }\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Theme colors\n    let bgColor = '#ffffff';\n    let accentColor = getComputedStyle(document.documentElement).getPropertyValue('--statwise-accent') || '#0e639c';\n    let shapeColor = getComputedStyle(document.documentElement).getPropertyValue('--statwise-shape') || '#0e639c';\n    // Detect dark mode\n    if (document.body.classList.contains('dark-mode')) {\n        bgColor = '#2d2d30';\n        accentColor = '#0e639c';\n        shapeColor = '#ffffff';\n    }\n\n    // Generate shapes\n    const shapes = [];\n    const numShapes = 24;\n    for (let i = 0; i < numShapes; i++) {\n        shapes.push({\n            x: Math.random() * canvas.width,\n            y: Math.random() * canvas.height,\n            size: 20 + Math.random() * 30,\n            dx: (Math.random() - 0.5) * 1.5,\n            dy: (Math.random() - 0.5) * 1.5,\n            type: Math.random() > 0.5 ? 'circle' : 'square',\n            color: Math.random() > 0.5 ? accentColor : shapeColor\n        });\n    }\n\n    // Mouse interaction\n    let mouseX = canvas.width / 2;\n    let mouseY = canvas.height / 2;\n    window.addEventListener('mousemove', e => {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n    });\n\n    // Animation loop\n    let running = true;\n    function animate() {\n        if (!running) return;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = bgColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        for (const s of shapes) {\n            // Move shapes\n            s.x += s.dx;\n            s.y += s.dy;\n            // Bounce off edges\n            if (s.x < 0 || s.x > canvas.width) s.dx *= -1;\n            if (s.y < 0 || s.y > canvas.height) s.dy *= -1;\n            // Mouse repulsion\n            const dist = Math.hypot(mouseX - s.x, mouseY - s.y);\n            if (dist < 100) {\n                const angle = Math.atan2(s.y - mouseY, s.x - mouseX);\n                s.x += Math.cos(angle) * 2;\n                s.y += Math.sin(angle) * 2;\n            }\n            // Draw shape\n            ctx.save();\n            ctx.globalAlpha = 0.7;\n            ctx.fillStyle = s.color;\n            if (s.type === 'circle') {\n                ctx.beginPath();\n                ctx.arc(s.x, s.y, s.size / 2, 0, Math.PI * 2);\n                ctx.fill();\n            } else {\n                ctx.fillRect(s.x - s.size / 2, s.y - s.size / 2, s.size, s.size);\n            }\n            ctx.restore();\n        }\n        requestAnimationFrame(animate);\n    }\n    animate();\n\n    // Cleanup function\n    return function cleanup() {\n        running = false;\n        window.removeEventListener('resize', resizeCanvas);\n        canvas.remove();\n    };\n}\n\nexport { initInteractiveBackground, initializeTheme, applyTheme, toggleTheme, initAuthBackgroundAnimation };","size_bytes":19703},"index.js":{"content":"// This file is intentionally left blank.\n// The application has been refactored to use client-side logic\n// instead of Firebase Cloud Functions to adhere to the free-tier-only requirement.\n// The original functions can be found in the project's version history if needed.","size_bytes":272},"Pages/manage-subscription.js":{"content":"","size_bytes":0},"robot.md":{"content":"# StatWise AI Prediction System Architecture\n\n## Overview\n\nThis document outlines the architecture and implementation strategy for building the AI prediction system that powers StatWise's sports predictions. The system should integrate seamlessly with the existing Progressive Web App architecture while providing accurate, real-time football match predictions with confidence ratings.\n\n## Core Requirements\n\n### Integration with Existing App Structure\n- **Frontend Integration**: Predictions must display through the existing prediction card components in `Pages/home.html`\n- **Firebase Integration**: All prediction data should be stored in Firestore collections for real-time updates\n- **Subscription Tiers**: AI predictions must respect the existing tier system (Free, Premium, VIP, VVIP)\n- **Real-time Updates**: Push notifications via Firebase Cloud Messaging for new predictions\n\n### Data Sources and Collection\n\n#### Primary Data Requirements\n1. **Match Data**\n   - Team statistics (goals scored/conceded, possession, shots)\n   - Player performance metrics (injuries, form, transfers)\n   - Historical head-to-head records\n   - League standings and form tables\n\n2. **Real-time Data Feeds**\n   - Live match events and statistics\n   - Odds movements from multiple bookmakers\n   - Weather conditions for match venues\n   - Team news and lineups\n\n#### Recommended Data Providers\n- **Sports APIs**: SportRadar, The Sports DB, Football-Data.org\n- **Odds Data**: OddsAPI, Pinnacle API, Betfair Exchange\n- **News Sources**: ESPN API, BBC Sport feeds\n- **Weather Data**: OpenWeatherMap API for venue conditions\n\n### AI Model Architecture\n\n#### Machine Learning Pipeline\n1. **Data Preprocessing**\n   - Clean and normalize statistical data\n   - Feature engineering for team form, momentum, strength ratings\n   - Time-series analysis for performance trends\n   - Handling missing data and outliers\n\n2. **Model Types to Implement**\n   - **Ensemble Methods**: Random Forest + Gradient Boosting for match outcomes\n   - **Neural Networks**: LSTM for sequence analysis of team performance\n   - **Probabilistic Models**: Bayesian networks for uncertainty quantification\n   - **Market Analysis**: Odds-based models for value bet identification\n\n3. **Feature Engineering**\n   - Rolling averages for team statistics (5, 10, 15 game windows)\n   - Elo rating system for team strength\n   - Home advantage calculations\n   - Player absence impact scoring\n   - Motivational factors (league position, relegation battles)\n\n#### Prediction Types and Confidence Calculation\n```javascript\n// Expected prediction structure matching the app's format\nconst predictionStructure = {\n  matchId: \"unique_identifier\",\n  homeTeam: \"Arsenal\",\n  awayTeam: \"Chelsea\", \n  prediction: \"Arsenal Win\", // or \"Draw\", \"Away Win\", \"Over 2.5\", etc.\n  confidence: 80, // 0-100 percentage\n  odds: 1.85,\n  reasoning: \"Arsenal's strong home form and Chelsea's defensive issues\",\n  kickoffTime: \"2025-09-06T19:30:00Z\",\n  league: \"premier-league\",\n  tier: \"premium\" // Free users see basic predictions only\n}\n```\n\n### Backend Architecture\n\n#### Firebase Cloud Functions Structure\n```\nfunctions/\n├── predictions/\n│   ├── generatePredictions.js    // Main prediction generation\n│   ├── updateOdds.js            // Real-time odds monitoring\n│   ├── dataCollection.js        // Fetch match and team data\n│   └── confidenceCalculator.js  // Confidence scoring algorithm\n├── notifications/\n│   ├── pushNotifications.js     // Send prediction alerts\n│   └── emailDigests.js          // Weekly prediction summaries\n└── utils/\n    ├── dataValidation.js        // Input data validation\n    ├── tierManager.js           // Subscription tier logic\n    └── rateLimiting.js          // API call management\n```\n\n#### Firestore Database Schema\n```\ncollections/\n├── predictions/\n│   └── {predictionId}\n│       ├── matchData: object\n│       ├── aiPrediction: object\n│       ├── confidence: number\n│       ├── timestamp: timestamp\n│       └── tier: string\n├── matches/\n│   └── {matchId}\n│       ├── teams: object\n│       ├── statistics: object\n│       ├── odds: object\n│       └── status: string\n├── teamStats/\n│   └── {teamId}\n│       ├── currentForm: object\n│       ├── seasonStats: object\n│       └── playerData: array\n└── predictionAccuracy/\n    └── {date}\n        ├── correctPredictions: number\n        ├── totalPredictions: number\n        └── confidenceAccuracy: object\n```\n\n### Implementation Phases\n\n#### Phase 1: Data Foundation (Week 1-2)\n- Set up data collection pipelines for match data\n- Implement basic statistical models\n- Create Firestore schemas for storing predictions\n- Build simple prediction cards matching the existing UI\n\n#### Phase 2: AI Model Development (Week 3-4)\n- Develop and train machine learning models\n- Implement confidence calculation algorithms\n- Create prediction generation Cloud Functions\n- Add tier-based access control\n\n#### Phase 3: Real-time Integration (Week 5-6)\n- Connect predictions to the existing homepage display\n- Implement push notifications for new predictions\n- Add real-time odds monitoring and updates\n- Create prediction accuracy tracking\n\n#### Phase 4: Enhancement & Optimization (Week 7-8)\n- Improve model accuracy based on performance data\n- Add advanced prediction types (correct score, goal scorers)\n- Implement betting value calculations\n- Add prediction explanation and reasoning\n\n### Integration with Existing App Features\n\n#### Homepage Display Integration\n```javascript\n// Predictions should populate the existing card structure\nfunction displayAIPredictions(predictions) {\n    const container = document.querySelector('.predictions-container');\n    predictions.forEach(prediction => {\n        const card = createPredictionCard(prediction);\n        container.appendChild(card);\n    });\n}\n\n// Existing card structure from Pages/home.html should be maintained\nfunction createPredictionCard(prediction) {\n    return `\n        <div class=\"prediction-card ${getConfidenceClass(prediction.confidence)}\">\n            <h2 class=\"match-title\">${prediction.homeTeam} vs ${prediction.awayTeam}</h2>\n            <p class=\"prediction-detail\">Prediction: \n                <span class=\"ai-pick\">${prediction.prediction}</span>\n            </p>\n            <p class=\"odds\">Odds: ${prediction.odds}</p>\n            <p class=\"match-time\">Kickoff: ${formatTime(prediction.kickoffTime)}</p>\n            <div class=\"confidence\">\n                <span>Confidence: ${prediction.confidence}%</span>\n                <div class=\"confidence-bar\">\n                    <div class=\"confidence-fill\" style=\"width: ${prediction.confidence}%;\"></div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n```\n\n#### Search and Filtering Integration\n- AI predictions must work with the existing search functionality\n- League tabs should filter AI predictions by competition\n- Commands like `/c75` should filter by confidence level\n- Predictions should be searchable by team names and match details\n\n#### Subscription Tier Integration\n```javascript\n// Tier-based prediction access\nconst tierLimits = {\n    free: {\n        predictionsPerDay: 3,\n        confidenceThreshold: 60,\n        leagues: ['premier-league', 'la-liga', 'bundesliga']\n    },\n    premium: {\n        predictionsPerDay: 10,\n        confidenceThreshold: 50,\n        leagues: 'all'\n    },\n    vip: {\n        predictionsPerDay: 25,\n        confidenceThreshold: 40,\n        leagues: 'all',\n        features: ['live_updates', 'value_bets']\n    },\n    vvip: {\n        predictionsPerDay: 'unlimited',\n        confidenceThreshold: 30,\n        leagues: 'all',\n        features: ['live_updates', 'value_bets', 'custom_models']\n    }\n};\n```\n\n### Performance and Scalability\n\n#### Caching Strategy\n- Cache predictions for 30 minutes to reduce API calls\n- Use Firebase Hosting for static prediction data\n- Implement CDN for frequently accessed match statistics\n\n#### Rate Limiting and Costs\n- Limit external API calls to stay within budget constraints\n- Batch process predictions during off-peak hours\n- Use free-tier friendly Firebase features where possible\n\n#### Monitoring and Analytics\n- Track prediction accuracy by confidence level\n- Monitor user engagement with different prediction types\n- Analyze which leagues generate the most interest\n\n### Security and Compliance\n\n#### Data Protection\n- Encrypt sensitive prediction algorithms\n- Implement secure API key management\n- Add prediction tampering detection\n\n#### Compliance Considerations\n- Responsible gambling warnings for high-risk predictions\n- Age verification for prediction access\n- Clear disclaimers about prediction accuracy\n\n## Getting Started\n\n### Prerequisites\n- Firebase project with Cloud Functions enabled\n- External sports data API credentials\n- Machine learning environment setup (Python/TensorFlow or Node.js/ML libraries)\n- Historical sports data for model training\n\n### Initial Setup Steps\n1. Clone the existing StatWise repository\n2. Set up Firebase Cloud Functions in the `functions/` directory\n3. Configure external API credentials in Firebase environment\n4. Import historical match data for model training\n5. Deploy basic prediction generation functions\n6. Test integration with existing UI components\n\n### Development Workflow\n1. Develop models locally with historical data\n2. Test predictions against known outcomes\n3. Deploy to Firebase Cloud Functions\n4. Integrate with existing app UI\n5. Monitor accuracy and user engagement\n6. Iterate and improve based on performance\n\n## Notes for Implementation\n\n- **Maintain UI Consistency**: All predictions must use the existing card design and styling\n- **Progressive Enhancement**: Start with simple models and gradually add complexity\n- **User Experience**: Ensure predictions load quickly and update smoothly\n- **Cost Management**: Monitor Firebase usage and external API costs closely\n- **Testing Strategy**: Implement comprehensive testing for prediction accuracy and app integration\n\nThis architecture ensures the AI prediction system integrates seamlessly with StatWise's existing structure while providing scalable, accurate predictions that enhance the user experience across all subscription tiers.","size_bytes":10413},"logo.js":{"content":"\n// logo.js - Football League and Team Logo Links\n// StatWise PWA Logo Configuration\n\nexport const LEAGUE_LOGOS = {\n  // European Leagues\n  'premier-league': 'https://logos-world.net/wp-content/uploads/2020/06/Premier-League-Logo.png',\n  'la-liga': 'https://logos-world.net/wp-content/uploads/2020/06/La-Liga-Logo.png',\n  'bundesliga': 'https://logos-world.net/wp-content/uploads/2020/06/Bundesliga-Logo.png',\n  'serie-a': 'https://logos-world.net/wp-content/uploads/2020/06/Serie-A-Logo.png',\n  'ligue1': 'https://logos-world.net/wp-content/uploads/2020/06/Ligue-1-Logo.png',\n  'primeira-liga': 'https://logoeps.com/wp-content/uploads/2013/12/primeira-liga-vector-logo.png',\n  'eredivisie': 'https://logos-world.net/wp-content/uploads/2020/06/Eredivisie-Logo.png',\n  'scottish-premiership': 'https://logos-world.net/wp-content/uploads/2020/06/Scottish-Premiership-Logo.png',\n  'belgian-pro-league': 'https://logos-world.net/wp-content/uploads/2020/06/Belgian-Pro-League-Logo.png',\n  'super-lig': 'https://logos-world.net/wp-content/uploads/2020/06/Super-Lig-Logo.png',\n  \n  // International Competitions\n  'champions-league': 'https://logos-world.net/wp-content/uploads/2020/06/UEFA-Champions-League-Logo.png',\n  'europa-league': 'https://logos-world.net/wp-content/uploads/2020/06/UEFA-Europa-League-Logo.png',\n  'europa-conference-league': 'https://logos-world.net/wp-content/uploads/2021/05/UEFA-Europa-Conference-League-Logo.png',\n  'copa-libertadores': 'https://logos-world.net/wp-content/uploads/2020/06/Copa-Libertadores-Logo.png',\n  'club-world-cup': 'https://logos-world.net/wp-content/uploads/2020/06/FIFA-Club-World-Cup-Logo.png',\n  \n  // South American Leagues\n  'brasileiro-serie-a': 'https://logos-world.net/wp-content/uploads/2020/06/Brasileirao-Logo.png',\n  'liga-profesional': 'https://logos-world.net/wp-content/uploads/2020/06/Liga-Profesional-Argentina-Logo.png',\n  \n  // North American Leagues\n  'mls': 'https://logos-world.net/wp-content/uploads/2020/06/MLS-Logo.png',\n  'liga-mx': 'https://logos-world.net/wp-content/uploads/2020/06/Liga-MX-Logo.png',\n  \n  // Asian Leagues\n  'saudi-pro-league': 'https://logos-world.net/wp-content/uploads/2020/06/Saudi-Pro-League-Logo.png',\n  'j1-league': 'https://logos-world.net/wp-content/uploads/2020/06/J1-League-Logo.png',\n  'k-league': 'https://logos-world.net/wp-content/uploads/2020/06/K-League-1-Logo.png',\n  \n  // African Leagues\n  'egyptian-premier': 'https://logos-world.net/wp-content/uploads/2020/06/Egyptian-Premier-League-Logo.png',\n  'south-african-premier': 'https://logos-world.net/wp-content/uploads/2020/06/South-African-Premier-Soccer-League-Logo.png',\n  'botola-pro': 'https://logos-world.net/wp-content/uploads/2020/06/Botola-Pro-Logo.png'\n};\n\nexport const TEAM_LOGOS = {\n  // Premier League Teams\n  'Arsenal': 'https://logos-world.net/wp-content/uploads/2020/06/Arsenal-Logo.png',\n  'Chelsea': 'https://logos-world.net/wp-content/uploads/2020/06/Chelsea-Logo.png',\n  'Liverpool': 'https://logos-world.net/wp-content/uploads/2020/06/Liverpool-Logo.png',\n  'Manchester City': 'https://logos-world.net/wp-content/uploads/2020/06/Manchester-City-Logo.png',\n  'Manchester United': 'https://logos-world.net/wp-content/uploads/2020/06/Manchester-United-Logo.png',\n  'Tottenham': 'https://logos-world.net/wp-content/uploads/2020/06/Tottenham-Logo.png',\n  'Newcastle': 'https://logos-world.net/wp-content/uploads/2020/06/Newcastle-United-Logo.png',\n  'Brighton': 'https://logos-world.net/wp-content/uploads/2020/06/Brighton-Hove-Albion-Logo.png',\n  'Aston Villa': 'https://logos-world.net/wp-content/uploads/2020/06/Aston-Villa-Logo.png',\n  'West Ham': 'https://logos-world.net/wp-content/uploads/2020/06/West-Ham-United-Logo.png',\n  \n  // La Liga Teams\n  'Real Madrid': 'https://logos-world.net/wp-content/uploads/2020/06/Real-Madrid-Logo.png',\n  'Barcelona': 'https://logos-world.net/wp-content/uploads/2020/06/Barcelona-Logo.png',\n  'Atletico Madrid': 'https://logos-world.net/wp-content/uploads/2020/06/Atletico-Madrid-Logo.png',\n  'Sevilla': 'https://logos-world.net/wp-content/uploads/2020/06/Sevilla-Logo.png',\n  'Valencia': 'https://logos-world.net/wp-content/uploads/2020/06/Valencia-Logo.png',\n  'Villarreal': 'https://logos-world.net/wp-content/uploads/2020/06/Villarreal-Logo.png',\n  'Athletic Bilbao': 'https://logos-world.net/wp-content/uploads/2020/06/Athletic-Bilbao-Logo.png',\n  'Real Sociedad': 'https://logos-world.net/wp-content/uploads/2020/06/Real-Sociedad-Logo.png',\n  \n  // Bundesliga Teams\n  'Bayern Munich': 'https://logos-world.net/wp-content/uploads/2020/06/Bayern-Munich-Logo.png',\n  'Borussia Dortmund': 'https://logos-world.net/wp-content/uploads/2020/06/Borussia-Dortmund-Logo.png',\n  'Bayern': 'https://logos-world.net/wp-content/uploads/2020/06/Bayern-Munich-Logo.png',\n  'Dortmund': 'https://logos-world.net/wp-content/uploads/2020/06/Borussia-Dortmund-Logo.png',\n  'RB Leipzig': 'https://logos-world.net/wp-content/uploads/2020/06/RB-Leipzig-Logo.png',\n  'Bayer Leverkusen': 'https://logos-world.net/wp-content/uploads/2020/06/Bayer-Leverkusen-Logo.png',\n  'Eintracht Frankfurt': 'https://logos-world.net/wp-content/uploads/2020/06/Eintracht-Frankfurt-Logo.png',\n  \n  // Serie A Teams\n  'Juventus': 'https://logos-world.net/wp-content/uploads/2020/06/Juventus-Logo.png',\n  'AC Milan': 'https://logos-world.net/wp-content/uploads/2020/06/AC-Milan-Logo.png',\n  'Inter Milan': 'https://logos-world.net/wp-content/uploads/2020/06/Inter-Milan-Logo.png',\n  'Napoli': 'https://logos-world.net/wp-content/uploads/2020/06/Napoli-Logo.png',\n  'AS Roma': 'https://logos-world.net/wp-content/uploads/2020/06/AS-Roma-Logo.png',\n  'Lazio': 'https://logos-world.net/wp-content/uploads/2020/06/Lazio-Logo.png',\n  'Atalanta': 'https://logos-world.net/wp-content/uploads/2020/06/Atalanta-Logo.png',\n  'Fiorentina': 'https://logos-world.net/wp-content/uploads/2020/06/Fiorentina-Logo.png',\n  \n  // Ligue 1 Teams\n  'PSG': 'https://logos-world.net/wp-content/uploads/2020/06/Paris-Saint-Germain-Logo.png',\n  'Paris Saint-Germain': 'https://logos-world.net/wp-content/uploads/2020/06/Paris-Saint-Germain-Logo.png',\n  'Marseille': 'https://logos-world.net/wp-content/uploads/2020/06/Marseille-Logo.png',\n  'Lyon': 'https://logos-world.net/wp-content/uploads/2020/06/Lyon-Logo.png',\n  'Monaco': 'https://logos-world.net/wp-content/uploads/2020/06/Monaco-Logo.png',\n  'Lille': 'https://logos-world.net/wp-content/uploads/2020/06/Lille-Logo.png',\n  'Nice': 'https://logos-world.net/wp-content/uploads/2020/06/Nice-Logo.png',\n  \n  // Eredivisie Teams\n  'Ajax': 'https://logos-world.net/wp-content/uploads/2020/06/Ajax-Logo.png',\n  'PSV': 'https://logos-world.net/wp-content/uploads/2020/06/PSV-Eindhoven-Logo.png',\n  'PSV Eindhoven': 'https://logos-world.net/wp-content/uploads/2020/06/PSV-Eindhoven-Logo.png',\n  'Feyenoord': 'https://logos-world.net/wp-content/uploads/2020/06/Feyenoord-Logo.png',\n  \n  // Scottish Teams\n  'Celtic': 'https://logos-world.net/wp-content/uploads/2020/06/Celtic-Logo.png',\n  'Rangers': 'https://logos-world.net/wp-content/uploads/2020/06/Rangers-Logo.png',\n  \n  // MLS Teams\n  'LA Galaxy': 'https://logos-world.net/wp-content/uploads/2020/06/LA-Galaxy-Logo.png',\n  'LAFC': 'https://logos-world.net/wp-content/uploads/2020/06/LAFC-Logo.png',\n  'Seattle Sounders': 'https://logos-world.net/wp-content/uploads/2020/06/Seattle-Sounders-Logo.png',\n  'Portland Timbers': 'https://logos-world.net/wp-content/uploads/2020/06/Portland-Timbers-Logo.png',\n  \n  // Brazilian Teams\n  'Flamengo': 'https://logos-world.net/wp-content/uploads/2020/06/Flamengo-Logo.png',\n  'Palmeiras': 'https://logos-world.net/wp-content/uploads/2020/06/Palmeiras-Logo.png',\n  'Corinthians': 'https://logos-world.net/wp-content/uploads/2020/06/Corinthians-Logo.png',\n  'São Paulo': 'https://logos-world.net/wp-content/uploads/2020/06/Sao-Paulo-Logo.png',\n  'Santos': 'https://logos-world.net/wp-content/uploads/2020/06/Santos-Logo.png',\n  \n  // Saudi Pro League Teams\n  'Al Hilal': 'https://logos-world.net/wp-content/uploads/2020/06/Al-Hilal-Logo.png',\n  'Al Nassr': 'https://logos-world.net/wp-content/uploads/2020/06/Al-Nassr-Logo.png',\n  'Al Ittihad': 'https://logos-world.net/wp-content/uploads/2020/06/Al-Ittihad-Logo.png',\n  \n  // African Teams\n  'Kaizer Chiefs': 'https://logos-world.net/wp-content/uploads/2020/06/Kaizer-Chiefs-Logo.png',\n  'Orlando Pirates': 'https://logos-world.net/wp-content/uploads/2020/06/Orlando-Pirates-Logo.png',\n  'Raja Casablanca': 'https://logos-world.net/wp-content/uploads/2020/06/Raja-Casablanca-Logo.png',\n  'Wydad Casablanca': 'https://logos-world.net/wp-content/uploads/2020/06/Wydad-Casablanca-Logo.png',\n  \n  // Portuguese Teams\n  'Benfica': 'https://logos-world.net/wp-content/uploads/2020/06/Benfica-Logo.png',\n  'Porto': 'https://logos-world.net/wp-content/uploads/2020/06/Porto-Logo.png',\n  'Sporting CP': 'https://logos-world.net/wp-content/uploads/2020/06/Sporting-CP-Logo.png',\n  \n  // Turkish Teams\n  'Galatasaray': 'https://logos-world.net/wp-content/uploads/2020/06/Galatasaray-Logo.png',\n  'Fenerbahçe': 'https://logos-world.net/wp-content/uploads/2020/06/Fenerbahce-Logo.png',\n  'Besiktas': 'https://logos-world.net/wp-content/uploads/2020/06/Besiktas-Logo.png',\n  \n  // Belgian Teams\n  'Club Brugge': 'https://logos-world.net/wp-content/uploads/2020/06/Club-Brugge-Logo.png',\n  'Anderlecht': 'https://logos-world.net/wp-content/uploads/2020/06/Anderlecht-Logo.png',\n  \n  // Copa Libertadores Teams\n  'Estudiantes': 'https://logos-world.net/wp-content/uploads/2020/06/Estudiantes-Logo.png',\n  'Atletico Nacional': 'https://logos-world.net/wp-content/uploads/2020/06/Atletico-Nacional-Logo.png'\n};\n\n// Utility functions for logo management\nexport const LogoUtils = {\n  /**\n   * Get league logo URL by league key\n   * @param {string} leagueKey - The league identifier\n   * @returns {string} Logo URL or fallback\n   */\n  getLeagueLogo(leagueKey) {\n    return LEAGUE_LOGOS[leagueKey] || LEAGUE_LOGOS['premier-league']; // Fallback to Premier League\n  },\n\n  /**\n   * Get team logo URL by team name\n   * @param {string} teamName - The team name\n   * @returns {string} Logo URL or fallback\n   */\n  getTeamLogo(teamName) {\n    // Try exact match first\n    if (TEAM_LOGOS[teamName]) {\n      return TEAM_LOGOS[teamName];\n    }\n    \n    // Try case-insensitive search\n    const teamKey = Object.keys(TEAM_LOGOS).find(\n      key => key.toLowerCase() === teamName.toLowerCase()\n    );\n    \n    if (teamKey) {\n      return TEAM_LOGOS[teamKey];\n    }\n    \n    // Try partial match for team names with variations\n    const partialMatch = Object.keys(TEAM_LOGOS).find(\n      key => key.toLowerCase().includes(teamName.toLowerCase()) || \n             teamName.toLowerCase().includes(key.toLowerCase())\n    );\n    \n    return partialMatch ? TEAM_LOGOS[partialMatch] : this.getDefaultTeamLogo();\n  },\n\n  /**\n   * Get default team logo when no match is found\n   * @returns {string} Default logo URL\n   */\n  getDefaultTeamLogo() {\n    return 'https://via.placeholder.com/64x64/0e639c/ffffff?text=FC';\n  },\n\n  /**\n   * Get default league logo when no match is found\n   * @returns {string} Default logo URL\n   */\n  getDefaultLeagueLogo() {\n    return 'https://via.placeholder.com/64x64/0e639c/ffffff?text=⚽';\n  },\n\n  /**\n   * Check if a team logo exists\n   * @param {string} teamName - The team name\n   * @returns {boolean} Whether logo exists\n   */\n  hasTeamLogo(teamName) {\n    return Boolean(this.getTeamLogo(teamName) !== this.getDefaultTeamLogo());\n  },\n\n  /**\n   * Check if a league logo exists\n   * @param {string} leagueKey - The league identifier\n   * @returns {boolean} Whether logo exists\n   */\n  hasLeagueLogo(leagueKey) {\n    return Boolean(LEAGUE_LOGOS[leagueKey]);\n  },\n\n  /**\n   * Get all available leagues\n   * @returns {Array} Array of league keys\n   */\n  getAllLeagues() {\n    return Object.keys(LEAGUE_LOGOS);\n  },\n\n  /**\n   * Get all available teams\n   * @returns {Array} Array of team names\n   */\n  getAllTeams() {\n    return Object.keys(TEAM_LOGOS);\n  },\n\n  /**\n   * Create an img element with logo\n   * @param {string} logoUrl - The logo URL\n   * @param {string} alt - Alt text\n   * @param {string} className - CSS class name\n   * @returns {HTMLElement} Image element\n   */\n  createLogoElement(logoUrl, alt = 'Logo', className = 'logo') {\n    const img = document.createElement('img');\n    img.src = logoUrl;\n    img.alt = alt;\n    img.className = className;\n    img.onerror = () => {\n      img.src = this.getDefaultTeamLogo();\n    };\n    return img;\n  },\n\n  /**\n   * Preload logos for better performance\n   * @param {Array} logoUrls - Array of logo URLs to preload\n   */\n  preloadLogos(logoUrls) {\n    logoUrls.forEach(url => {\n      const img = new Image();\n      img.src = url;\n    });\n  }\n};\n\n// Export default for easy importing\nexport default {\n  LEAGUE_LOGOS,\n  TEAM_LOGOS,\n  LogoUtils\n};\n","size_bytes":12842},"404.css":{"content":"/* /404.css */\n\n/* --- Global & Font --- */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n@font-face {\n    font-family: 'Optimistic';\n    src: url('./Assets/Fonts/Optimistic_Text_A_Md.ttf');\n}\n\n/* --- Body & Theme --- */\nbody {\n    font-family: \"Optimistic\", sans-serif;\n    background: #f4f5f7;\n    color: #1c1c1e;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    text-align: center;\n    padding: 20px;\n}\n\n/* --- Container --- */\n.error-container {\n    max-width: 450px;\n}\n\n.error-title {\n    font-size: 6rem;\n    font-weight: bold;\n    color: #0e639c;\n    margin: 0;\n}\n\n.error-subtitle {\n    font-size: 1.5rem;\n    color: #333;\n    margin-bottom: 20px;\n}\n\n.error-message {\n    color: #666;\n    margin-bottom: 30px;\n}\n\n/* --- Button Style (from styles.css) --- */\n.button {\n    display: inline-block;\n    padding: 8px 16px;\n    border-radius: 8px;\n    background: #0e639c;\n    color: #fff;\n    font-weight: bold;\n    text-decoration: none;\n    transition: background 0.3s ease;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n}\n\n.button:hover {\n    background: #0b4f7a;\n}\n\n/* --- Dark Mode --- */\n@media (prefers-color-scheme: dark) {\n    body {\n        background: #1e1e1e;\n        color: #d4d4d4;\n    }\n}","size_bytes":1293},"Auth/auth.js":{"content":"// auth.js - Supabase Authentication\nimport { supabase } from '../env.js';\nimport { showLoader, hideLoader, showSpinner, hideSpinner } from '../Loader/loader.js';\nimport { initInteractiveBackground, initializeTheme } from '../ui.js';\n\n// Global variables for auth page\nlet adsLoaded = false;\nlet adblockerDetected = false;\n\n// Initialize the auth page\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('🔐 Initializing auth page...');\n\n    // Add loading animation to auth card\n    const authCard = document.querySelector('.auth-card');\n    if (authCard) {\n        authCard.classList.add('loading');\n    }\n\n    // Test Supabase connection\n    testSupabaseConnection();\n\n    initializeTheme(); // Initialize theme system\n\n    // Initialize interactive background animation for auth pages\n    console.log('🌀 Starting auth page background animation...');\n    import('../ui.js').then(({ initAuthBackgroundAnimation }) => {\n        if (window.authBackgroundCleanup) {\n            window.authBackgroundCleanup(); // Clean up any existing animation\n        }\n        window.authBackgroundCleanup = initAuthBackgroundAnimation();\n    });\n\n    initializeAuthForms();\n    initializeAuthAds(); // Initialize ads for auth page\n\n    console.log('✅ Auth page initialized successfully');\n});\n\n// Test Supabase connection\nasync function testSupabaseConnection() {\n    try {\n        console.log('🔗 Testing Supabase connection...');\n        const { data, error } = await supabase.auth.getSession();\n        if (error) {\n            console.error('❌ Supabase connection error:', error);\n        } else {\n            console.log('✅ Supabase connected successfully');\n            if (data.session) {\n                console.log('👤 User session found:', data.session.user.email);\n            }\n        }\n    } catch (error) {\n        console.error('❌ Supabase connection test failed:', error);\n    }\n}\n\nfunction initializeAuthForms() {\n    // Login form\n    const loginForm = document.getElementById('login-form');\n    if (loginForm) {\n        loginForm.addEventListener('submit', handleLogin);\n    }\n\n    // Signup form\n    const signupForm = document.getElementById('signup-form');\n    if (signupForm) {\n        signupForm.addEventListener('submit', handleSignup);\n    }\n\n    // Forgot password form\n    const forgotPasswordForm = document.getElementById('forgot-password-form');\n    if (forgotPasswordForm) {\n        forgotPasswordForm.addEventListener('submit', handleForgotPassword);\n    }\n\n    // Theme toggle button\n    const themeToggle = document.getElementById('theme-toggle');\n    if (themeToggle) {\n        themeToggle.addEventListener('click', handleThemeToggle);\n        updateThemeIcon();\n    }\n\n    // Toggle password visibility for login\n    const loginPasswordToggle = document.getElementById('login-password-toggle');\n    if (loginPasswordToggle) {\n        loginPasswordToggle.addEventListener('click', () => togglePasswordVisibility('login-password'));\n    }\n\n    // Toggle password visibility for signup\n    const signupPasswordToggle = document.getElementById('signup-password-toggle');\n    if (signupPasswordToggle) {\n        signupPasswordToggle.addEventListener('click', () => togglePasswordVisibility('signup-password'));\n    }\n\n    // Toggle password visibility for signup confirm\n    const confirmPasswordToggle = document.getElementById('confirm-password-toggle');\n    if (confirmPasswordToggle) {\n        confirmPasswordToggle.addEventListener('click', () => togglePasswordVisibility('signup-password-confirm'));\n    }\n    // Add smooth transitions for auth page navigation\n    initializeAuthNavigation();\n\n    // Password strength indicator for signup\n    const signupPassword = document.getElementById('signup-password');\n    if (signupPassword) {\n        signupPassword.addEventListener('input', updatePasswordStrength);\n    }\n\n    // Real-time referral code validation\n    const signupReferralCode = document.getElementById('signup-referral');\n    if (signupReferralCode) {\n        signupReferralCode.addEventListener('input', debounce(validateReferralCodeInput, 500));\n    }\n}\n\n// Debounce function for input validation\nfunction debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\n// Validate referral code input in real-time\nasync function validateReferralCodeInput() {\n    const referralCodeInput = document.getElementById('signup-referral');\n    const statusElement = document.getElementById('referral-code-status');\n\n    if (!referralCodeInput || !statusElement) return;\n\n    const code = referralCodeInput.value.trim().toUpperCase();\n\n    // Clear validation if input is empty\n    if (!code) {\n        statusElement.classList.remove('show', 'success', 'error');\n        referralCodeInput.style.borderColor = '';\n        referralCodeInput.style.borderWidth = '';\n        return;\n    }\n\n    // Only validate if code is exactly 8 characters (standard referral code length)\n    if (code.length !== 8) {\n        statusElement.classList.remove('show', 'success', 'error');\n        referralCodeInput.style.borderColor = '';\n        referralCodeInput.style.borderWidth = '';\n        return;\n    }\n\n    try {\n        const { data, error } = await supabase\n            .from('referral_codes')\n            .select('user_id, username')\n            .eq('code', code)\n            .eq('active', true)\n            .single();\n\n        if (error || !data) {\n            // Invalid code - show error\n            statusElement.textContent = '❌ Invalid referral code';\n            statusElement.className = 'referral-name-display show error';\n            referralCodeInput.style.borderColor = '#d9534f';\n            referralCodeInput.style.borderWidth = '2px';\n        } else {\n            // Valid code - show success\n            statusElement.textContent = `✓ Using ${data.username}'s referral code`;\n            statusElement.className = 'referral-name-display show success';\n            referralCodeInput.style.borderColor = '#28a745';\n            referralCodeInput.style.borderWidth = '2px';\n        }\n    } catch (error) {\n        console.warn('Error validating referral code:', error);\n        statusElement.classList.remove('show', 'success', 'error');\n        referralCodeInput.style.borderColor = '';\n        referralCodeInput.style.borderWidth = '';\n    }\n}\n\nfunction handleThemeToggle(e) {\n    const button = e.target.closest('.theme-toggle');\n    if (!button) return;\n\n    // Determine target theme\n    const currentTheme = localStorage.getItem('statwise-theme') || 'light';\n    const newTheme = currentTheme === 'light' ? 'dark' : 'light';\n\n    // Apply theme change with loading animation\n    import('../ui.js').then(({ toggleTheme, initAuthBackgroundAnimation }) => {\n        toggleTheme();\n        updateThemeIcon(newTheme);\n\n        // Reinitialize background animation with new theme\n        if (window.authBackgroundCleanup) {\n            window.authBackgroundCleanup();\n        }\n        window.authBackgroundCleanup = initAuthBackgroundAnimation();\n\n        // Add loading animation to auth card\n        const authCard = document.querySelector('.auth-card');\n        if (authCard) {\n            authCard.classList.remove('loading');\n            setTimeout(() => {\n                authCard.classList.add('loading');\n            }, 10);\n        }\n    });\n}\n\nfunction updateThemeIcon(theme = null) {\n    const themeIcon = document.querySelector('.theme-icon');\n    if (!themeIcon) return;\n\n    const currentTheme = theme || localStorage.getItem('statwise-theme') || 'light';\n    themeIcon.textContent = currentTheme === 'dark' ? '☀️' : '🌙';\n}\n\n// Enhanced Error Handling Functions\nfunction showErrorMessage(elementId, message) {\n    const errorElement = document.getElementById(elementId);\n    if (!errorElement) return;\n\n    errorElement.textContent = message;\n    errorElement.className = 'error-msg show';\n    errorElement.classList.add('shake');\n\n    setTimeout(() => {\n        errorElement.classList.remove('shake');\n    }, 500);\n\n    // Auto-hide error messages after 5 seconds\n    setTimeout(() => {\n        if (errorElement.classList.contains('show')) {\n            errorElement.classList.remove('show');\n        }\n    }, 5000);\n}\n\nfunction showSuccessMessage(elementId, message) {\n    const errorElement = document.getElementById(elementId);\n    if (!errorElement) return;\n\n    errorElement.textContent = message;\n    errorElement.className = 'error-msg success show';\n\n    // Auto-hide success messages after 4 seconds\n    setTimeout(() => {\n        if (errorElement.classList.contains('show')) {\n            errorElement.classList.remove('show');\n        }\n    }, 4000);\n}\n\nfunction showWarningMessage(elementId, message) {\n    const errorElement = document.getElementById(elementId);\n    if (!errorElement) return;\n\n    errorElement.textContent = message;\n    errorElement.className = 'error-msg warning show';\n\n    // Auto-hide warning messages after 5 seconds\n    setTimeout(() => {\n        if (errorElement.classList.contains('show')) {\n            errorElement.classList.remove('show');\n        }\n    }, 5000);\n}\n\nfunction clearErrorMessages() {\n    const errorElements = document.querySelectorAll('.error-msg');\n    errorElements.forEach(element => {\n        element.classList.remove('show', 'success', 'warning');\n        element.textContent = '';\n    });\n}\n\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n\nfunction isValidPassword(password) {\n    // At least 8 characters, one uppercase, one lowercase, one number\n    if (!password || password.length < 8) return false;\n    if (!/[a-z]/.test(password)) return false;\n    if (!/[A-Z]/.test(password)) return false;\n    if (!/\\d/.test(password)) return false;\n    return true;\n}\n\nfunction getPasswordValidationErrors(password) {\n    const errors = [];\n\n    if (password.length < 8) {\n        errors.push('Must be at least 8 characters');\n    }\n    if (!/[a-z]/.test(password)) {\n        errors.push('Include a lowercase letter');\n    }\n    if (!/[A-Z]/.test(password)) {\n        errors.push('Include an uppercase letter');\n    }\n    if (!/\\d/.test(password)) {\n        errors.push('Include a number');\n    }\n\n    return errors;\n}\n\nfunction getPasswordStrength(password) {\n    let score = 0;\n    const length = password.length;\n\n    // Length scoring\n    if (length >= 8) score++;\n    if (length >= 12) score++;\n    if (length >= 16) score++;\n\n    // Character type scoring\n    if (/[a-z]/.test(password)) score++;\n    if (/[A-Z]/.test(password)) score++;\n    if (/\\d/.test(password)) score++;\n    if (/[^\\w\\s]/.test(password)) score++;\n\n    // Bonus for variety\n    const hasVariety = (/[a-z]/.test(password) && /[A-Z]/.test(password) && /\\d/.test(password));\n    if (hasVariety) score++;\n\n    // Penalty for common patterns\n    const commonPatterns = [\n        /^[a-zA-Z]+$/,  // Only letters\n        /^[0-9]+$/,     // Only numbers\n        /(.)\\1{2,}/,    // Repeated characters (aaa, 111)\n        /12345|password|qwerty|abc123/i  // Common sequences\n    ];\n\n    if (commonPatterns.some(pattern => pattern.test(password))) {\n        score = Math.max(0, score - 1);\n    }\n\n    // Calculate strength\n    if (length < 8 || score < 3) {\n        return { strength: 'weak', text: 'Weak', color: '#d9534f' };\n    } else if (score < 5) {\n        return { strength: 'medium', text: 'Medium', color: '#f0ad4e' };\n    } else if (score < 7) {\n        return { strength: 'strong', text: 'Strong', color: '#5bc0de' };\n    } else {\n        return { strength: 'very-strong', text: 'Very Strong', color: '#5cb85c' };\n    }\n}\n\nfunction togglePasswordVisibility(inputId) {\n    const input = document.getElementById(inputId);\n    const toggle = input?.parentElement.querySelector('.password-toggle-icon');\n\n    if (!input || !toggle) return;\n\n    if (input.type === 'password') {\n        input.type = 'text';\n        toggle.classList.remove('icon-eye');\n        toggle.classList.add('icon-eye-slash');\n    } else {\n        input.type = 'password';\n        toggle.classList.remove('icon-eye-slash');\n        toggle.classList.add('icon-eye');\n    }\n}\n\nfunction updatePasswordStrength() {\n    const passwordInput = document.getElementById('signup-password');\n    const strengthContainer = document.getElementById('password-strength-container');\n    const strengthText = document.getElementById('password-strength-text');\n    const strengthBars = strengthContainer?.querySelectorAll('.strength-bar');\n\n    if (!passwordInput || !strengthContainer || !strengthText || !strengthBars) return;\n\n    const password = passwordInput.value;\n\n    // Clear if empty\n    if (password.length === 0) {\n        strengthBars.forEach(bar => bar.className = 'strength-bar');\n        strengthText.textContent = '';\n        strengthText.className = '';\n        passwordInput.classList.remove('input-error', 'input-success');\n        return;\n    }\n\n    const strength = getPasswordStrength(password);\n\n    // Clear all bars\n    strengthBars.forEach(bar => {\n        bar.className = 'strength-bar';\n    });\n\n    // Determine active bars and color\n    let activeCount = 0;\n    let colorClass = '';\n\n    switch (strength.strength) {\n        case 'weak':\n            activeCount = 1;\n            colorClass = 'weak';\n            passwordInput.classList.add('input-error');\n            passwordInput.classList.remove('input-success');\n            break;\n        case 'medium':\n            activeCount = 2;\n            colorClass = 'medium';\n            passwordInput.classList.remove('input-error', 'input-success');\n            break;\n        case 'strong':\n            activeCount = 3;\n            colorClass = 'strong';\n            passwordInput.classList.remove('input-error');\n            passwordInput.classList.add('input-success');\n            break;\n        case 'very-strong':\n            activeCount = 4;\n            colorClass = 'very-strong';\n            passwordInput.classList.remove('input-error');\n            passwordInput.classList.add('input-success');\n            break;\n    }\n\n    // Activate bars with animation\n    for (let i = 0; i < activeCount; i++) {\n        setTimeout(() => {\n            strengthBars[i].classList.add('active', colorClass);\n        }, i * 50);\n    }\n\n    // Update text with color\n    strengthText.textContent = strength.text;\n    strengthText.className = colorClass;\n    strengthText.style.color = strength.color;\n}\n\nasync function handleLogin(e) {\n    e.preventDefault();\n    console.log('🔐 Login attempt started...');\n    clearErrorMessages();\n\n    const formData = new FormData(e.target);\n    const email = formData.get('email')?.trim();\n    const password = formData.get('password');\n    const loginBtn = document.getElementById('login-btn');\n\n    console.log('Login data:', { email: email, passwordLength: password?.length });\n\n    // Enhanced validation\n    if (!email || !password) {\n        console.log('❌ Validation failed: Missing fields');\n        showErrorMessage('login-error', 'Please fill in all fields');\n        return;\n    }\n\n    if (!isValidEmail(email)) {\n        console.log('❌ Validation failed: Invalid email format');\n        showErrorMessage('login-error', 'Please enter a valid email address');\n        return;\n    }\n\n    try {\n        console.log('🔄 Starting Supabase authentication...');\n        showLoader();\n        loginBtn.classList.add('loading');\n\n        const { data, error } = await supabase.auth.signInWithPassword({\n            email: email,\n            password: password\n        });\n\n        console.log('Supabase auth response:', { data, error });\n\n        if (error) {\n            console.error('❌ Login error:', error.message, error.status);\n            showErrorMessage('login-error', getErrorMessage(error));\n            return;\n        }\n\n        if (data.user) {\n            // Check if email is verified\n            if (!data.user.email_confirmed_at) {\n                console.log('❌ Email not verified');\n                showErrorMessage('login-error', 'Please verify your email address before logging in. Check your inbox for the verification link.');\n\n                // Sign out the user\n                await supabase.auth.signOut();\n                return;\n            }\n\n            console.log('✅ Login successful for:', data.user.email);\n            loginBtn.classList.remove('loading');\n            loginBtn.classList.add('success');\n            showSuccessMessage('login-error', 'Login successful! Redirecting...');\n\n            // Create or update user profile\n            console.log('📝 Creating/updating user profile...');\n            await createOrUpdateUserProfile(data.user);\n\n            // Redirect to main app\n            console.log('🔄 Redirecting to main app...');\n            setTimeout(() => {\n                window.location.href = '../index.html';\n            }, 1500);\n        } else {\n            console.log('❌ No user data returned from Supabase');\n            showErrorMessage('login-error', 'Login failed - no user data received');\n        }\n\n    } catch (error) {\n        console.error('Unexpected login error:', error);\n        showErrorMessage('login-error', 'An unexpected error occurred. Please try again.');\n    } finally {\n        hideLoader();\n        loginBtn.classList.remove('loading');\n    }\n}\n\nasync function handleSignup(e) {\n    e.preventDefault();\n    clearErrorMessages();\n\n    const formData = new FormData(e.target);\n    const email = formData.get('email')?.trim();\n    const password = formData.get('password');\n    const confirmPassword = formData.get('confirmPassword');\n    const username = formData.get('username')?.trim();\n    const referralCode = formData.get('referralCode')?.trim();\n    const privacyPolicyAccepted = document.getElementById('signup-privacy-policy')?.checked;\n    const signupBtn = document.getElementById('signup-btn');\n\n    console.log('🔐 Signup attempt:', { email, username, hasPassword: !!password, privacyAccepted: privacyPolicyAccepted });\n\n    // Enhanced validation\n    if (!email || !password || !confirmPassword || !username) {\n        console.log('❌ Validation failed: Missing required fields');\n        showErrorMessage('signup-error', 'Please fill in all required fields');\n        return;\n    }\n\n    if (!privacyPolicyAccepted) {\n        console.log('❌ Validation failed: Privacy policy not accepted');\n        showErrorMessage('signup-error', 'Please accept the Privacy Policy and Terms of Service');\n        return;\n    }\n\n    if (!isValidEmail(email)) {\n        console.log('❌ Validation failed: Invalid email');\n        showErrorMessage('signup-error', 'Please enter a valid email address');\n        return;\n    }\n\n    if (username.length < 3) {\n        console.log('❌ Validation failed: Username too short');\n        showErrorMessage('signup-error', 'Username must be at least 3 characters long');\n        return;\n    }\n\n    if (!isValidPassword(password)) {\n        const errors = getPasswordValidationErrors(password);\n        console.log('❌ Validation failed: Weak password', errors);\n        const errorMsg = errors.length > 0 \n            ? 'Password requirements: ' + errors.join(', ')\n            : 'Password must be at least 8 characters with uppercase, lowercase, and number';\n        showErrorMessage('signup-error', errorMsg);\n        return;\n    }\n\n    if (password !== confirmPassword) {\n        console.log('❌ Validation failed: Passwords do not match');\n        showErrorMessage('signup-error', 'Passwords do not match');\n        return;\n    }\n\n    try {\n        showLoader();\n        signupBtn.classList.add('loading');\n\n        // Validate referral code if provided (optional, so don't block signup)\n        let referrerId = null;\n        if (referralCode && referralCode.length > 0) {\n            console.log('🔍 Validating referral code:', referralCode);\n            try {\n                const { data: referralData, error: referralError } = await supabase\n                    .from('referral_codes')\n                    .select('user_id')\n                    .eq('code', referralCode.toUpperCase())\n                    .eq('active', true)\n                    .single();\n\n                if (referralError || !referralData) {\n                    console.log('⚠️ Invalid referral code, proceeding without it');\n                    showWarningMessage('signup-error', 'Invalid referral code - proceeding without it');\n                    await new Promise(resolve => setTimeout(resolve, 2000));\n                } else {\n                    referrerId = referralData.user_id;\n                    console.log('✅ Valid referral code');\n                }\n            } catch (refError) {\n                console.log('⚠️ Referral validation error:', refError);\n                // Continue without referral\n            }\n        }\n\n        console.log('📝 Creating account...');\n        const { data, error } = await supabase.auth.signUp({\n            email: email,\n            password: password,\n            options: {\n                data: {\n                    display_name: username,\n                    username: username\n                },\n                emailRedirectTo: window.location.origin + '/Auth/login.html'\n            }\n        });\n\n        if (error) {\n            console.error('❌ Signup error:', error);\n            hideLoader();\n            signupBtn.classList.remove('loading');\n            showErrorMessage('signup-error', getErrorMessage(error));\n            return;\n        }\n\n        if (data.user) {\n            console.log('✅ Signup successful:', data.user.email);\n\n            // Create user profile (but user can't login until email verified)\n            try {\n                await createOrUpdateUserProfile(data.user, { referred_by: referrerId });\n                console.log('✅ User profile created');\n            } catch (profileError) {\n                console.warn('⚠️ Profile creation warning:', profileError);\n            }\n\n            // Create referral relationship if applicable\n            let referrerUsername = null;\n            if (referrerId && referralCode) {\n                try {\n                    await createReferralRelationship(referrerId, data.user.id, referralCode);\n                    console.log('✅ Referral relationship created');\n\n                    // Get referrer's username for display\n                    const { data: referrerData } = await supabase\n                        .from('user_profiles')\n                        .select('username, display_name')\n                        .eq('id', referrerId)\n                        .single();\n\n                    referrerUsername = referrerData?.display_name || referrerData?.username || 'a friend';\n                } catch (refError) {\n                    console.warn('⚠️ Referral relationship warning:', refError);\n                }\n            }\n\n            signupBtn.classList.remove('loading');\n            signupBtn.classList.add('success');\n\n            // Show different success messages based on referral status\n            if (referrerUsername) {\n                showSuccessMessage('signup-error', `✓ Account created using ${referrerUsername}'s referral code! Please check your email to verify your account before logging in.`);\n            } else {\n                showSuccessMessage('signup-error', '✓ Account created! Please check your email to verify your account before logging in.');\n            }\n\n            // Redirect to login after a delay\n            setTimeout(() => {\n                window.location.href = './login.html';\n            }, 4000);\n        }\n\n    } catch (error) {\n        console.error('❌ Unexpected signup error:', error);\n        showErrorMessage('signup-error', 'An unexpected error occurred. Please try again.');\n    } finally {\n        hideLoader();\n        signupBtn.classList.remove('loading');\n    }\n}\n\nasync function handleForgotPassword(e) {\n    e.preventDefault();\n    clearErrorMessages();\n\n    const formData = new FormData(e.target);\n    const email = formData.get('email')?.trim();\n    const forgotBtn = document.getElementById('forgot-password-btn');\n\n    if (!email) {\n        showErrorMessage('forgot-password-error', 'Please enter your email address');\n        return;\n    }\n\n    if (!isValidEmail(email)) {\n        showErrorMessage('forgot-password-error', 'Please enter a valid email address');\n        return;\n    }\n\n    try {\n        showLoader();\n        forgotBtn.classList.add('loading');\n\n        const { error } = await supabase.auth.resetPasswordForEmail(email, {\n            redirectTo: window.location.origin + '/Auth/login.html'\n        });\n\n        if (error) {\n            console.error('Password reset error:', error);\n            showErrorMessage('forgot-password-error', getErrorMessage(error));\n            return;\n        }\n\n        forgotBtn.classList.remove('loading');\n        forgotBtn.classList.add('success');\n        showSuccessMessage('forgot-password-error', '✓ Password reset email sent! Please check your inbox.');\n\n        // Redirect to login after a delay\n        setTimeout(() => {\n            window.location.href = './login.html';\n        }, 3000);\n\n    } catch (error) {\n        console.error('Unexpected password reset error:', error);\n        showErrorMessage('forgot-password-error', 'An unexpected error occurred. Please try again.');\n    } finally {\n        hideLoader();\n        forgotBtn.classList.remove('loading');\n    }\n}\n\nasync function createOrUpdateUserProfile(user, additionalData = {}) {\n    try {\n        const userData = {\n            id: user.id,\n            email: user.email,\n            username: user.user_metadata?.username || user.user_metadata?.display_name || user.email.split('@')[0],\n            display_name: user.user_metadata?.display_name || user.user_metadata?.username || user.email.split('@')[0],\n            current_tier: 'Free Tier',\n            tier: 'Free Tier',\n            subscription_status: 'active',\n            is_new_user: true,\n            notifications: true,\n            created_at: new Date().toISOString(),\n            last_login: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            ...additionalData\n        };\n\n        const { data, error } = await supabase\n            .from('user_profiles')\n            .upsert(userData, { onConflict: 'id' })\n            .select()\n            .single();\n\n        if (error && error.code !== '23505') {\n            console.warn('Profile creation warning:', error);\n        } else {\n            console.log('User profile created/updated:', data);\n        }\n\n        // Generate referral code\n        await generateReferralCode(user.id, userData.username);\n\n    } catch (error) {\n        console.warn('Error creating user profile:', error);\n    }\n}\n\nasync function generateReferralCode(userId, username) {\n    try {\n        const code = userId.substring(0, 8).toUpperCase();\n\n        const { data, error } = await supabase\n            .from('referral_codes')\n            .upsert({\n                user_id: userId,\n                code: code,\n                username: username,\n                total_referrals: 0,\n                active: true,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }, { onConflict: 'user_id' })\n            .select()\n            .single();\n\n        if (error && error.code !== '23505') {\n            console.warn('Referral code generation warning:', error);\n        } else {\n            console.log('Referral code generated:', data?.code);\n        }\n    } catch (error) {\n        console.warn('Error generating referral code:', error);\n    }\n}\n\nasync function createReferralRelationship(referrerId, referredId, referralCode) {\n    try {\n        const { data, error } = await supabase\n            .from('referrals')\n            .insert({\n                referrer_id: referrerId,\n                referred_id: referredId,\n                referral_code: referralCode,\n                reward_claimed: false,\n                reward_amount: 500.00, // Default reward\n                created_at: new Date().toISOString()\n            })\n            .select()\n            .single();\n\n        if (error && error.code !== '23505') {\n            console.warn('Referral relationship creation warning:', error);\n        } else {\n            console.log('Referral relationship created:', data);\n\n            // Update referral stats\n            await updateReferralStats(referrerId);\n\n            // Log account history for referrer notification\n            try {\n                const { data: referredUser } = await supabase\n                    .from('user_profiles')\n                    .select('email, username, display_name')\n                    .eq('id', referredId)\n                    .single();\n\n                await supabase\n                    .from('account_history')\n                    .insert({\n                        user_id: referrerId,\n                        action: `New referral: ${referredUser?.display_name || referredUser?.username || referredUser?.email || 'Someone'} signed up using your referral code ${referralCode}`,\n                        action_type: 'referral_signup',\n                        created_at: new Date().toISOString()\n                    });\n            } catch (historyError) {\n                console.warn('Error logging referral history:', historyError);\n            }\n        }\n    } catch (error) {\n        console.warn('Error creating referral relationship:', error);\n    }\n}\n\nasync function updateReferralStats(userId) {\n    try {\n        // Count total referrals\n        const { count } = await supabase\n            .from('referrals')\n            .select('*', { count: 'exact', head: true })\n            .eq('referrer_id', userId);\n\n        // Update referral code stats\n        await supabase\n            .from('referral_codes')\n            .update({\n                total_referrals: count || 0,\n                updated_at: new Date().toISOString()\n            })\n            .eq('user_id', userId);\n\n        // Update user profile stats\n        await supabase\n            .from('user_profiles')\n            .update({\n                total_referrals: count || 0,\n                updated_at: new Date().toISOString()\n            })\n            .eq('id', userId);\n\n        console.log(`Updated referral stats for user ${userId}: ${count} referrals`);\n    } catch (error) {\n        console.warn('Error updating referral stats:', error);\n    }\n}\n\n\nfunction getErrorMessage(error) {\n    switch (error.message) {\n        case 'Invalid login credentials':\n            return 'Invalid email or password. Please check your credentials and try again.';\n        case 'Email not confirmed':\n            return 'Please verify your email address before signing in. Check your inbox for the verification link.';\n        case 'User already registered':\n            return 'An account with this email already exists. Please sign in instead.';\n        case 'Password should be at least 6 characters':\n            return 'Password must be at least 6 characters long.';\n        case 'Unable to validate email address: invalid format':\n            return 'Please enter a valid email address.';\n        case 'Too many requests':\n            return 'Too many attempts. Please wait a moment before trying again.';\n        default:\n            return error.message || 'An error occurred. Please try again.';\n    }\n}\n\nfunction showMessage(message, type = 'info') {\n    // Remove existing messages\n    const existingMessages = document.querySelectorAll('.auth-message');\n    existingMessages.forEach(msg => msg.remove());\n\n    // Create new message\n    const messageDiv = document.createElement('div');\n    messageDiv.className = `auth-message auth-message-${type}`;\n    messageDiv.textContent = message;\n\n    // Insert message at the top of the form container\n    const container = document.querySelector('.auth-container');\n    if (container) {\n        container.insertBefore(messageDiv, container.firstChild);\n\n        // Auto-remove success/error messages after 5 seconds\n        if (type === 'success' || type === 'error') {\n            setTimeout(() => {\n                if (messageDiv.parentNode) {\n                    messageDiv.remove();\n                }\n            }, 5000);\n        }\n    }\n}\n\n// Initialize smooth auth page navigation with loaders\nfunction initializeAuthNavigation() {\n    // Find all auth navigation links\n    const authLinks = document.querySelectorAll('.switch-auth a, a[href*=\"login.html\"], a[href*=\"signup.html\"], a[href*=\"forgot-password.html\"]');\n\n    authLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            const targetUrl = this.getAttribute('href');\n\n            // Show loader animation\n            showLoader();\n\n            // Navigate immediately\n            window.location.href = targetUrl;\n        });\n    });\n}\n\n// Check if user is already logged in and redirect to main app\nasync function checkExistingSession() {\n    const { data: { session } } = await supabase.auth.getSession();\n    if (session) {\n        console.log('User already logged in, redirecting to main app...');\n        // Go to homepage after authentication\n        window.location.href = '../index.html#home';\n    }\n}\n\n// Check for existing session when page loads\ncheckExistingSession();\n\n// ===== Auth Page Ad System =====\nfunction initializeAuthAds() {\n    console.log('📺 Initializing ads for auth page...');\n\n    // Wait for consent manager and check consent\n    checkAuthConsentAndLoadAds();\n}\n\n// Check consent status and load ads accordingly for auth pages\nfunction checkAuthConsentAndLoadAds() {\n    // Listen for consent updates\n    window.addEventListener('consentUpdated', function(event) {\n        const consent = event.detail;\n        console.log('🍪 Auth page: Consent updated:', consent);\n\n        if (consent.ad_storage === 'granted') {\n            loadAuthPageAds();\n        } else {\n            console.log('🚫 Auth page: Ads not loaded - consent denied');\n        }\n    });\n\n    // Check if consent manager is available and get current consent\n    if (window.consentManager) {\n        const currentConsent = window.consentManager.getConsentStatus();\n        if (currentConsent && currentConsent.ad_storage === 'granted') {\n            loadAuthPageAds();\n        } else {\n            console.log('⏳ Auth page: Waiting for user consent to load ads...');\n        }\n    } else {\n        // Fallback: wait for consent manager to load\n        console.log('⏳ Auth page: Consent manager not ready, waiting...');\n        setTimeout(checkAuthConsentAndLoadAds, 1000);\n    }\n}\n\nfunction loadAuthPageAds() {\n    console.log('📺 Loading ads for auth page...');\n\n    // Load Google AdSense script dynamically\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9868946535437166';\n    script.crossOrigin = 'anonymous';\n\n    script.onload = () => {\n        console.log('✅ AdSense loaded successfully on auth page');\n        adsLoaded = true;\n        // Adblocker detection disabled\n        // setTimeout(detectAuthAdBlocker, 1000);\n    };\n\n    script.onerror = () => {\n        console.log('❌ AdSense failed to load on auth page');\n        // Adblocker detection disabled\n        // adblockerDetected = true;\n        // showAuthAdBlockerMessage();\n    };\n\n    document.head.appendChild(script);\n}\n\nfunction detectAuthAdBlocker() {\n    try {\n        console.log('🕵️ Checking for adblocker on auth page...');\n\n        // Create a test ad element\n        const testAd = document.createElement('div');\n        testAd.innerHTML = '&nbsp;';\n        testAd.className = 'adsbox adsbygoogle';\n        testAd.style.position = 'absolute';\n        testAd.style.left = '-9999px';\n        testAd.style.width = '1px';\n        testAd.style.height = '1px';\n\n        document.body.appendChild(testAd);\n\n        setTimeout(() => {\n            try {\n                const isBlocked = testAd.offsetHeight === 0 || \n                                 testAd.offsetWidth === 0 || \n                                 testAd.style.display === 'none' ||\n                                 testAd.style.visibility === 'hidden';\n\n                if (document.body.contains(testAd)) {\n                    document.body.removeChild(testAd);\n                }\n\n                if (isBlocked || !window.adsbygoogle) {\n                    console.log('🚫 Adblocker detected on auth page');\n                    adblockerDetected = true;\n                    showAuthAdBlockerMessage();\n                } else {\n                    console.log('✅ No adblocker detected on auth page');\n                    adblockerDetected = false;\n                }\n            } catch (err) {\n                console.error('Error during adblocker detection:', err);\n            }\n        }, 100);\n    } catch (err) {\n        console.error('Error in detectAuthAdBlocker:', err);\n    }\n}\n\nfunction showAuthAdBlockerMessage() {\n    try {\n        console.log('📢 Showing adblocker message on auth page');\n\n        // Don't show if already displayed\n        if (document.getElementById('adblocker-overlay')) {\n            console.log('Adblocker overlay already displayed');\n            return;\n        }\n\n        // Create full-page overlay - uses CSS from styles.css\n        const overlay = document.createElement('div');\n        overlay.id = 'adblocker-overlay';\n        overlay.innerHTML = `\n            <div class=\"adblocker-container\">\n                <div class=\"adblocker-content\">\n                    <div class=\"adblocker-icon\">🚫</div>\n                    <h2>AdBlocker Detected</h2>\n                    <p>We noticed you're using an ad blocker. To continue using StatWise for free, please:</p>\n                    <ul>\n                        <li>✅ Disable your ad blocker for this site</li>\n                        <li>🔄 Refresh the page</li>\n                        <li>💎 Or sign up for Premium for an ad-free experience</li>\n                    </ul>\n                    <div class=\"adblocker-buttons\">\n                        <button onclick=\"window.location.reload()\" class=\"btn-refresh\">Refresh Page</button>\n                        <button onclick=\"window.location.href='../index.html'\" class=\"btn-upgrade\">Learn About Premium</button>\n                    </div>\n                    <p class=\"adblocker-note\">Ads help us keep StatWise free for everyone!</p>\n                </div>\n            </div>\n        `;\n\n        document.body.appendChild(overlay);\n    } catch (err) {\n        console.error('Error showing adblocker message:', err);\n    }\n}\n\nconsole.log('✅ Supabase authentication system loaded successfully!');","size_bytes":39132},"utils.js":{"content":"\n// utils.js\nimport { supabase } from './env.js';\n\n/**\n * Fetches the user's public IP address.\n * @returns {Promise<string>} The public IP or \"Unknown\".\n */\nexport async function getPublicIP() {\n    try {\n        const res = await fetch(\"https://api.ipify.org?format=json\");\n        if (!res.ok) return \"Unknown\";\n        const data = await res.json();\n        return data.ip || \"Unknown\";\n    } catch {\n        return \"Unknown\";\n    }\n}\n\n/**\n * Formats a timestamp string or Date into a \"DD/MM/YYYY HH:mm\" string.\n * @param {string|Date} timestamp - The timestamp to format.\n * @returns {string} The formatted date string or an empty string.\n */\nexport function formatTimestamp(timestamp) {\n    try {\n        if (!timestamp) return \"\";\n        \n        let date;\n        if (typeof timestamp === 'string') {\n            date = new Date(timestamp);\n        } else if (timestamp instanceof Date) {\n            date = timestamp;\n        } else if (timestamp?.toDate) {\n            // Firestore Timestamp object\n            date = timestamp.toDate();\n        } else {\n            return \"\";\n        }\n        \n        if (isNaN(date.getTime())) return \"\";\n        \n        const day = String(date.getDate()).padStart(2, \"0\");\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const year = date.getFullYear();\n        const hours = String(date.getHours()).padStart(2, \"0\");\n        const mins = String(date.getMinutes()).padStart(2, \"0\");\n        return `${day}/${month}/${year} ${hours}:${mins}`;\n    } catch (error) {\n        console.warn('Error formatting timestamp:', error);\n        return \"\";\n    }\n}\n\n/**\n * Adds a unique action to the user's history log via Supabase.\n * @param {string} userId - The user's ID.\n * @param {string} action - The action description to log.\n */\nexport async function addHistoryUnique(userId, action) {\n    if (!userId || !action) return;\n    \n    try {\n        // Get the user's last history entry to prevent duplicates\n        const { data: lastEntry, error: fetchError } = await supabase\n            .from('user_history')\n            .select('action')\n            .eq('user_id', userId)\n            .order('created_at', { ascending: false })\n            .limit(1)\n            .single();\n        \n        // Prevent logging the exact same action back-to-back\n        if (lastEntry && lastEntry.action === action) return;\n        \n        const ip = await getPublicIP();\n        const { error } = await supabase\n            .from('user_history')\n            .insert({\n                user_id: userId,\n                action: action,\n                ip_address: ip,\n                created_at: new Date().toISOString()\n            });\n            \n        if (error) {\n            console.warn('Failed to add history:', error);\n        }\n    } catch (err) {\n        console.error(\"Failed to add history:\", err);\n    }\n}\n","size_bytes":2879},"README.md":{"content":"# StatWise - AI Sports Prediction PWA\n\nStatWise is a Progressive Web App (PWA) that provides users with AI-powered sports predictions. It features a multi-tiered subscription model, a referral program, and a comprehensive user profile management system, all built on a modern serverless stack with Firebase.\n\n## ✨ Features\n\n*   **Single Page Application (SPA):** A fast, seamless user experience with dynamic page loading and animated transitions.\n*   **User Authentication:** Secure login, signup, and password reset functionality.\n*   **Tiered Subscriptions:**\n    *   Multiple subscription levels (Free, Premium, VIP, VVIP).\n    *   Payment integration with **Flutterwave**.\n    *   Client-side subscription status checks and downgrades on expiry.\n    *   Tier-based access control for features and content.\n*   **AI Predictions Homepage:**\n    *   Displays a list of prediction cards with match details, pick, odds, and confidence levels.\n    *   **Advanced Search:** Filter matches by name and use commands (`/odds`, `/c75`) to sort and filter.\n    *   **Pull-to-Refresh:** Easily refresh the prediction list.\n*   **Comprehensive User Profile:**\n    *   Update username and profile picture (uploads to Firebase Storage).\n    *   Change password with re-authentication.\n    *   Dark mode toggle.\n    *   View user statistics (member since, total predictions, win rate).\n*   **History Tracking:**\n    *   Tabbed view for **Predictions**, **Account Activity**, and **Transactions**.\n    *   Tracks saved predictions and their outcomes (Win/Loss/Pending).\n    *   Logs important account actions like login, logout, and profile updates.\n*   **Referral System:**\n    *   Each user gets a unique referral code.\n    *   Share code via WhatsApp, Twitter, or the native Web Share API.\n    *   View a list of users you've referred.\n    *   Automatic reward claiming for successful referrals.\n*   **Push Notifications:**\n    *   Users can opt-in to receive push notifications via Firebase Cloud Messaging (FCM).\n    *   Handles foreground and background messages.\n*   **Progressive Web App (PWA):**\n    *   Installable on user devices.\n    *   **Offline Support:** A custom offline page is served via a Service Worker when the user has no network connection.\n*   **Security:**\n    *   Client-side deterrents to prevent basic inspection (disabling right-click, dev tools shortcuts).\n    *   Secure, multi-step account deletion process.\n\n## 🛠️ Tech Stack\n\n*   **Frontend:** Vanilla JavaScript (ES Modules), HTML5, CSS3\n*   **Backend (Serverless):**\n    *   **Firebase Authentication:** For user management.\n    *   **Firestore:** As the primary NoSQL database for user data, predictions, history, and subscriptions.\n    *   **Firebase Storage:** For user profile picture uploads.\n    *   **Firebase Cloud Messaging (FCM):** For push notifications.\n*   **Payments:** Flutterwave\n*   **UI/UX:**\n    *   Intro.js: For the new user welcome tour.\n\n## 📂 Project Structure\n\n```\nstatwise/\n├── Auth/\n│   ├── auth.js         # Handles login, signup, password reset logic\n│   └── login.html      # Login page\n│   └── signup.html     # Signup page\n│   └── forgot.html     # Forgot password page\n├── Offline/\n│   ├── offline.html    # Offline fallback page\n│   └── offline.css\n├── Pages/              # Dynamically loaded page content\n│   ├── home.html\n│   ├── history.html\n│   ├── profile.html\n│   ├── referral.html\n│   ├── subscriptions.html\n│   └── ...\n├── Assets/\n│   ├── Icons/\n│   └── Fonts/\n├── env.js              # Firebase & service keys (IMPORTANT: Should be gitignored)\n├── env.example.js      # Template for environment variables\n├── main.js             # Core application logic, router, state management\n├── utils.js            # Utility functions (timestamp formatting, etc.)\n├── index.html          # Main entry point of the app\n├── styles.css          # Global styles\n├── sw.js               # Service Worker for PWA features (offline, push)\n└── README.md           # This file\n```\n\n## 🚀 Getting Started\n\nFollow these instructions to get a copy of the project up and running on your local machine for development and testing purposes.\n\n### Prerequisites\n\n*   A Firebase project.\n*   A Flutterwave account for payment processing.\n*   A local web server. You can use the `http-server` npm package for a quick setup:\n    ```bash\n    npm install -g http-server\n    ```\n\n### Installation & Setup\n\n1.  **Clone the repository:**\n    ```bash\n    git clone https://github.com/your-username/statwise.git\n    cd statwise\n    ```\n\n2.  **Configure Environment Variables:**\n    *   Copy `env.example.js` to a new file named `env.js`.\n    *   Open `env.js` and fill in your Firebase project configuration details in the `firebaseConfig` object.\n    *   Add your Flutterwave public key to the `FLWPUBK` constant.\n\n3.  **Update Service Worker Config:**\n    *   Open `sw.js` and replace the placeholder `firebaseConfig` object with your own Firebase project configuration.\n\n4.  **Update FCM VAPID Key:**\n    *   In `main.js`, find the `initFirebaseMessaging` function.\n    *   Replace the placeholder `'YOUR_VAPID_KEY_HERE'` with your actual VAPID key from the Firebase Console (*Project Settings > Cloud Messaging > Web configuration*).\n\n5.  **Run the local server:**\n    *   From the root of the project directory, run:\n        ```bash\n        http-server\n        ```\n    *   Open your browser and navigate to the local address provided by `http-server` (e.g., `http://127.0.0.1:8080`). You should start at the login page (`/Auth/login.html`).\n\n### Firebase Setup Notes\n\n*   **Authentication:** Enable \"Email/Password\" as a sign-in method in the Firebase Authentication console.\n*   **Firestore:** Your database structure will be created automatically as users sign up and interact with the app. You will need to configure Firestore Security Rules to ensure data is accessed securely.\n*   **Storage:** Ensure your Firebase Storage rules allow authenticated users to read and write to their own `profile_pictures/{userId}` path.\n\n### ⚠️ Security Warning\n\nThe payment verification logic in this project is designed to be handled by a **Firebase Cloud Function** (`verifyPaymentAndGrantReward`). The client-side code calls this function but does not perform the verification itself. This is the recommended secure approach for production.\n\nFor a production environment, you **must** implement this Cloud Function to securely communicate with the Flutterwave API, verify transactions, and grant subscriptions and referral rewards. Client-side verification is insecure and can be easily bypassed.\n\n---","size_bytes":6776},"styles.css":{"content":"* {\n    margin: 0;\n    padding: 0;\n    text-decoration: none;\n    list-style-type: none;\n    font-family: \"Optimistic\";\n    box-sizing: border-box;\n}\n\n::-webkit-scrollbar {\n    display: none;\n}\n\n@font-face {\n    font-family: 'Optimistic';\n    src: url('./Assets/Fonts/Optimistic_Text_A_Md.ttf');\n}\n\n:root {\n    --header-height: 60px;\n    --nav-height: 60px;\n    --max-width: 1200px;\n    --container-padding: 20px;\n    --mobile-padding: 15px;\n}\n\n/* ---------------- Enhanced Visual Variables ---------------- */\n:root {\n    --border-width-thin: 2px;\n    --border-width-medium: 3px;\n    --border-width-thick: 4px;\n    --border-radius-small: 8px;\n    --border-radius-medium: 12px;\n    --border-radius-large: 16px;\n    --shadow-light: 0 2px 8px rgba(14, 99, 156, 0.08);\n    --shadow-medium: 0 4px 12px rgba(14, 99, 156, 0.12);\n    --shadow-strong: 0 6px 20px rgba(14, 99, 156, 0.16);\n}\n\n/* ---------------- Body ---------------- */\nhtml {\n    background: #f8f9fc;\n    /* Enhanced light background - more vibrant than dull #f4f5f7 */\n    color: #1a1a1c;\n    /* Slightly deeper text color for better contrast */\n    font-family: \"Optimistic\";\n    height: 100%;\n}\n\nbody {\n    /* Body will now inherit background and color from html */\n    font-family: \"Optimistic\";\n    height: 100%;\n    position: relative; /* Needed for animation container */\n    overflow-x: hidden; /* Prevent horizontal scroll from animation */\n    overflow-y: auto; /* Ensure vertical scrolling works */\n    /* Better scroll behavior for all devices */\n    -webkit-overflow-scrolling: touch;\n    max-width: 100vw;\n}\n\n/* ---------------- Animated Background ---------------- */\n.animated-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    background: #f8f9fc;\n    /* Solid enhanced background - no gradient as requested */\n    overflow: hidden;\n}\n\n/* Gradient overlays removed to comply with no-gradient requirement */\n\n/* All gradient overlays removed to comply with no-gradient requirement */\n\n/* Animation keyframes removed with gradient overlays */\n\n/* ---------------- Header ---------------- */\nheader {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: var(--header-height);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #ffffff;\n    color: #1c1c1e;\n    border-bottom: 3px solid #0e639c;\n    box-shadow: 0 2px 8px rgba(14, 99, 156, 0.1);\n    z-index: 1000;\n    padding: 0 var(--mobile-padding);\n}\n\n.app-name {\n    font-size: 25px;\n    font-weight: bold;\n    color: #0e639c;\n    text-align: center;\n    width: 100%;\n    margin: 0;\n}\n\n/* ---------------- Main ---------------- */\nmain {\n    position: relative;\n    margin-top: var(--header-height);\n    padding: 20px var(--mobile-padding) 20px var(--mobile-padding);\n    padding-bottom: calc(var(--nav-height) + 20px);\n    min-height: calc(100vh - var(--header-height) - var(--nav-height));\n    overflow-y: auto;\n    overflow-x: hidden;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: var(--max-width);\n    width: 100%;\n    /* Better scroll behavior for desktop */\n    -webkit-overflow-scrolling: touch;\n    overscroll-behavior-y: auto;\n    scroll-behavior: smooth;\n}\n\n/* ---------------- Page Transitions ---------------- */\n.page-fade-out {\n    animation: fadeOut 0.2s ease-out forwards;\n}\n\n.page-fade-in {\n    animation: fadeIn 0.3s ease-in forwards;\n}\n\n@keyframes fadeOut {\n    from {\n        opacity: 1;\n        transform: translateY(0);\n    }\n\n    to {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* ---------------- Bottom Navigation ---------------- */\n.bottom-nav {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    background-color: #ffffff;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding: 8px 0;\n    z-index: 1000;\n    height: var(--nav-height);\n}\n\n.bottom-nav button {\n    background: none;\n    border: none;\n    color: #555;\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    cursor: pointer;\n}\n\n.bottom-nav .icon {\n    width: 22px;\n    height: 22px;\n    margin-bottom: 2px;\n    background-color: #555;\n    /* Default inactive color */\n    -webkit-mask-size: contain;\n    mask-size: contain;\n    -webkit-mask-position: center;\n    mask-position: center;\n    -webkit-mask-repeat: no-repeat;\n    mask-repeat: no-repeat;\n    transition: background-color 0.3s ease;\n}\n\n.icon-home {\n    -webkit-mask-image: url(./Assets/Icons/house.svg);\n    mask-image: url(./Assets/Icons/house.svg);\n}\n\n.icon-history {\n    -webkit-mask-image: url(./Assets/Icons/bar-chart.svg);\n    mask-image: url(./Assets/Icons/bar-chart.svg);\n}\n\n.icon-subscriptions {\n    -webkit-mask-image: url(./Assets/Icons/gem.svg);\n    mask-image: url(./Assets/Icons/gem.svg);\n}\n\n.icon-profile {\n    -webkit-mask-image: url(./Assets/Icons/user.svg);\n    mask-image: url(./Assets/Icons/user.svg);\n}\n\n.icon-insights {\n    -webkit-mask-image: url(./Assets/Icons/insights.svg);\n    /* You need to add this icon */\n    mask-image: url(./Assets/Icons/insights.svg);\n}\n\n.icon-edit {\n    -webkit-mask-image: url(./Assets/Icons/edit.svg);\n    mask-image: url(./Assets/Icons/edit.svg);\n}\n\n/* Hide tier-gated nav buttons by default to prevent flash of content */\n.bottom-nav button[data-tier] {\n    display: none;\n}\n\n.bottom-nav button.active {\n    color: #0e639c;\n}\n\n.bottom-nav button.active .icon {\n    background-color: #0e639c;\n    /* Active color */\n}\n\n.bottom-nav button:hover .icon {\n    animation: shake 0.3s ease-in-out;\n}\n\n@keyframes shake {\n    0% {\n        transform: translateX(0);\n    }\n\n    25% {\n        transform: translateX(-3px);\n    }\n\n    50% {\n        transform: translateX(3px);\n    }\n\n    75% {\n        transform: translateX(-3px);\n    }\n\n    100% {\n        transform: translateX(0);\n    }\n}\n\n/* ---------------- Page Titles ---------------- */\n.page-title {\n    font-size: 20px;\n    margin-bottom: 12px;\n    font-weight: bold;\n    color: #0e639c;\n    text-align: center;\n}\n\n/* ---------------- Search Bar ---------------- */\n.search-container {\n    margin-bottom: 16px;\n}\n\n.search-wrapper {\n    position: relative;\n    background-color: #fff;\n    border-radius: 8px;\n    border: 1px solid #ccc;\n    transition: border-color 0.3s ease;\n}\n\n.search-wrapper:focus-within {\n    border-color: #0e639c;\n}\n\n#predictionSearch {\n    width: 100%;\n    padding: 10px 15px;\n    border: none;\n    background-color: transparent;\n    color: #333;\n    font-size: 14px;\n    position: relative;\n    z-index: 2;\n}\n\n#predictionSearch:focus {\n    outline: none;\n}\n\n#search-ghost-text {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding: 10px 15px;\n    font-size: 14px;\n    color: #ccc;\n    z-index: 1;\n    pointer-events: none;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n#predictionSearch {\n    padding-right: 35px; /* Make space for clear button */\n}\n\n#search-clear-btn {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    background: none;\n    border: none;\n    font-size: 22px;\n    color: #999;\n    cursor: pointer;\n    padding: 0 5px;\n    line-height: 1;\n    display: none; /* JS will toggle this */\n}\n\n/* ---------------- Cards ---------------- */\n.card {\n    background: #ffffff;\n    border-radius: 10px;\n    padding: 16px;\n    margin-bottom: 16px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\n}\n\n/* ---------------- Subscription Cards ---------------- */\n.pricing-container {\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 24px;\n    margin-bottom: 20px;\n}\n\n/* ================== RESPONSIVE DESIGN ================== */\n\n/* Small Mobile (up to 480px) */\n@media (max-width: 480px) {\n    :root {\n        --mobile-padding: 12px;\n    }\n\n    .app-name {\n        font-size: 20px;\n    }\n\n    main {\n        padding: 15px var(--mobile-padding) 15px var(--mobile-padding);\n        padding-bottom: calc(var(--nav-height) + 15px);\n    }\n\n    .bottom-nav button {\n        font-size: 9px;\n        padding: 4px 2px;\n    }\n\n    .bottom-nav .icon {\n        width: 18px;\n        height: 18px;\n    }\n\n    .subscription-card,\n    .profile-card,\n    .card {\n        padding: 15px;\n        margin-bottom: 15px;\n    }\n\n    .page-title {\n        font-size: 1.5rem;\n        margin-bottom: 15px;\n    }\n}\n\n/* Large Mobile/Small Tablet (481px to 767px) */\n@media (min-width: 481px) and (max-width: 767px) {\n    :root {\n        --mobile-padding: 16px;\n    }\n\n    .app-name {\n        font-size: 22px;\n    }\n\n    main {\n        padding: 18px var(--mobile-padding) 18px var(--mobile-padding);\n        padding-bottom: calc(var(--nav-height) + 18px);\n    }\n\n    .subscription-card,\n    .profile-card,\n    .card {\n        padding: 18px;\n        margin-bottom: 18px;\n    }\n}\n\n/* Tablet (768px to 1023px) */\n@media (min-width: 768px) and (max-width: 1023px) {\n    :root {\n        --container-padding: 24px;\n    }\n\n    main {\n        padding: 24px var(--container-padding) 24px var(--container-padding);\n        padding-bottom: calc(var(--nav-height) + 24px);\n    }\n\n    .app-name {\n        font-size: 26px;\n    }\n\n    .pricing-container {\n        grid-template-columns: 1fr 1fr;\n    }\n\n    .subscription-card,\n    .profile-card,\n    .card {\n        padding: 24px;\n        margin-bottom: 24px;\n    }\n\n    .page-title {\n        font-size: 2rem;\n    }\n\n    .bottom-nav button {\n        font-size: 11px;\n        padding: 6px 8px;\n    }\n\n    .bottom-nav .icon {\n        width: 24px;\n        height: 24px;\n    }\n}\n\n/* Desktop (1024px and up) */\n@media (min-width: 1024px) {\n    :root {\n        --container-padding: 32px;\n    }\n\n    main {\n        padding: 32px var(--container-padding) 32px var(--container-padding);\n        padding-bottom: calc(var(--nav-height) + 32px);\n    }\n\n    .app-name {\n        font-size: 28px;\n    }\n\n    .pricing-container {\n        grid-template-columns: 1fr 1fr;\n        gap: 32px;\n    }\n\n    .subscription-card,\n    .profile-card,\n    .card {\n        padding: 28px;\n        margin-bottom: 28px;\n    }\n\n    .page-title {\n        font-size: 2.2rem;\n        margin-bottom: 24px;\n    }\n\n    .bottom-nav button {\n        font-size: 12px;\n        padding: 8px 12px;\n    }\n\n    .bottom-nav .icon {\n        width: 26px;\n        height: 26px;\n    }\n\n    /* Better spacing for large screens */\n    .profile-container,\n    .predictions-container {\n        max-width: 900px;\n        margin: 0 auto;\n    }\n}\n\n/* Extra Large Desktop (1200px and up) */\n@media (min-width: 1200px) {\n    main {\n        max-width: 1100px;\n    }\n\n    .pricing-container {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 40px;\n        max-width: 800px;\n        margin: 0 auto;\n    }\n\n    .profile-container,\n    .predictions-container {\n        max-width: 1000px;\n    }\n}\n\n/* ================== RESPONSIVE COMPONENTS ================== */\n\n/* Responsive Buttons */\n@media (max-width: 480px) {\n    .button,\n    .subscribe-btn,\n    .btn-primary,\n    .btn-secondary {\n        padding: 10px 16px;\n        font-size: 14px;\n    }\n\n    .modal-actions button {\n        padding: 8px 12px;\n        font-size: 13px;\n    }\n}\n\n@media (min-width: 768px) {\n    .button,\n    .subscribe-btn,\n    .btn-primary,\n    .btn-secondary {\n        padding: 12px 24px;\n        font-size: 16px;\n    }\n\n    .modal-actions button {\n        padding: 10px 20px;\n        font-size: 15px;\n    }\n}\n\n/* Responsive Inputs and Forms */\n@media (max-width: 480px) {\n    input[type=\"text\"],\n    input[type=\"email\"],\n    input[type=\"password\"],\n    textarea,\n    select {\n        padding: 10px;\n        font-size: 14px;\n    }\n}\n\n@media (min-width: 768px) {\n    input[type=\"text\"],\n    input[type=\"email\"],\n    input[type=\"password\"],\n    textarea,\n    select {\n        padding: 12px;\n        font-size: 16px;\n    }\n}\n\n/* Responsive Tab Navigation */\n@media (max-width: 480px) {\n    .tab-btn {\n        padding: 8px 12px;\n        font-size: 13px;\n    }\n\n    .tab-container {\n        gap: 8px;\n    }\n}\n\n@media (min-width: 768px) {\n    .tab-btn {\n        padding: 12px 24px;\n        font-size: 15px;\n    }\n\n    .tab-container {\n        gap: 12px;\n    }\n}\n\n/* Modal Input Field Styling */\n.modal-input-wrapper {\n    margin: 20px 0;\n}\n\n.modal-input {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    font-size: 16px;\n    font-family: inherit;\n    outline: none;\n    transition: border-color 0.3s ease;\n}\n\n.modal-input:focus {\n    border-color: #0e639c;\n    box-shadow: 0 0 0 2px rgba(14, 99, 156, 0.1);\n}\n\n/* Responsive Modal */\n@media (max-width: 480px) {\n    .modal-content {\n        width: 95%;\n        padding: 16px;\n        margin: 10px;\n    }\n\n    .modal-overlay {\n        padding: 20px 10px;\n    }\n\n    .modal-input {\n        padding: 10px;\n        font-size: 14px;\n    }\n}\n\n@media (min-width: 768px) {\n    .modal-content {\n        width: 85%;\n        max-width: 500px;\n        padding: 24px;\n    }\n}\n\n.subscription-card {\n    background: #ffffff;\n    border-radius: 12px;\n    padding: 20px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    transition: transform 0.2s ease, border 0.2s ease;\n}\n\n.subscription-card:hover {\n    transform: translateY(-4px);\n}\n\n.subscription-card.free {\n    border: 2px solid #4caf50;\n}\n\n.subscription-card.premium {\n    border: 2px solid #2196f3;\n}\n\n.subscription-card.vip {\n    border: 2px solid #9c27b0;\n}\n\n.subscription-card.vvip {\n    border: 2px solid #ff9800;\n}\n\n.subscription-card h2 {\n    font-size: 18px;\n    color: #0e639c;\n    margin-bottom: 8px;\n}\n\n.subscription-card .price {\n    font-size: 16px;\n    font-weight: bold;\n    margin: 8px 0;\n    color: #333;\n}\n\n.subscription-card ul {\n    padding: 0;\n    margin: 12px 0;\n    text-align: left;\n}\n\n.subscription-card ul li {\n    margin: 6px 0;\n    padding-left: 20px;\n    position: relative;\n    font-size: 14px;\n    color: #555;\n}\n\n.subscription-card ul li::before {\n    content: \"✔\";\n    color: #0e639c;\n    position: absolute;\n    left: 0;\n}\n\n/* New subscription card elements */\n.tier-badge {\n    position: absolute;\n    top: -8px;\n    right: 12px;\n    background: #4caf50;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 12px;\n    font-size: 11px;\n    font-weight: bold;\n    text-transform: uppercase;\n    z-index: 2;\n}\n\n.tier-badge.popular {\n    background: #ff9800;\n    animation: pulse 2s infinite;\n}\n\n.tier-badge.elite {\n    background: #9c27b0;\n}\n\n.tier-badge.pro {\n    background: linear-gradient(45deg, #ff6b6b, #ffd93d);\n    background-size: 200% 200%;\n    animation: gradientShift 3s ease infinite;\n}\n\n@keyframes pulse {\n    0%, 100% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n}\n\n@keyframes gradientShift {\n    0%, 100% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n}\n\n.prediction-limit {\n    background: rgba(14, 99, 156, 0.1);\n    color: #0e639c;\n    padding: 6px 12px;\n    border-radius: 8px;\n    font-weight: bold;\n    font-size: 13px;\n    margin: 8px 0;\n}\n\n.savings-badge {\n    background: #4caf50;\n    color: white;\n    padding: 4px 8px;\n    border-radius: 6px;\n    font-size: 12px;\n    font-weight: bold;\n    margin: 4px 0;\n    display: inline-block;\n}\n\n.tier-features {\n    margin: 12px 0;\n    text-align: center;\n}\n\n.feature-highlight {\n    background: #f0f8ff;\n    color: #0e639c;\n    padding: 6px 10px;\n    border-radius: 6px;\n    font-size: 12px;\n    font-weight: bold;\n    margin: 4px 0;\n}\n\n.success-rate {\n    background: #e8f5e8;\n    color: #2e7d32;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 11px;\n    font-weight: bold;\n    margin: 4px 0;\n}\n\n.roi-indicator {\n    background: #fff3e0;\n    color: #ef6c00;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 11px;\n    font-weight: bold;\n    margin: 4px 0;\n}\n\n.guarantee {\n    background: #f3e5f5;\n    color: #7b1fa2;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 11px;\n    font-weight: bold;\n    margin: 4px 0;\n    border: 1px solid #7b1fa2;\n}\n\n/* Position the subscription card relative for badge positioning */\n.subscription-card {\n    position: relative;\n}\n\n.subscription-card .subscribe-btn {\n    margin-top: auto;\n    padding: 8px 16px;\n    border-radius: 8px;\n    background: #0e639c;\n    color: #fff;\n    font-weight: bold;\n    text-decoration: none;\n    transition: background 0.3s ease;\n}\n\n.subscription-card .subscribe-btn:hover {\n    background: #0b4f7a;\n}\n\n/* Current Subscription Banner */\n.current-tier {\n    background: #ffffff;\n    border: 2px solid #0e639c;\n    border-radius: 10px;\n    padding: 12px 16px;\n    margin-bottom: 16px;\n    text-align: center;\n    font-size: 15px;\n    font-weight: bold;\n    color: #333;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\n}\n\n.current-tier strong {\n    color: #0e639c;\n}\n\n/* ---------------- Profile ---------------- */\n.profile-container {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: 8px 0;\n}\n\n.profile-card {\n    background: #ffffff;\n    border-radius: 12px;\n    padding: 16px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);\n}\n\n.profile-card h2 {\n    font-size: 18px;\n    color: #0e639c;\n    margin-bottom: 4px;\n}\n\n.profile-card p {\n    font-size: 14px;\n    color: #666;\n    margin: 0;\n}\n\n/* Profile avatar / username display */\n.profile-header {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    margin-bottom: 16px;\n}\n\n.profile-avatar {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    background: #f4f5f7;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 28px;\n    font-weight: bold;\n    color: #0e639c;\n    border: 2px solid #0e639c;\n    cursor: pointer;\n    overflow: hidden;\n    transition: border-color 0.3s ease;\n    position: relative;\n}\n\n.profile-avatar:hover {\n    border-color: #4caf50;\n}\n\n.profile-avatar:hover::after {\n    content: '📷';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 20px;\n    border-radius: 50%;\n    opacity: 1;\n    transition: opacity 0.3s ease;\n}\n\n.profile-avatar .avatar-img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n.profile-avatar .default-avatar {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #f4f5f7;\n    color: #0e639c;\n    font-size: 28px;\n    font-weight: bold;\n    border-radius: 50%;\n}\n\n.profile-avatar-img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.tier-expiry-date {\n    font-size: 13px;\n    color: #555;\n    margin-top: 4px;\n    display: none;\n    /* Hidden by default */\n}\n\n.profile-username {\n    font-size: 20px;\n    font-weight: bold;\n    color: #111;\n}\n\n.profile-email {\n    font-size: 14px;\n    color: #666;\n}\n\n.username-container {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.edit-icon {\n    cursor: pointer;\n    width: 16px;\n    height: 16px;\n    background-color: #555;\n    transition: background-color 0.2s ease;\n    -webkit-mask-size: contain;\n    mask-size: contain;\n    -webkit-mask-position: center;\n    mask-position: center;\n    -webkit-mask-repeat: no-repeat;\n    mask-repeat: no-repeat;\n    -webkit-mask-image: url(./Assets/Icons/edit.svg);\n    mask-image: url(./Assets/Icons/edit.svg);\n}\n\n.icon-referral {\n    -webkit-mask-image: url(./Assets/Icons/referral.svg);\n    mask-image: url(./Assets/Icons/referral.svg);\n}\n\n.edit-icon:hover {\n    background-color: #0e639c;\n}\n\n.dark-mode .edit-icon {\n    background-color: #d4d4d4; /* Standard dark mode inactive color */\n}\n\n/* Profile Stats */\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    gap: 16px;\n    text-align: center;\n    margin-top: 12px;\n}\n\n.stat-item {\n    display: flex;\n    flex-direction: column;\n}\n\n.stat-label {\n    font-size: 13px;\n    color: #666;\n    margin-bottom: 4px;\n}\n\n.stat-value {\n    font-size: 16px;\n    font-weight: bold;\n    color: #333;\n}\n\n.dark-mode .stat-label {\n    color: #bbb;\n}\n\n.dark-mode .stat-value {\n    color: #eee;\n}\n\n/* Profile Settings */\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 0;\n}\n\n/* Profile Card Buttons */\n.profile-card button {\n    margin-top: 8px;\n    padding: 8px 16px;\n    border-radius: 8px;\n    color: #fff;\n    font-weight: bold;\n    border: none;\n    cursor: pointer;\n    transition: background 0.3s ease;\n}\n\n.danger-zone-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n#logoutBtn,\n#resetStorage {\n    background: #d9534f;\n}\n\n#logoutBtn:hover,\n#resetStorage:hover {\n    background: #c9302c;\n}\n\n/* Enhanced SVG Toggle Switch */\n:root {\n    --toggle-off: #b8c0c7;\n    --toggle-track: #b8c0c7;\n    --toggle-ring: #b8c0c7;\n    --toggle-stroke-off: #ffffff;\n    --toggle-stroke-on: #ffffff;\n}\n\n.dark-mode {\n    --toggle-off: #5b6270;\n    --toggle-track: #5b6270;\n    --toggle-ring: #5b6270;\n    --toggle-stroke-off: #e6e6e6;\n    --toggle-stroke-on: #ffffff;\n}\n\n.toggle-input {\n    position: absolute;\n    opacity: 0;\n    height: 1px;\n    width: 1px;\n    pointer-events: none;\n}\n\n.switch {\n    --a: 0.5s ease-out;\n    cursor: pointer;\n    position: relative;\n    display: inline-flex;\n    height: 17px;\n    border-radius: 999px;\n    box-shadow: 0 0 0 2px #000000;\n    aspect-ratio: 212.4992/84.4688;\n    background-color: var(--toggle-track);\n    color: var(--toggle-stroke-off);\n    transition: all var(--a);\n}\n\n.switch svg {\n    height: 100%;\n}\n\n.switch svg path {\n    color: currentColor;\n    stroke-width: 16;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke-dasharray: 136 224;\n    transition: all var(--a), 0s transform;\n    transform-origin: center;\n}\n\n.toggle-input:checked + .switch {\n    color: var(--toggle-stroke-on);\n    background-color: #0e639c;\n    box-shadow: 0 0 0 2px #000000;\n}\n\n.toggle-input:checked + .switch svg path {\n    stroke-dashoffset: 180;\n    transform: scaleY(-1);\n}\n\n.switch:focus-visible {\n    outline: 3px solid var(--statwise-blue, #0e639c);\n    outline-offset: 3px;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 0;\n    gap: 12px;\n}\n\n\n\n/* ---------------- Modal ---------------- */\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 2000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    justify-content: center;\n    align-items: center;\n}\n\n.modal-overlay {\n    display: flex;\n    position: fixed;\n    z-index: 2000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6);\n    justify-content: center;\n    align-items: center;\n}\n\n.modal-content {\n    background: #ffffff;\n    color: #333;\n    padding: 20px;\n    border-radius: 12px;\n    width: 85%;\n    max-width: 400px;\n    text-align: center;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\n}\n\n.modal-content input {\n    width: 100%;\n    padding: 10px;\n    margin-top: 10px;\n    border: 1px solid #ccc;\n    border-radius: 6px;\n}\n\n.modal-actions {\n    margin-top: 15px;\n    display: flex;\n    justify-content: space-around;\n    gap: 10px;\n}\n\n.modal-actions button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 14px;\n}\n\n.modal-actions .btn-secondary {\n    background: #6c757d;\n    color: white;\n}\n\n.modal-actions .btn-secondary:hover {\n    background: #5a6268;\n}\n\n.modal-actions .btn-primary {\n    background: #0e639c;\n    color: white;\n}\n\n.modal-actions .btn-primary:hover {\n    background: #0b4f7a;\n}\n\n.modal-actions .btn-danger {\n    background: #d9534f;\n    color: white;\n}\n\n.modal-actions .btn-danger:hover {\n    background: #c9302c;\n}\n\n/* ---------------- History Page ---------------- */\n/* History Container */\n.history-container {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n/* Shared Data Card Styles */\n.history-card,\n.prediction-card {\n    border: 2px solid;\n    border-color: #e0e0e0;\n    border-radius: 10px;\n    padding: 15px;\n    background-color: #ffffff;\n    color: #1c1c1e;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);\n}\n\n.history-title {\n    font-size: 1.2rem;\n    margin-bottom: 0.4rem;\n    color: #111;\n}\n\n.history-detail {\n    font-size: 1rem;\n    color: #444;\n}\n\n.history-time {\n    font-size: 0.9rem;\n    color: #777;\n    margin-bottom: 0.8rem;\n}\n\n/* Result Styles */\n.history-result {\n    margin-top: 0.6rem;\n    font-weight: bold;\n    padding: 4px 8px;\n    border-radius: 6px;\n    display: inline-block;\n}\n\n.history-result.win {\n    color: #4caf50;\n    border: 2px solid #4caf50;\n}\n\n.history-result.loss {\n    color: #f44336;\n    border: 2px solid #f44336;\n}\n\n.history-result.pending {\n    color: #ff9800;\n    border: 2px solid #ff9800;\n}\n\n/* Tab Content */\n.history-section .tab-content {\n    display: none;\n}\n\n.history-section .tab-content.active {\n    display: block;\n}\n\n/* ---------------- Tabs ---------------- */\n/* League tabs wrapper */\n.league-tabs-wrapper {\n    position: relative;\n    margin-bottom: 20px;\n    background: #ffffff;\n    border-radius: 12px;\n    padding: 12px 16px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    max-height: 80px;\n    transition: max-height 0.3s ease, opacity 0.3s ease, transform 0.3s ease;\n    overflow: hidden;\n}\n\n/* Scrollable tabs container */\n.scrollable-tabs {\n    display: flex;\n    gap: 8px;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    scrollbar-width: none; /* Firefox */\n    -ms-overflow-style: none; /* IE and Edge */\n    padding: 0;\n    margin-bottom: 0;\n    flex-wrap: nowrap;\n    scroll-snap-type: x proximity;\n}\n\n.scrollable-tabs::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n}\n\n/* Regular tab container for other pages */\n.tab-container:not(.scrollable-tabs),\n.history-tabs {\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n    margin-bottom: 16px;\n}\n\n/* Remove collapsed state - tabs should always be visible on mobile */\n\n.tab-btn {\n    padding: 6px 16px;\n    border-radius: 20px;\n    border: 1px solid #0e639c;\n    background: transparent;\n    color: #0e639c;\n    font-weight: 500;\n    font-size: 14px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    white-space: nowrap;\n    flex-shrink: 0;\n    scroll-snap-align: start;\n}\n\n.tab-btn.active {\n    background: #0e639c;\n    color: #fff;\n    border-color: #0e639c;\n}\n\n.tab-btn:hover {\n    background: #0e639c;\n    color: #fff;\n    border-color: #0e639c;\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(14, 99, 156, 0.2);\n}\n\n/* Dark mode support for league tabs */\n.dark-mode .league-tabs-wrapper {\n    background: #2d2d30;\n    border-color: rgba(255, 255, 255, 0.1);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n}\n\n.dark-mode .tab-btn {\n    color: #d4d4d4;\n    border-color: #555;\n}\n\n.dark-mode .tab-btn.active {\n    background: #0e639c;\n    color: #fff;\n    border-color: #0e639c;\n}\n\n.dark-mode .tab-btn:hover {\n    background: #0e639c;\n    color: #fff;\n    border-color: #0e639c;\n}\n\n/* ===== CSS Variables for Forum ===== */\n:root {\n    --card-bg: #ffffff;\n    --primary-bg: #f8f9fc;\n    --secondary-bg: #f1f3f5;\n    --text-primary: #1a1a1c;\n    --text-secondary: #666;\n    --border-color: #e0e0e0;\n    --statwise-blue: #0e639c;\n    --statwise-blue-dark: #0b4f7a;\n    --statwise-blue-light: #74b9ff;\n}\n\n.dark-mode {\n    --card-bg: #2d2d32;\n    --primary-bg: #1a1a1c;\n    --secondary-bg: #252526;\n    --text-primary: #e2e2e4;\n    --text-secondary: #bbb;\n    --border-color: #444;\n}\n\n/* ===== Forum Specific Styles ===== */\n.forum-section {\n    display: flex;\n    flex-direction: column;\n    height: calc(100vh - 140px);\n    padding: 0;\n    gap: 20px;\n}\n\n.forum-header {\n    text-align: center;\n    padding: 20px 0;\n    background: var(--card-bg);\n    border-radius: 16px;\n    margin-bottom: 20px;\n    box-shadow: var(--shadow-light);\n    border: 1px solid var(--border-color);\n}\n\n.forum-header .page-title {\n    margin-bottom: 8px;\n    font-size: 28px;\n    color: var(--statwise-blue);\n}\n\n.forum-description {\n    color: var(--text-secondary);\n    font-size: 16px;\n    margin: 0;\n}\n\n.sample-posts {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n\n.coming-soon-banner {\n    background: linear-gradient(135deg, var(--statwise-blue) 0%, var(--statwise-blue-light) 100%);\n    border-radius: 16px;\n    padding: 24px;\n    color: white;\n    margin: 20px 0;\n    text-align: center;\n    box-shadow: var(--shadow-medium);\n}\n\n.banner-content h3 {\n    margin-bottom: 20px;\n    font-size: 20px;\n    font-weight: 600;\n}\n\n.upcoming-features {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    margin: 20px 0;\n    flex-wrap: wrap;\n}\n\n.upcoming-features .feature-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    padding: 16px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 12px;\n    backdrop-filter: blur(10px);\n    min-width: 100px;\n    transition: all 0.3s ease;\n}\n\n.upcoming-features .feature-item:hover {\n    transform: translateY(-2px);\n    background: rgba(255, 255, 255, 0.2);\n}\n\n.upcoming-features .feature-icon {\n    font-size: 24px;\n}\n\n.upcoming-features span {\n    font-size: 13px;\n    font-weight: 500;\n}\n\n.banner-note {\n    font-size: 14px;\n    opacity: 0.9;\n    margin: 0;\n}\n\n.forum-guidelines {\n    margin-top: 20px;\n}\n\n.forum-guidelines h4 {\n    color: var(--statwise-blue);\n    margin-bottom: 12px;\n    font-size: 18px;\n}\n\n.forum-guidelines ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.forum-guidelines li {\n    padding: 8px 0;\n    border-bottom: 1px solid var(--border-color);\n    font-size: 14px;\n    color: var(--text-primary);\n}\n\n.forum-guidelines li:last-child {\n    border-bottom: none;\n}\n\n/* Responsive Design for Forum */\n@media (max-width: 768px) {\n    .forum-section {\n        height: calc(100vh - 160px);\n        gap: 16px;\n    }\n\n    .forum-header .page-title {\n        font-size: 24px;\n    }\n\n    .forum-description {\n        font-size: 14px;\n    }\n\n    .upcoming-features {\n        gap: 12px;\n    }\n\n    .upcoming-features .feature-item {\n        min-width: 80px;\n        padding: 12px;\n    }\n\n    .banner-content h3 {\n        font-size: 18px;\n    }\n\n    .coming-soon-banner {\n        padding: 20px 16px;\n    }\n}\n\n@media (max-width: 480px) {\n    .forum-section {\n        height: calc(100vh - 180px);\n    }\n\n    .forum-header {\n        padding: 16px;\n        margin-bottom: 16px;\n    }\n\n    .forum-header .page-title {\n        font-size: 20px;\n    }\n\n    .upcoming-features {\n        gap: 8px;\n    }\n\n    .upcoming-features .feature-item {\n        min-width: 70px;\n        padding: 10px;\n    }\n\n    .upcoming-features .feature-icon {\n        font-size: 20px;\n    }\n\n    .upcoming-features span {\n        font-size: 12px;\n    }\n\n    .coming-soon-banner {\n        padding: 16px 12px;\n        margin: 16px 0;\n    }\n\n    .banner-content h3 {\n        font-size: 16px;\n    }\n}\n\n/* ===== Coming Soon Styles ===== */\n.coming-soon-section {\n    padding: 40px 20px;\n    max-width: 600px;\n    margin: 0 auto;\n    height: calc(100vh - 180px);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n}\n\n.coming-soon-icon {\n    font-size: 80px;\n    margin-bottom: 24px;\n    animation: bounce 2s infinite;\n}\n\n.coming-soon-title {\n    font-size: 32px;\n    font-weight: 700;\n    color: var(--text-primary);\n    margin-bottom: 12px;\n    line-height: 1.2;\n}\n\n.coming-soon-subtitle {\n    font-size: 24px;\n    font-weight: 600;\n    color: var(--statwise-blue);\n    margin-bottom: 24px;\n    line-height: 1.3;\n}\n\n.coming-soon-description {\n    font-size: 16px;\n    line-height: 1.6;\n    color: var(--text-secondary);\n    margin-bottom: 40px;\n    max-width: 480px;\n}\n\n.coming-soon-features {\n    display: flex;\n    gap: 24px;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin-bottom: 32px;\n}\n\n.feature-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 8px;\n    padding: 16px;\n    background: var(--secondary-bg);\n    border: 1px solid var(--border-color);\n    border-radius: 12px;\n    min-width: 120px;\n    transition: all 0.3s ease;\n}\n\n.feature-item:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\n    border-color: var(--statwise-blue);\n}\n\n.feature-icon {\n    font-size: 24px;\n    margin-bottom: 4px;\n}\n\n.feature-item span {\n    font-size: 14px;\n    font-weight: 500;\n    color: var(--text-primary);\n    text-align: center;\n}\n\n.coming-soon-note {\n    font-size: 14px;\n    font-weight: 500;\n    color: var(--statwise-blue);\n    margin: 0;\n}\n\n@keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n        transform: translateY(0);\n    }\n    40% {\n        transform: translateY(-10px);\n    }\n    60% {\n        transform: translateY(-5px);\n    }\n}\n\n/* Coming Soon Center Styles */\n.coming-soon-center {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: calc(100vh - 120px);\n    text-align: center;\n}\n\n.coming-soon-center h1 {\n    font-size: 28px;\n    font-weight: bold;\n    color: #0e639c;\n    margin: 0;\n}\n\n/* Responsive design for coming soon page */\n@media (max-width: 768px) {\n    .coming-soon-section {\n        padding: 30px 16px;\n    }\n\n    .coming-soon-icon {\n        font-size: 60px;\n    }\n\n    .coming-soon-title {\n        font-size: 24px;\n    }\n\n    .coming-soon-subtitle {\n        font-size: 20px;\n    }\n\n    .coming-soon-features {\n        gap: 16px;\n    }\n\n    .feature-item {\n        min-width: 100px;\n        padding: 12px;\n    }\n}\n\n.message-input-container {\n    background: var(--card-bg);\n    border: 1px solid var(--border-color);\n    border-radius: 12px;\n    padding: 16px;\n    margin-bottom: 20px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.message-input-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n}\n\n#messageInput {\n    width: 100%;\n    min-height: 60px;\n    max-height: 120px;\n    padding: 12px;\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    background: var(--primary-bg);\n    color: var(--text-primary);\n    font-family: inherit;\n    font-size: 14px;\n    resize: none;\n    transition: border-color 0.3s ease;\n}\n\n#messageInput:focus {\n    outline: none;\n    border-color: var(--statwise-blue);\n    box-shadow: 0 0 0 2px rgba(14, 99, 156, 0.1);\n}\n\n.input-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.char-counter {\n    font-size: 12px;\n    color: var(--text-secondary);\n}\n\n.send-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: var(--statwise-blue);\n    color: white;\n    border: none;\n    border-radius: 8px;\n    padding: 10px 16px;\n    font-size: 14px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.send-btn:hover:not(:disabled) {\n    background: var(--statwise-blue-dark);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(14, 99, 156, 0.3);\n}\n\n.send-btn:disabled {\n    background: var(--text-secondary);\n    cursor: not-allowed;\n    transform: none;\n}\n\n.send-icon {\n    font-size: 16px;\n    transform: rotate(0deg);\n    transition: transform 0.3s ease;\n}\n\n.send-btn:hover:not(:disabled) .send-icon {\n    transform: rotate(45deg);\n}\n\n.messages-container {\n    flex: 1;\n    overflow-y: auto;\n    padding: 16px;\n    background: var(--card-bg);\n    border: 1px solid var(--border-color);\n    border-radius: 12px;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    scrollbar-width: thin;\n    scrollbar-color: var(--statwise-blue) transparent;\n}\n\n.messages-container::-webkit-scrollbar {\n    width: 4px;\n}\n\n.messages-container::-webkit-scrollbar-track {\n    background: transparent;\n}\n\n.messages-container::-webkit-scrollbar-thumb {\n    background: var(--statwise-blue);\n    border-radius: 4px;\n}\n\n/* Post Card Styles - Facebook-like appearance */\n.post-card {\n    background: var(--card-bg);\n    border: 1px solid var(--border-color);\n    border-radius: 16px;\n    padding: 0;\n    margin-bottom: 20px;\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n    transition: all 0.3s ease;\n    animation: postSlideIn 0.4s ease-out;\n    overflow: hidden;\n}\n\n.post-card:hover {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);\n    transform: translateY(-1px);\n}\n\n.post-card.own-post {\n    border: 2px solid var(--statwise-blue);\n    box-shadow: 0 2px 16px rgba(14, 99, 156, 0.15);\n}\n\n.post-header {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 16px 20px 12px 20px;\n}\n\n.profile-avatar {\n    width: 44px;\n    height: 44px;\n    border-radius: 50%;\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n.avatar-placeholder {\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, var(--statwise-blue), var(--statwise-blue-light));\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: 16px;\n    text-transform: uppercase;\n}\n\n.own-post .avatar-placeholder {\n    background: linear-gradient(135deg, #4a90e2, #7bb3f0);\n}\n\n.post-info {\n    flex: 1;\n    min-width: 0;\n}\n\n.post-info .username {\n    font-weight: 600;\n    font-size: 15px;\n    color: var(--text-primary);\n    margin: 0;\n    line-height: 1.3;\n}\n\n.post-info .timestamp {\n    color: var(--text-secondary);\n    font-size: 13px;\n    margin-top: 2px;\n    line-height: 1.2;\n}\n\n.post-content {\n    padding: 0 20px 16px 20px;\n    font-size: 15px;\n    line-height: 1.5;\n    color: var(--text-primary);\n    word-wrap: break-word;\n    white-space: pre-wrap;\n}\n\n.post-actions {\n    border-top: 1px solid var(--border-color);\n    background: var(--secondary-bg);\n}\n\n.action-stats {\n    padding: 12px 20px 8px 20px;\n    border-bottom: 1px solid var(--border-color);\n}\n\n.like-count {\n    font-size: 13px;\n    color: var(--text-secondary);\n    font-weight: 500;\n}\n\n.action-buttons {\n    display: flex;\n    padding: 0;\n}\n\n.action-btn {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n    padding: 12px;\n    background: transparent;\n    border: none;\n    color: var(--text-secondary);\n    font-size: 14px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    position: relative;\n}\n\n.action-btn:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    top: 25%;\n    bottom: 25%;\n    width: 1px;\n    background: var(--border-color);\n}\n\n.action-btn:hover {\n    background: rgba(14, 99, 156, 0.05);\n    color: var(--statwise-blue);\n}\n\n.action-btn.active {\n    color: var(--statwise-blue);\n    font-weight: 600;\n}\n\n.action-icon {\n    width: 18px;\n    height: 18px;\n    stroke-width: 1.5;\n}\n\n.like-btn:hover .action-icon {\n    stroke: #e91e63;\n}\n\n.comment-btn:hover .action-icon {\n    stroke: var(--statwise-blue);\n}\n\n.share-btn:hover .action-icon {\n    stroke: #4caf50;\n}\n\n.empty-forum {\n    text-align: center;\n    padding: 60px 20px;\n    color: var(--text-secondary);\n}\n\n.empty-icon {\n    font-size: 48px;\n    margin-bottom: 16px;\n    opacity: 0.7;\n}\n\n.empty-forum h3 {\n    color: var(--text-primary);\n    margin-bottom: 8px;\n    font-size: 20px;\n}\n\n.empty-forum p {\n    font-size: 14px;\n    line-height: 1.5;\n}\n\n.loading-messages {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 40px;\n    color: var(--text-secondary);\n}\n\n.loader-small {\n    width: 20px;\n    height: 20px;\n    border: 2px solid var(--border-color);\n    border-top: 2px solid var(--statwise-blue);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 12px;\n}\n\n.error-message {\n    text-align: center;\n    padding: 20px;\n    color: #f44336;\n    background: rgba(244, 67, 54, 0.1);\n    border: 1px solid rgba(244, 67, 54, 0.2);\n    border-radius: 8px;\n    margin: 20px;\n}\n\n@keyframes postSlideIn {\n    from {\n        opacity: 0;\n        transform: translateY(30px) scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n\n@keyframes messageSlideIn {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n/* Dark mode forum styles */\n.dark-mode .message-input-container {\n    background: var(--secondary-bg);\n    border-color: var(--border-color);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n}\n\n.dark-mode .messages-container {\n    background: var(--secondary-bg);\n    border-color: var(--border-color);\n}\n\n.dark-mode .message {\n    background: var(--primary-bg);\n    border-color: var(--border-color);\n}\n\n/* Mobile responsiveness */\n@media (max-width: 768px) {\n    .forum-section {\n        padding: 16px;\n        height: calc(100vh - 160px);\n    }\n\n    .message {\n        max-width: 90%;\n    }\n\n    .message-input-container {\n        padding: 12px;\n    }\n\n    .send-btn {\n        padding: 8px 12px;\n        font-size: 13px;\n    }\n\n    .send-icon {\n        font-size: 14px;\n    }\n}\n\n/* Show/Hide containers */\n.pricing-container,\n.tab-content {\n    display: none;\n    /* hidden by default */\n}\n\n.pricing-container.active,\n.tab-content.active {\n    display: grid; /* Use grid for active pricing container */\n}\n\n.tab-content.active {\n    display: block; /* Keep block for other tab content */\n}\n\n/* HomePage */\n.predictions-container {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.history-card:hover,\n.prediction-card:hover {\n    transition: transform 0.2s ease;\n    transform: translateY(-4px);\n}\n\n/* Match Title */\n.match-title {\n    font-size: 1.2rem;\n    margin-bottom: 0.4rem;\n    color: #111;\n}\n\n/* Prediction Details */\n.prediction-detail {\n    font-size: 1rem;\n    color: #444;\n}\n\n.odds {\n    font-size: 0.95rem;\n    margin: 0.2rem 0;\n    color: #e8590c;\n    /* Adjusted for light theme contrast */\n}\n\n.match-time {\n    font-size: 0.9rem;\n    color: #777;\n    margin-bottom: 0.8rem;\n}\n\n/* Confidence Section */\n.confidence {\n    margin-top: 0.6rem;\n}\n\n.confidence span {\n    display: block;\n    margin-bottom: 0.4rem;\n    font-size: 0.9rem;\n    color: #555;\n}\n\n.confidence-bar {\n    width: 100%;\n    height: 8px;\n    background: #e9ecef;\n    border-radius: 5px;\n    overflow: hidden;\n    margin-top: 5px;\n}\n\n.confidence-fill {\n    height: 100%;\n}\n\n/* High, Medium, Low confidence borders are fine as they are */\n\n/* High Confidence */\n.prediction-card.high-confidence {\n    border-color: #4caf50;\n    --tier-color: #4caf50;\n}\n\n.prediction-card.high-confidence .confidence-fill {\n    background: linear-gradient(90deg, #388e3c, #4caf50);\n}\n\n/* Medium Confidence */\n.prediction-card.medium-confidence {\n    border-color: #ff9800;\n    --tier-color: #ff9800;\n}\n\n.prediction-card.medium-confidence .confidence-fill {\n    background: linear-gradient(90deg, #f57c00, #ff9800);\n}\n\n/* Low Confidence */\n.prediction-card.low-confidence {\n    border-color: #f44336;\n    --tier-color: #f44336;\n}\n\n.prediction-card.low-confidence .confidence-fill {\n    background: linear-gradient(90deg, #d32f2f, #f44336);\n}\n\n/* AI Pick Styling */\n.ai-pick {\n    border: 2px solid var(--tier-color);\n    padding: 4px 8px;\n    border-radius: 6px;\n    font-weight: bold;\n    display: inline-block;\n    color: var(--tier-color);\n    /* optional: makes text match tier */\n}\n\n.card-animation {\n    animation: card-enter 0.4s ease-out forwards;\n}\n\n@keyframes card-enter {\n    from {\n        opacity: 0;\n        transform: translateY(15px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.dark-mode #search-clear-btn:hover {\n    color: #eee;\n}\n\n/* ---------------- Active Filters ---------------- */\n#active-filters-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    margin-bottom: 16px;\n    justify-content: center;\n}\n\n.filter-pill {\n    background-color: #e7f5ff;\n    color: #0e639c;\n    padding: 5px 10px;\n    border-radius: 16px;\n    font-size: 13px;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n}\n\n.filter-pill:hover {\n    background-color: #d0eaff;\n}\n\n.filter-pill .close-icon {\n    font-weight: bold;\n    font-size: 14px;\n}\n\n.no-results-message {\n    text-align: center;\n    color: #777;\n    padding: 20px;\n    display: none;\n    /* Hidden by default */\n}\n\n/* ---------------- Pull to Refresh ---------------- */\n#refresh-indicator {\n    position: fixed;\n    top: calc(var(--header-height) + 15px);\n    left: 50%;\n    transform: translateX(-50%) scale(0);\n    width: 60px;\n    height: 60px;\n    background: #0e639c;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 8px 25px rgba(14, 99, 156, 0.4);\n    border: 3px solid rgba(255, 255, 255, 0.3);\n    opacity: 0;\n    z-index: 1000;\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n    will-change: transform, opacity;\n    touch-action: none;\n}\n\n#refresh-indicator .refresh-icon {\n    width: 40px;\n    height: 40px;\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n\n#refresh-indicator.transitioning {\n    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94), \n                opacity 0.4s ease, \n                box-shadow 0.4s ease,\n                background 0.4s ease;\n}\n\n#refresh-indicator.refreshing {\n    animation: enhanced-pulse 1.5s ease-in-out infinite, \n               ripple 2s ease-out infinite;\n    background: #4caf50;\n    box-shadow: 0 12px 35px rgba(76, 175, 80, 0.5);\n    border-color: rgba(76, 175, 80, 0.5);\n}\n\n#refresh-indicator.refreshing .refresh-icon {\n    animation: enhanced-spin 1.2s cubic-bezier(0.68, -0.55, 0.265, 1.55) infinite;\n    transform: scale(1.2);\n    filter: drop-shadow(0 2px 8px rgba(76, 175, 80, 0.6)) brightness(1.1);\n}\n\n@keyframes enhanced-pulse {\n    0%, 100% { \n        transform: translateX(-50%) scale(1); \n        box-shadow: 0 8px 25px rgba(14, 99, 156, 0.4), 0 0 0 0 rgba(14, 99, 156, 0.1);\n    }\n    50% { \n        transform: translateX(-50%) scale(1.08); \n        box-shadow: 0 15px 40px rgba(76, 175, 80, 0.6), 0 0 0 20px rgba(14, 99, 156, 0.05);\n    }\n}\n\n@keyframes enhanced-spin {\n    0% { \n        transform: scale(1.2) rotate(0deg);\n        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n    }\n    25% {\n        transform: scale(1.3) rotate(90deg);\n        filter: drop-shadow(0 3px 6px rgba(0, 0, 0, 0.4));\n    }\n    50% {\n        transform: scale(1.25) rotate(180deg);\n        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.5));\n    }\n    75% {\n        transform: scale(1.3) rotate(270deg);\n        filter: drop-shadow(0 3px 6px rgba(0, 0, 0, 0.4));\n    }\n    100% { \n        transform: scale(1.2) rotate(360deg);\n        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n    }\n}\n\n@keyframes ripple {\n    0% {\n        box-shadow: 0 12px 35px rgba(76, 175, 80, 0.5), 0 0 0 0 rgba(76, 175, 80, 0.4);\n    }\n    50% {\n        box-shadow: 0 15px 40px rgba(76, 175, 80, 0.6), 0 0 0 30px rgba(76, 175, 80, 0.1);\n    }\n    100% {\n        box-shadow: 0 12px 35px rgba(76, 175, 80, 0.5), 0 0 0 50px rgba(76, 175, 80, 0);\n    }\n}\n\n/* Mobile-specific optimizations for pull-to-refresh */\nmain[data-pull-to-refresh-active=\"true\"] {\n    overscroll-behavior-y: contain;\n    -webkit-overflow-scrolling: touch;\n    will-change: transform;\n}\n\n/* Disable text selection during pull-to-refresh */\nbody.pulling-to-refresh {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    overflow: hidden;\n}\n\n/* Ensure smooth scrolling on iOS */\n@supports (-webkit-appearance: none) {\n    main[data-pull-to-refresh-active=\"true\"] {\n        -webkit-overflow-scrolling: touch;\n        -webkit-transform: translate3d(0, 0, 0);\n    }\n}\n\n/* ---------------- App Tour (Intro.js) Styling ---------------- */\n/* Override intro.js default styles to match app theme */\n\n/* Tour tooltip/popup */\n.introjs-tooltip {\n    background: rgba(14, 99, 156, 0.95) !important;\n    border: 2px solid rgba(255, 255, 255, 0.2) !important;\n    border-radius: 16px !important;\n    box-shadow: 0 12px 40px rgba(14, 99, 156, 0.4) !important;\n    backdrop-filter: blur(12px) !important;\n    -webkit-backdrop-filter: blur(12px) !important;\n    min-width: 280px !important;\n    max-width: 350px !important;\n}\n\n/* Tour tooltip arrow */\n.introjs-arrow {\n    border-top-color: rgba(14, 99, 156, 0.95) !important;\n}\n\n.introjs-arrow.bottom {\n    border-bottom-color: rgba(14, 99, 156, 0.95) !important;\n}\n\n.introjs-arrow.left {\n    border-left-color: rgba(14, 99, 156, 0.95) !important;\n}\n\n.introjs-arrow.right {\n    border-right-color: rgba(14, 99, 156, 0.95) !important;\n}\n\n/* Tour title styling */\n.introjs-tooltip-title {\n    color: #ffffff !important;\n    font-family: 'Optimistic Text A', 'Segoe UI', 'Roboto', sans-serif !important;\n    font-size: 18px !important;\n    font-weight: 600 !important;\n    margin-bottom: 8px !important;\n    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3) !important;\n}\n\n/* Tour content text */\n.introjs-tooltiptext {\n    color: rgba(255, 255, 255, 0.95) !important;\n    font-family: 'Optimistic Text A', 'Segoe UI', 'Roboto', sans-serif !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    margin-bottom: 16px !important;\n}\n\n/* Tour buttons container */\n.introjs-tooltipbuttons {\n    text-align: right !important;\n    border-top: 1px solid rgba(255, 255, 255, 0.2) !important;\n    padding-top: 12px !important;\n    margin-top: 16px !important;\n}\n\n/* Tour navigation buttons */\n.introjs-button {\n    background: rgba(255, 255, 255, 0.15) !important;\n    border: 1px solid rgba(255, 255, 255, 0.3) !important;\n    color: #ffffff !important;\n    padding: 8px 16px !important;\n    border-radius: 8px !important;\n    font-family: 'Optimistic Text A', 'Segoe UI', 'Roboto', sans-serif !important;\n    font-size: 13px !important;\n    font-weight: 500 !important;\n    margin: 0 4px !important;\n    transition: all 0.2s ease !important;\n    cursor: pointer !important;\n    backdrop-filter: blur(8px) !important;\n}\n\n.introjs-button:hover {\n    background: rgba(255, 255, 255, 0.25) !important;\n    border-color: rgba(255, 255, 255, 0.5) !important;\n    transform: translateY(-1px) !important;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2) !important;\n}\n\n/* Primary button (Next/Done) */\n.introjs-nextbutton, .introjs-donebutton {\n    background: #4caf50 !important;\n    border: 1px solid rgba(255, 255, 255, 0.4) !important;\n    color: #ffffff !important;\n    font-weight: 600 !important;\n}\n\n.introjs-nextbutton:hover, .introjs-donebutton:hover {\n    background: #5cbf60 !important;\n    box-shadow: 0 6px 16px rgba(76, 175, 80, 0.4) !important;\n}\n\n/* Skip button */\n.introjs-skipbutton {\n    background: transparent !important;\n    border: 1px solid rgba(255, 255, 255, 0.3) !important;\n    color: rgba(255, 255, 255, 0.8) !important;\n}\n\n.introjs-skipbutton:hover {\n    background: rgba(255, 255, 255, 0.1) !important;\n    color: #ffffff !important;\n}\n\n/* Tour progress dots */\n.introjs-bullets ul li a {\n    background: rgba(255, 255, 255, 0.3) !important;\n    border: 2px solid rgba(255, 255, 255, 0.5) !important;\n}\n\n.introjs-bullets ul li a.active {\n    background: #4caf50 !important;\n    border-color: #4caf50 !important;\n}\n\n/* Overlay/backdrop */\n.introjs-overlay {\n    background: rgba(0, 0, 0, 0.6) !important;\n    backdrop-filter: blur(2px) !important;\n}\n\n/* Highlighted element styling */\n.introjs-helperLayer {\n    border: 3px solid rgba(14, 99, 156, 0.8) !important;\n    border-radius: 12px !important;\n    box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.6), \n                0 0 20px rgba(14, 99, 156, 0.6) !important;\n}\n\n/* Step numbers */\n.introjs-helperNumberLayer {\n    background: #0e639c !important;\n    border: 2px solid rgba(255, 255, 255, 0.8) !important;\n    color: #ffffff !important;\n    font-family: 'Optimistic Text A', 'Segoe UI', 'Roboto', sans-serif !important;\n    font-weight: 700 !important;\n    box-shadow: 0 4px 12px rgba(14, 99, 156, 0.4) !important;\n}\n\n\n\n/* ---------------- Dark Mode Overrides ---------------- */\n.dark-mode {\n    background: #1a1a1c;\n    color: #e2e2e4;\n}\n\n.dark-mode html {\n    background: #1a1a1c;\n}\n\n\n.dark-mode header {\n    background-color: #262629;\n    color: #e2e2e4;\n    border-bottom: none;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n}\n\n.dark-mode .bottom-nav {\n    background-color: #262629;\n    border-top: none;\n    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.2);\n}\n\n.dark-mode .bottom-nav button {\n    color: #d4d4d4;\n}\n\n.dark-mode .bottom-nav .icon {\n    background-color: #d4d4d4;\n    /* Dark mode inactive color */\n}\n\n.dark-mode .bottom-nav button.active {\n    color: #0e639c;\n    /* Active color is the same */\n}\n\n.dark-mode .bottom-nav button.active .icon {\n    background-color: #0e639c;\n    /* Active color is the same */\n}\n\n.dark-mode .search-wrapper {\n    background-color: #2d2d30;\n    border-color: #555;\n}\n\n.dark-mode .search-wrapper:focus-within {\n    border-color: #0e639c;\n}\n\n.dark-mode #predictionSearch {\n    color: #d4d4d4;\n}\n\n.dark-mode #search-ghost-text {\n    color: #555;\n}\n\n.dark-mode .filter-pill {\n    background-color: #1c3a50;\n    color: #a5d8ff;\n}\n\n.dark-mode .filter-pill:hover {\n    background-color: #2a4c68;\n}\n\n.dark-mode .card,\n.dark-mode .subscription-card,\n.dark-mode .profile-card,\n.dark-mode .current-tier {\n    background: #2d2d32;\n    box-shadow: 0 4px 12px rgba(14, 99, 156, 0.08);\n    border: 1px solid rgba(14, 99, 156, 0.15);\n}\n\n.dark-mode .subscription-card .price,\n.dark-mode .current-tier {\n    color: #d4d4d4;\n}\n\n.dark-mode .tier-expiry-date {\n    color: #bbb;\n}\n\n.dark-mode .subscription-card ul li,\n.dark-mode .profile-card p,\n.dark-mode .profile-email {\n    color: #bbb;\n}\n\n/* Dark mode support for new subscription elements */\n.dark-mode .prediction-limit {\n    background: rgba(14, 99, 156, 0.2);\n    color: #74b9ff;\n}\n\n.dark-mode .feature-highlight {\n    background: #1c3a50;\n    color: #a5d8ff;\n}\n\n.dark-mode .success-rate {\n    background: #1b4332;\n    color: #52c41a;\n}\n\n.dark-mode .roi-indicator {\n    background: #3d2914;\n    color: #ffa940;\n}\n\n.dark-mode .guarantee {\n    background: #2d1b3d;\n    color: #b37feb;\n    border-color: #b37feb;\n}\n\n.dark-mode .profile-username {\n    color: #fff;\n}\n\n.dark-mode .modal-content {\n    background: #1e1e1e;\n    color: #fff;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n}\n\n.dark-mode .history-card,\n.dark-mode .prediction-card {\n    background-color: #1e1e1e;\n    border-color: #444;\n    /* Default border color for cards in dark mode */\n    color: #fff;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n.dark-mode .history-title,\n.dark-mode .match-title {\n    color: #fff;\n}\n\n.dark-mode .history-detail,\n.dark-mode .prediction-detail {\n    color: #ddd;\n}\n\n.dark-mode .history-time,\n.dark-mode .match-time {\n    color: #aaa;\n}\n\n.dark-mode .tab-btn {\n    background: #2d2d30;\n    color: #d4d4d4;\n    border-color: #555;\n}\n\n.dark-mode .tab-btn.active {\n    background: #0e639c;\n    color: #fff;\n    border-color: #0e639c;\n}\n\n.dark-mode .tab-btn:hover {\n    background: #0b4f7a;\n    color: #fff;\n    border-color: #0b4f7a;\n}\n\n/* Dark mode toggle slider styles */\n.dark-mode .slider {\n    background-color: #444;\n    border-color: #555;\n}\n\n.dark-mode input:checked+.slider {\n    background-color: #0e639c;\n    border-color: #0e639c;\n    box-shadow: 0 0 10px rgba(14, 99, 156, 0.4);\n}\n\n/* Ensure confidence colors override the default dark mode border */\n.dark-mode .prediction-card.high-confidence {\n    border-color: #4caf50;\n}\n\n.dark-mode .prediction-card.medium-confidence {\n    border-color: #ff9800;\n}\n\n.dark-mode .prediction-card.low-confidence {\n    border-color: #f44336;\n}\n\n\n.dark-mode .odds {\n    color: #ffb300;\n}\n\n.dark-mode .confidence span {\n    color: #ccc;\n}\n\n.dark-mode .confidence-bar {\n    background: #333;\n}\n\n.dark-mode .no-results-message {\n    color: #aaa;\n}\n\n.dark-mode #refresh-indicator {\n    background: #2d2d30;\n    color: #d4d4d4;\n    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.4);\n}\n\n/* ---------------- Loader ---------------- */\n#globalLoader {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 9999;\n    display: none;\n    /* Initially hidden by JS */\n    justify-content: center;\n    align-items: center;\n}\n\n.loader-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: rgba(244, 245, 247, 0.7);\n    /* Light theme overlay, matches body bg */\n}\n\n.loader-spinner {\n    width: 50px;\n    height: 50px;\n    border: 5px solid #e0e0e0;\n    /* Light theme spinner track */\n    border-top-color: #0e639c;\n    /* Spinner color */\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    z-index: 1;\n}\n\n@keyframes spin {\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n.dark-mode .loader-overlay {\n    background: rgba(30, 30, 30, 0.7);\n    /* Dark theme overlay */\n}\n\n.dark-mode .loader-spinner {\n    border-color: #444;\n    /* Dark theme spinner track */\n    border-top-color: #0e639c;\n    /* Spinner color can stay the same */\n}\n\n.button {\n    display: inline-block;\n    padding: 8px 16px;\n    border-radius: 8px;\n    background: #0e639c;\n    color: #fff;\n    font-weight: bold;\n    text-decoration: none;\n    transition: background 0.3s ease;\n    border: none;\n    cursor: pointer;\n    text-align: center;\n}\n\n.button:hover {\n    background: #0b4f7a;\n}\n\n.button.btn-danger {\n    background: #d9534f;\n}\n\n.button.btn-danger:hover {\n    background: #c9302c;\n}\n\n/* ---------------- Manage Subscription Page ---------------- */\n.manage-card {\n    background: #ffffff;\n    border-radius: 12px;\n    padding: 20px;\n    margin-bottom: 16px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\n    border: 1px solid #e0e0e0;\n    transition: border-color 0.3s ease;\n}\n\n.manage-card h2 {\n    font-size: 18px;\n    margin-bottom: 8px;\n    color: #333;\n}\n\n.manage-card p {\n    font-size: 15px;\n    color: #555;\n    margin-bottom: 12px;\n    line-height: 1.5;\n}\n\n.manage-card ul {\n    list-style-type: '✔  ';\n    padding-left: 20px;\n    margin-top: 10px;\n}\n\n.manage-card ul li {\n    margin-bottom: 5px;\n    font-size: 14px;\n    color: #444;\n}\n\n.manage-card.danger-zone {\n    border-color: #d9534f;\n}\n\n.manage-card.danger-zone h2 {\n    color: #d9534f;\n}\n\n.remaining-days-indicator {\n    background-color: #e7f5ff;\n    color: #0e639c;\n    padding: 8px 12px;\n    border-radius: 8px;\n    font-weight: bold;\n    text-align: center;\n    margin-top: 10px;\n}\n\n.dark-mode .manage-card {\n    background: #2d2d30;\n    border-color: #444;\n}\n\n.dark-mode .manage-card h2 {\n    color: #eee;\n}\n\n.dark-mode .manage-card p,\n.dark-mode .manage-card ul li {\n    color: #bbb;\n}\n\n.dark-mode .remaining-days-indicator {\n    background-color: #1c3a50;\n    color: #a5d8ff;\n}\n\n.dark-mode .edit-icon:hover {\n    background-color: #0e639c; /* Standard active/hover color */\n}\n\n.dark-mode .manage-card.danger-zone {\n    border-color: #d9534f;\n}\n\n\n/* ---------------- Referral Page ---------------- */\n.referral-table-wrapper {\n    margin-top: 16px;\n}\n\n.table-responsive {\n    width: 100%;\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n.referral-table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 12px;\n    background: var(--card-bg, #fff);\n    border-radius: 8px;\n    overflow: hidden;\n}\n\n.referral-table thead {\n    background: var(--statwise-blue, #0e639c);\n    color: white;\n}\n\n.referral-table th {\n    padding: 12px 16px;\n    text-align: left;\n    font-weight: 600;\n    font-size: 14px;\n    white-space: nowrap;\n}\n\n.referral-table tbody tr {\n    border-bottom: 1px solid var(--border-color, #e0e0e0);\n    transition: background-color 0.2s ease;\n}\n\n.referral-table tbody tr:hover {\n    background: rgba(14, 99, 156, 0.05);\n}\n\n.referral-table tbody tr:last-child {\n    border-bottom: none;\n}\n\n.referral-table td {\n    padding: 12px 16px;\n    font-size: 14px;\n    color: var(--text-primary, #333);\n}\n\n.tier-badge-small {\n    display: inline-block;\n    padding: 4px 8px;\n    border-radius: 12px;\n    font-size: 12px;\n    font-weight: 500;\n    background: rgba(14, 99, 156, 0.1);\n    color: var(--statwise-blue, #0e639c);\n}\n\n.reward-status {\n    display: inline-block;\n    padding: 4px 8px;\n    border-radius: 12px;\n    font-size: 12px;\n    font-weight: 500;\n}\n\n.reward-status.claimed {\n    background: rgba(76, 175, 80, 0.1);\n    color: #4caf50;\n}\n\n.reward-status.pending {\n    background: rgba(255, 152, 0, 0.1);\n    color: #ff9800;\n}\n\n.dark-mode .referral-table {\n    background: var(--card-bg, #2d2d30);\n}\n\n.dark-mode .referral-table thead {\n    background: rgba(14, 99, 156, 0.9);\n}\n\n.dark-mode .referral-table tbody tr {\n    border-bottom-color: var(--border-color, #444);\n}\n\n.dark-mode .referral-table tbody tr:hover {\n    background: rgba(14, 99, 156, 0.1);\n}\n\n.dark-mode .referral-table td {\n    color: var(--text-primary, #e2e2e4);\n}\n\n.dark-mode .tier-badge-small {\n    background: rgba(14, 99, 156, 0.2);\n    color: #74b9ff;\n}\n\n/* Responsive table for mobile */\n@media (max-width: 768px) {\n    .referral-table thead {\n        display: none;\n    }\n\n    .referral-table tbody tr {\n        display: block;\n        margin-bottom: 16px;\n        border: 1px solid var(--border-color, #e0e0e0);\n        border-radius: 8px;\n        padding: 12px;\n    }\n\n    .referral-table td {\n        display: flex;\n        justify-content: space-between;\n        padding: 8px 0;\n        border: none;\n    }\n\n    .referral-table td:before {\n        content: attr(data-label);\n        font-weight: 600;\n        color: var(--text-secondary, #666);\n    }\n\n    .dark-mode .referral-table td:before {\n        color: var(--text-secondary, #bbb);\n    }\n}\n\n.referral-code-container {\n    display: flex;\n    gap: 8px;\n    margin-top: 8px;\n}\n\n#referralCodeInput {\n    flex-grow: 1;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    background-color: #f1f3f5;\n    color: #333;\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n}\n\n#referralCodeInput:focus {\n    outline: none;\n}\n\n.dark-mode #referralCodeInput {\n    background-color: #252526;\n    border-color: #555;\n    color: #d4d4d4;\n}\n\n.form-description {\n    font-size: 14px;\n    color: #666;\n    margin-bottom: 16px;\n    text-align: center;\n    line-height: 1.5;\n}\n\n/* ---------------- Referral Page Share Buttons ---------------- */\n.share-buttons-container {\n    display: flex;\n    justify-content: center;\n    gap: 16px;\n    margin-top: 20px;\n    padding-top: 16px;\n    border-top: 1px solid #e0e0e0;\n}\n\n.share-btn {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: 44px;\n    height: 44px;\n    border-radius: 50%;\n    border: none;\n    cursor: pointer;\n    transition: transform 0.2s ease, background-color 0.2s ease;\n    padding: 0;\n    background-color: #f1f3f5;\n}\n\n.share-btn:hover {\n    transform: scale(1.1);\n}\n\n.share-btn svg {\n    width: 22px;\n    height: 22px;\n    color: #333;\n}\n\n.share-btn.whatsapp:hover {\n    background-color: #e0f8e5;\n}\n\n.share-btn.whatsapp:hover svg {\n    color: #25D366;\n}\n\n.share-btn.twitter:hover {\n    background-color: #e1f5fe;\n}\n\n.share-btn.twitter:hover svg {\n    color: #1DA1F2;\n}\n\n.share-btn.generic:hover {\n    background-color: #e8eaf6;\n}\n\n.share-btn.generic:hover svg {\n    stroke: #5c6bc0;\n    color: #5c6bc0;\n}\n\n.dark-mode .share-buttons-container {\n    border-top-color: #444;\n}\n\n.dark-mode .share-btn {\n    background-color: #252526;\n}\n\n.dark-mode .share-btn svg {\n    color: #d4d4d4;\n}\n\n.dark-mode .share-btn.whatsapp:hover {\n    background-color: #1a3c2a;\n}\n\n.dark-mode .share-btn.twitter:hover {\n    background-color: #1a3a4a;\n}\n\n.dark-mode .share-btn.generic:hover {\n    background-color: #2a2d42;\n    stroke: #a5d8ff;\n}\n\n/* ---------------- Referral Name Display (Auth Page) ---------------- */\n.referral-name-display {\n    display: none;\n    /* Hidden by default */\n    font-size: 13px;\n    color: #0e639c;\n    background-color: #e7f5ff;\n    padding: 8px;\n    border-radius: 6px;\n    margin-top: 8px;\n    text-align: center;\n}\n\n.dark-mode .referral-name-display {\n    background-color: #1c3a50;\n    color: #a5d8ff;\n}\n\n/* --- Animated Background --- */\n.area {\n    position: fixed; /* Use fixed to stay in viewport */\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1; /* Place it behind all content */\n    pointer-events: none; /* Allow clicks to pass through */\n}\n\n.circles {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    margin: 0;\n    padding: 0;\n}\n\n.circles li {\n    position: absolute;\n    display: block;\n    list-style: none;\n    width: 20px;\n    height: 20px;\n    background: rgba(14, 99, 156, 0.2); /* Base color, JS will override opacity */\n    /* Animation is now handled by JavaScript */\n}\n\n.circles li:nth-child(1) { left: 25%; width: 80px; height: 80px; }\n.circles li:nth-child(2) { left: 10%; width: 20px; height: 20px; }\n.circles li:nth-child(3) { left: 70%; width: 20px; height: 20px; }\n.circles li:nth-child(4) { left: 40%; width: 60px; height: 60px; }\n.circles li:nth-child(5) { left: 65%; width: 20px; height: 20px; }\n.circles li:nth-child(6) { left: 75%; width: 110px; height: 110px; background: rgba(14, 99, 156, 0.15); }\n.circles li:nth-child(7) { left: 35%; width: 150px; height: 150px; background: rgba(14, 99, 156, 0.1); }\n.circles li:nth-child(8) { left: 50%; width: 25px; height: 25px; }\n.circles li:nth-child(9) { left: 20%; width: 15px; height: 15px; background: rgba(14, 99, 156, 0.25); }\n.circles li:nth-child(10) { left: 85%; width: 150px; height: 150px; background: rgba(14, 99, 156, 0.1); }\n\n/* --- Animated Background Dark Mode Overrides --- */\n.dark-mode .circles li {\n    background: rgba(165, 216, 255, 0.1); /* Light blue accent for dark mode */\n}\n.dark-mode .circles li:nth-child(6) {\n    background: rgba(165, 216, 255, 0.08);\n}\n.dark-mode .circles li:nth-child(7) {\n    background: rgba(165, 216, 255, 0.05);\n}\n.dark-mode .circles li:nth-child(9) {\n    background: rgba(165, 216, 255, 0.12);\n}\n.dark-mode .circles li:nth-child(10) {\n    background: rgba(165, 216, 255, 0.05);\n}\n\n/* Dark mode animated background */\n.dark-mode .animated-background {\n    background: #1a1a1c;\n}\n\n/* Dark mode gradient overlays removed to comply with no-gradient requirement */\n\n/* Dark mode background overlay gradients removed to comply with no-gradient requirement */\n\n/* ---------------- Error Container (from 404.css) ---------------- */\n.error-container {\n    max-width: 450px;\n    margin: 0 auto; /* Center the container */\n    text-align: center;\n    padding: 40px 20px;\n}\n\n.error-icon {\n    font-size: 48px;\n    margin-bottom: 20px;\n}\n\n.error-title {\n    font-size: 6rem;\n    font-weight: bold;\n    color: #0e639c;\n    margin: 0;\n}\n\n.error-subtitle {\n    font-size: 1.5rem;\n    color: #333;\n    margin-bottom: 20px;\n}\n\n.error-message {\n    color: #666;\n    margin-bottom: 30px;\n}\n\n.dark-mode .error-subtitle, .dark-mode .error-message { color: #bbb; }\n\n/* ===== AdBlocker Overlay Styles ===== */\n#adblocker-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(14, 99, 156, 0.15);\n    z-index: 10000;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    backdrop-filter: blur(10px);\n}\n\n.adblocker-container {\n    background: #ffffff;\n    border-radius: 16px;\n    padding: 40px;\n    max-width: 500px;\n    width: 90%;\n    text-align: center;\n    box-shadow: 0 8px 32px rgba(14, 99, 156, 0.2);\n    border: 3px solid #0e639c;\n}\n\n.adblocker-content h2 {\n    color: #0e639c;\n    margin-bottom: 20px;\n    font-size: 28px;\n    font-weight: 600;\n}\n\n.adblocker-icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    filter: grayscale(0%) hue-rotate(200deg) saturate(1.2);\n}\n\n.adblocker-content p {\n    color: #555;\n    margin-bottom: 20px;\n    line-height: 1.6;\n}\n\n.adblocker-content ul {\n    text-align: left;\n    color: #333;\n    margin: 20px 0;\n    padding-left: 0;\n    list-style: none;\n}\n\n.adblocker-content li {\n    margin: 10px 0;\n    padding: 12px 20px;\n    background: rgba(14, 99, 156, 0.08);\n    border-radius: 10px;\n    border-left: 4px solid #0e639c;\n}\n\n.adblocker-buttons {\n    margin: 30px 0 20px;\n    display: flex;\n    gap: 15px;\n    flex-wrap: wrap;\n    justify-content: center;\n}\n\n.btn-refresh, .btn-upgrade {\n    padding: 12px 24px;\n    border: none;\n    border-radius: 10px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    flex: 1;\n    min-width: 140px;\n}\n\n.btn-refresh {\n    background: #0e639c;\n    color: white;\n}\n\n.btn-refresh:hover {\n    background: #0b4f7a;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(14, 99, 156, 0.3);\n}\n\n.btn-upgrade {\n    background: #ff9800;\n    color: white;\n}\n\n.btn-upgrade:hover {\n    background: #f57c00;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(255, 152, 0, 0.3);\n}\n\n.adblocker-note {\n    color: #666;\n    font-size: 14px;\n    font-style: italic;\n    margin-top: 20px;\n}\n\n@media (max-width: 480px) {\n    .adblocker-container {\n        padding: 30px 20px;\n        margin: 20px;\n    }\n\n    .adblocker-buttons {\n        flex-direction: column;\n    }\n\n    .btn-refresh, .btn-upgrade {\n        width: 100%;\n    }\n}","size_bytes":69675},"sw.js":{"content":"// sw.js\n// Service Worker for StatWise PWA - Offline support only\n// Firebase messaging has been removed after Supabase migration\n\nconst CACHE_NAME = 'statwise-offline-v1';\nconst OFFLINE_URL = './Offline/offline.html';\n\n// A list of all the assets needed for the offline page to work correctly.\nconst OFFLINE_ASSETS = [\n    './Offline/offline.html',\n    './Offline/offline.css',\n    './Assets/Fonts/Optimistic_Text_A_Md.ttf',\n    './manifest.json'\n];\n\n/**\n * 1. Install the service worker and cache the offline assets.\n */\nself.addEventListener('install', (event) => {\n    event.waitUntil(\n        (async () => {\n            const cache = await caches.open(CACHE_NAME);\n            console.log('[Service Worker] Caching offline assets');\n            await cache.addAll(OFFLINE_ASSETS);\n        })()\n    );\n    // Force the waiting service worker to become the active service worker.\n    self.skipWaiting();\n});\n\n/**\n * 2. Clean up old caches on activation.\n */\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        (async () => {\n            // Delete old caches that are not in use.\n            const cacheNames = await caches.keys();\n            await Promise.all(\n                cacheNames.filter(name => name !== CACHE_NAME).map(name => caches.delete(name))\n            );\n        })()\n    );\n    // Tell the active service worker to take control of the page immediately.\n    self.clients.claim();\n});\n\n/**\n * 3. Intercept fetch requests and serve the offline page if a navigation request fails.\n */\nself.addEventListener('fetch', (event) => {\n    if (event.request.mode === 'navigate') {\n        event.respondWith(\n            fetch(event.request).catch(() => caches.match(OFFLINE_URL))\n        );\n    }\n});\n\nconsole.log('[Service Worker] StatWise PWA Service Worker loaded - Offline support enabled');\n\n/**\n * 4. Handle PWA installation\n */\nself.addEventListener('beforeinstallprompt', (event) => {\n    console.log('[Service Worker] PWA install prompt triggered');\n    // Optionally prevent the default prompt and show custom install UI\n});\n\nself.addEventListener('appinstalled', (event) => {\n    console.log('[Service Worker] PWA was installed successfully');\n});","size_bytes":2194},"Loader/loader.css":{"content":"","size_bytes":0},"main.js":{"content":"// main.js - StatWise PWA with Supabase-only implementation\nimport { supabase, FLWPUBK } from './env.js';\nimport { showLoader, hideLoader, showSpinner, hideSpinner } from './Loader/loader.js';\nimport { initInteractiveBackground, initializeTheme } from './ui.js';\nimport { initializeAppSecurity, manageInitialPageLoad } from './manager.js';\nimport { formatTimestamp, addHistoryUnique } from './utils.js';\n\n// ===== Global Variables =====\nconst main = document.querySelector(\"main\");\nconst navButtons = document.querySelectorAll(\".bottom-nav button\");\nconst defaultPage = \"home\";\nlet currentUser = null;\nlet verifiedTier = null; // Start as null until profile loads\nlet adsLoaded = false;\nlet adblockerDetected = false;\n\n// Initialize the app\ninitializeTheme(); // Initialize theme system\ninitializeSupabaseAuth();\ncheckPaymentRedirect();\n// Ad system will be initialized after user tier is loaded\n\n// ===== Authentication Setup =====\nasync function initializeSupabaseAuth() {\n    // Get initial session\n    const { data: { session }, error } = await supabase.auth.getSession();\n\n    if (session) {\n        currentUser = session.user;\n        await handleUserLogin(session.user);\n    } else {\n        // Allow access to subscription page without authentication\n        const currentPage = localStorage.getItem('lastPage') || 'home';\n        if (currentPage === 'subscriptions') {\n            await loadPage('subscriptions');\n        } else {\n            redirectToLogin();\n        }\n    }\n\n    // Listen for auth changes\n    supabase.auth.onAuthStateChange(async (event, session) => {\n        console.log('Auth state changed:', event);\n\n        if (event === 'SIGNED_IN' && session) {\n            currentUser = session.user;\n            await handleUserLogin(session.user);\n        } else if (event === 'SIGNED_OUT') {\n            currentUser = null;\n            redirectToLogin();\n        }\n    });\n}\n\n// ===== User Management =====\nasync function handleUserLogin(user) {\n    try {\n        showLoader();\n        console.log('User logged in:', user.email);\n\n        // Check if email is verified\n        if (!user.email_confirmed_at) {\n            console.log('Email not verified, showing verification notice');\n            hideLoader();\n            showEmailVerificationNotice(user.email);\n            return;\n        }\n\n        // Create or update user profile\n        await createOrUpdateUserProfile(user);\n\n        // Load user data and initialize app\n        await loadUserData(user);\n\n        // Initialize the main application\n        initializeApp();\n\n        hideLoader();\n    } catch (error) {\n        console.error('Error handling user login:', error);\n        hideLoader();\n    }\n}\n\nfunction showEmailVerificationNotice(email) {\n    const main = document.querySelector('main');\n    if (!main) return;\n\n    main.innerHTML = `\n        <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; min-height: 60vh; padding: 20px; text-align: center;\">\n            <div style=\"background: var(--card-bg, #fff); padding: 40px; border-radius: 16px; max-width: 500px; box-shadow: 0 4px 20px rgba(0,0,0,0.1);\">\n                <div style=\"font-size: 64px; margin-bottom: 20px;\">📧</div>\n                <h2 style=\"color: var(--text-primary, #333); margin-bottom: 16px;\">Verify Your Email</h2>\n                <p style=\"color: var(--text-secondary, #666); margin-bottom: 24px; line-height: 1.6;\">\n                    We sent a verification link to<br>\n                    <strong style=\"color: var(--primary-color, #0e639c);\">${email}</strong>\n                </p>\n                <p style=\"color: var(--text-secondary, #666); margin-bottom: 32px; line-height: 1.6;\">\n                    Please check your inbox and click the verification link to continue.\n                </p>\n                <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n                    <button onclick=\"window.location.reload()\" style=\"background: var(--primary-color, #0e639c); color: white; border: none; padding: 12px 24px; border-radius: 8px; cursor: pointer; font-size: 16px; font-weight: 500;\">\n                        I've Verified My Email\n                    </button>\n                    <button onclick=\"window.signOut()\" style=\"background: transparent; color: var(--text-secondary, #666); border: 1px solid var(--border-color, #ddd); padding: 12px 24px; border-radius: 8px; cursor: pointer; font-size: 16px;\">\n                        Sign Out\n                    </button>\n                </div>\n                <p style=\"color: var(--text-tertiary, #999); margin-top: 24px; font-size: 14px;\">\n                    Didn't receive the email? Check your spam folder or contact support.\n                </p>\n            </div>\n        </div>\n    `;\n}\n\nasync function createOrUpdateUserProfile(user) {\n    try {\n        const userData = {\n            id: user.id,\n            email: user.email,\n            username: user.user_metadata?.display_name || user.email.split('@')[0],\n            display_name: user.user_metadata?.display_name || user.email.split('@')[0],\n            current_tier: 'Free Tier',\n            tier: 'Free Tier',\n            subscription_status: 'active',\n            is_new_user: true,\n            notifications: true,\n            last_login: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        };\n\n        const { data, error } = await supabase\n            .from('user_profiles')\n            .upsert(userData, { onConflict: 'id' })\n            .select()\n            .single();\n\n        if (error && error.code !== '23505') { // Ignore unique constraint violations\n            console.warn('Profile creation warning:', error);\n        } else {\n            console.log('User profile created/updated:', data);\n        }\n\n        // Generate referral code if not exists\n        await generateReferralCode(user.id);\n\n    } catch (error) {\n        console.warn('Error creating user profile:', error);\n    }\n}\n\nasync function loadUserData(user) {\n    try {\n        // Load user profile\n        const { data: profile, error } = await supabase\n            .from('user_profiles')\n            .select('*')\n            .eq('id', user.id)\n            .single();\n\n        if (profile) {\n            verifiedTier = profile.current_tier || 'Free Tier';\n            console.log('User tier loaded:', verifiedTier);\n\n            // Initialize ad system now that we know the user's tier\n            initializeAdSystemForUser();\n        } else {\n            // Default to free tier if no profile found\n            verifiedTier = 'Free Tier';\n            initializeAdSystemForUser();\n        }\n    } catch (error) {\n        console.warn('Error loading user data:', error);\n    }\n}\n\n// ===== Referral System =====\nasync function generateReferralCode(userId) {\n    try {\n        const code = userId.substring(0, 8).toUpperCase();\n\n        const { data, error } = await supabase\n            .from('referral_codes')\n            .upsert({\n                user_id: userId,\n                code: code,\n                username: currentUser?.email?.split('@')[0] || 'User',\n                total_referrals: 0,\n                active: true,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }, { onConflict: 'user_id' })\n            .select()\n            .single();\n\n        if (error && error.code !== '23505') {\n            console.warn('Referral code generation warning:', error);\n        } else {\n            console.log('Referral code generated:', data?.code);\n        }\n    } catch (error) {\n        console.warn('Error generating referral code:', error);\n    }\n}\n\n// ===== Payment System =====\nfunction checkPaymentRedirect() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const paymentStatus = urlParams.get('payment');\n    const transactionId = urlParams.get('transaction_id');\n\n    if (paymentStatus === 'success' && transactionId) {\n        setTimeout(() => {\n            showModal({\n                message: `🎉 Welcome back!\\n\\nYour payment has been processed successfully.\\nTransaction ID: ${transactionId}\\n\\nPlease wait while we verify your subscription...`,\n                confirmClass: 'btn-success',\n                confirmText: 'Continue',\n                onConfirm: () => {\n                    loadPage('subscriptions');\n                }\n            });\n        }, 1000);\n\n        window.history.replaceState({}, document.title, window.location.pathname);\n    } else if (paymentStatus === 'cancelled') {\n        setTimeout(() => {\n            showModal({\n                message: '❌ Payment was cancelled.\\n\\nYour subscription has not been updated. You can try again anytime.',\n                confirmClass: 'btn-warning',\n                confirmText: 'OK'\n            });\n        }, 1000);\n\n        window.history.replaceState({}, document.title, window.location.pathname);\n    }\n}\n\n// ===== App Navigation =====\nfunction initializeApp() {\n    // Initialize other app features first\n    initializeAppSecurity();\n\n    // Set up navigation\n    navButtons.forEach(button => {\n        button.addEventListener(\"click\", () => {\n            const page = button.getAttribute(\"data-page\");\n            const tier = button.getAttribute(\"data-tier\");\n\n            if (tier && !hasAccess(tier)) {\n                showUpgradeModal(tier);\n                return;\n            }\n\n            loadPage(page);\n        });\n    });\n\n    // Load the correct initial page (checks localStorage for last page)\n    loadInitialPage();\n}\n\nfunction loadInitialPage() {\n    // Determine page load priority: URL hash > localStorage > default\n    const initialHash = window.location.hash.substring(1);\n    const lastPage = localStorage.getItem(\"lastPage\");\n    const pageToLoad = initialHash || lastPage || defaultPage;\n\n    console.log('Loading initial page:', pageToLoad, 'from:', initialHash ? 'hash' : lastPage ? 'localStorage' : 'default');\n    loadPage(pageToLoad);\n}\n\nfunction hasAccess(requiredTier) {\n    const tierLevels = {\n        'Free Tier': 0,\n        'Premium Tier': 1,\n        'VIP Tier': 2,\n        'VVIP Tier': 3\n    };\n\n    const currentLevel = tierLevels[verifiedTier] || 0;\n    const requiredLevel = tierLevels[requiredTier] || 0;\n\n    return currentLevel >= requiredLevel;\n}\n\nfunction showUpgradeModal(requiredTier) {\n    showModal({\n        message: `This feature requires ${requiredTier} subscription.\\n\\nWould you like to upgrade now?`,\n        confirmText: 'Upgrade',\n        cancelText: 'Cancel',\n        onConfirm: () => {\n            loadPage('subscriptions');\n        }\n    });\n}\n\nasync function loadPage(page) {\n    try {\n        // Validate page parameter\n        if (!page || typeof page !== 'string') {\n            console.error('Invalid page parameter:', page);\n            return;\n        }\n\n        showLoader();\n\n        // Save current page to localStorage for reload persistence\n        try {\n            localStorage.setItem('lastPage', page);\n        } catch (storageError) {\n            console.warn('Failed to save page to localStorage:', storageError);\n        }\n\n        // Update active navigation with null checks\n        if (navButtons && navButtons.length > 0) {\n            navButtons.forEach(btn => {\n                if (btn && btn.getAttribute) {\n                    btn.classList.toggle(\"active\", btn.getAttribute(\"data-page\") === page);\n                }\n            });\n        }\n\n        // Add fade-out transition to current content\n        if (main) {\n            main.classList.add('page-fade-out');\n\n            // Wait for fade-out animation to complete\n            await new Promise(resolve => setTimeout(resolve, 200));\n\n            // Load page content\n            const response = await fetch(`./Pages/${page}.html`);\n            if (response.ok) {\n                const content = await response.text();\n                main.innerHTML = content;\n\n                // Reset scroll position to top for each new page - force immediate reset\n                main.scrollTop = 0;\n                document.documentElement.scrollTop = 0;\n                document.body.scrollTop = 0;\n\n                // Force a layout recalculation to ensure scroll reset\n                main.offsetHeight;\n\n                // Remove fade-out and add fade-in transition\n                main.classList.remove('page-fade-out');\n                main.classList.add('page-fade-in');\n\n                // Initialize page-specific functionality\n                try {\n                    await initializePage(page);\n                } catch (initError) {\n                    console.error('Error initializing page:', initError);\n                }\n\n                // Remove fade-in class after animation completes\n                setTimeout(() => {\n                    if (main) {\n                        main.classList.remove('page-fade-in');\n                    }\n                }, 300);\n            } else {\n                main.innerHTML = '<div class=\"error\">Page not found</div>';\n                main.scrollTop = 0;\n                document.documentElement.scrollTop = 0;\n                document.body.scrollTop = 0;\n                main.offsetHeight;\n                main.classList.remove('page-fade-out');\n            }\n        }\n\n        hideLoader();\n    } catch (error) {\n        console.error('Error loading page:', error);\n        if (main) {\n            main.innerHTML = '<div class=\"error\">Error loading page</div>';\n            main.scrollTop = 0;\n            document.documentElement.scrollTop = 0;\n            document.body.scrollTop = 0;\n            main.offsetHeight;\n            main.classList.remove('page-fade-out');\n        }\n        hideLoader();\n    }\n}\n\nasync function initializePage(page) {\n    switch (page) {\n        case 'home':\n            await initializeHomePage();\n            break;\n        case 'forum':\n            await initializeForumPage();\n            break;\n        case 'profile':\n            await initializeProfilePage();\n            break;\n        case 'subscriptions':\n            await initializeSubscriptionsPage();\n            break;\n        case 'manage-subscription':\n            await initializeManageSubscriptionPage();\n            break;\n        case 'referral':\n            await initializeReferralPage();\n            break;\n        case 'insights':\n            await initializeInsightsPage();\n            break;\n    }\n}\n\n// ===== Page Initializers =====\nasync function initializeHomePage() {\n    // Load predictions based on user tier\n    await loadPredictions();\n    // Initialize league tabs\n    initializeLeagueTabs();\n}\n\nasync function loadPredictions() {\n    try {\n        // Determine accessible tiers based on user subscription\n        let accessibleTiers = ['free'];\n\n        if (verifiedTier === 'Premium Tier') {\n            accessibleTiers.push('premium');\n        } else if (verifiedTier === 'VIP Tier') {\n            accessibleTiers.push('premium', 'vip');\n        } else if (verifiedTier === 'VVIP Tier') {\n            accessibleTiers.push('premium', 'vip', 'vvip');\n        }\n\n        const { data: predictions, error } = await supabase\n            .from('predictions')\n            .select('*')\n            .in('tier', accessibleTiers)\n            .gte('kickoff_time', new Date().toISOString())\n            .order('kickoff_time', { ascending: true })\n            .limit(10);\n\n        if (error) {\n            console.warn('Error loading predictions:', error);\n            return;\n        }\n\n        displayPredictions(predictions || []);\n    } catch (error) {\n        console.error('Error loading predictions:', error);\n    }\n}\n\nfunction displayPredictions(predictions) {\n    const container = document.getElementById('predictions-container');\n    if (!container) return;\n\n    if (predictions.length === 0) {\n        container.innerHTML = `\n            <div class=\"no-predictions\">\n                <h3>No predictions available</h3>\n                <p>Check back later for new AI predictions!</p>\n            </div>\n        `;\n        return;\n    }\n\n    const predictionsHTML = predictions.map(prediction => `\n        <div class=\"prediction-card tier-${prediction.tier}\">\n            <div class=\"match-header\">\n                <h4>${prediction.home_team} vs ${prediction.away_team}</h4>\n                <span class=\"league\">${prediction.league}</span>\n            </div>\n            <div class=\"prediction-content\">\n                <div class=\"prediction-result\">\n                    <span class=\"label\">Prediction:</span>\n                    <span class=\"result\">${prediction.prediction}</span>\n                </div>\n                <div class=\"confidence\">\n                    <span class=\"label\">Confidence:</span>\n                    <span class=\"value\">${prediction.confidence}%</span>\n                </div>\n                ${prediction.odds ? `\n                    <div class=\"odds\">\n                        <span class=\"label\">Odds:</span>\n                        <span class=\"value\">${prediction.odds}</span>\n                    </div>\n                ` : ''}\n                <div class=\"kickoff\">\n                    <span class=\"label\">Kickoff:</span>\n                    <span class=\"time\">${formatTimestamp(prediction.kickoff_time)}</span>\n                </div>\n            </div>\n            ${prediction.reasoning ? `\n                <div class=\"reasoning\">\n                    <p>${prediction.reasoning}</p>\n                </div>\n            ` : ''}\n            <div class=\"prediction-actions\">\n                <button onclick=\"savePrediction('${prediction.id}')\" class=\"btn-save\">\n                    Save to History\n                </button>\n            </div>\n        </div>\n    `).join('');\n\n    container.innerHTML = predictionsHTML;\n}\n\n// ===== Forum Functionality =====\nasync function initializeForumPage() {\n    // Forum is coming soon - no functionality needed\n    console.log('Forum page loaded - Coming Soon');\n}\n\nasync function initializeProfilePage() {\n    await loadUserProfile();\n}\n\nasync function loadUserProfile() {\n    if (!currentUser) return;\n\n    try {\n        const { data: profile, error } = await supabase\n            .from('user_profiles')\n            .select('*')\n            .eq('id', currentUser.id)\n            .single();\n\n        if (error) {\n            console.warn('Error loading user profile:', error);\n            return;\n        }\n\n        displayUserProfile(profile);\n    } catch (error) {\n        console.error('Error loading user profile:', error);\n    }\n}\n\nfunction displayUserProfile(profile) {\n    // Update user name\n    const userNameElement = document.getElementById('userName');\n    if (userNameElement) {\n        userNameElement.textContent = profile.display_name || profile.username || 'User';\n    }\n\n    // Update user email\n    const userEmailElement = document.getElementById('userEmail');\n    if (userEmailElement) {\n        userEmailElement.textContent = profile.email || '';\n    }\n\n    // Update user tier\n    const userTierElement = document.getElementById('user-tier');\n    if (userTierElement) {\n        userTierElement.textContent = profile.current_tier || 'Free Tier';\n    }\n\n    // Update profile avatar\n    const avatarContainer = document.getElementById('profileAvatarContainer');\n    if (avatarContainer) {\n        // Set proper styling for container\n        avatarContainer.style.position = 'relative';\n        avatarContainer.style.cursor = 'pointer';\n        \n        if (profile.profile_picture_url) {\n            avatarContainer.innerHTML = `\n                <img src=\"${profile.profile_picture_url}\" alt=\"Profile Picture\" class=\"avatar-img\" style=\"width: 100%; height: 100%; object-fit: cover; border-radius: 50%;\">\n                <div class=\"avatar-overlay\" style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.4); border-radius: 50%; display: flex; align-items: center; justify-content: center; opacity: 0; transition: opacity 0.3s; pointer-events: none;\">\n                    <svg width=\"24\" height=\"24\" fill=\"white\" viewBox=\"0 0 24 24\">\n                        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n                        <path d=\"M19 13h-2v2h-2v2h2v2h2v-2h2v-2h-2z\"/>\n                    </svg>\n                </div>\n            `;\n        } else {\n            const initial = (profile.display_name || profile.username || 'U').charAt(0).toUpperCase();\n            avatarContainer.innerHTML = `\n                <div class=\"default-avatar\" style=\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; font-size: 48px; font-weight: bold; background: linear-gradient(135deg, var(--primary-color, #0e639c), #1e88e5); color: white; border-radius: 50%;\">\n                    ${initial}\n                </div>\n                <div class=\"avatar-overlay\" style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.4); border-radius: 50%; display: flex; align-items: center; justify-content: center; opacity: 0; transition: opacity 0.3s; pointer-events: none;\">\n                    <svg width=\"24\" height=\"24\" fill=\"white\" viewBox=\"0 0 24 24\">\n                        <path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\n                        <path d=\"M19 13h-2v2h-2v2h2v2h2v-2h2v-2h-2z\"/>\n                    </svg>\n                </div>\n            `;\n        }\n\n        // Add hover effect and click handler\n        avatarContainer.addEventListener('mouseenter', () => {\n            const overlay = avatarContainer.querySelector('.avatar-overlay');\n            if (overlay) overlay.style.opacity = '1';\n        });\n        \n        avatarContainer.addEventListener('mouseleave', () => {\n            const overlay = avatarContainer.querySelector('.avatar-overlay');\n            if (overlay) overlay.style.opacity = '0';\n        });\n        \n        avatarContainer.addEventListener('click', () => {\n            console.log('Avatar clicked - triggering upload');\n            const avatarUpload = document.getElementById('avatarUpload');\n            if (avatarUpload) {\n                avatarUpload.click();\n            } else {\n                console.error('Avatar upload input not found');\n            }\n        });\n    }\n\n    // Initialize profile page interactions\n    initializeProfileInteractions();\n}\n\nfunction initializeProfileInteractions() {\n    // Initialize dark mode toggle\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n        // Set current state\n        const currentTheme = localStorage.getItem('statwise-theme') || 'light';\n        darkModeToggle.checked = currentTheme === 'dark';\n\n        // Add event listener\n        darkModeToggle.addEventListener('change', function() {\n            import('./ui.js').then(({ toggleTheme }) => {\n                toggleTheme();\n            });\n        });\n    }\n\n    // Initialize logout button\n    const logoutBtn = document.getElementById('logoutBtn');\n    if (logoutBtn) {\n        logoutBtn.addEventListener('click', window.signOut);\n    }\n\n    // Initialize manage subscription button\n    const manageSubscription = document.getElementById('manageSubscription');\n    if (manageSubscription) {\n        manageSubscription.addEventListener('click', () => {\n            loadPage('manage-subscription');\n        });\n    }\n\n    // Initialize referral button\n    const referralBtn = document.getElementById('referralBtn');\n    if (referralBtn) {\n        referralBtn.addEventListener('click', () => {\n            loadPage('referral');\n        });\n    }\n\n    // Initialize reset storage button\n    const resetStorage = document.getElementById('resetStorage');\n    if (resetStorage) {\n        resetStorage.addEventListener('click', () => {\n            showModal({\n                message: 'Are you sure you want to reset local cache? This will clear saved predictions and preferences.',\n                confirmText: 'Reset Cache',\n                cancelText: 'Cancel',\n                onConfirm: () => {\n                    localStorage.clear();\n                    location.reload();\n                }\n            });\n        });\n    }\n\n    // Initialize edit username button\n    const editUsernameBtn = document.getElementById('editUsernameBtn');\n    if (editUsernameBtn) {\n        editUsernameBtn.addEventListener('click', () => {\n            const userNameElement = document.getElementById('userName');\n            if (userNameElement) {\n                const currentName = userNameElement.textContent;\n\n                showModal({\n                    message: 'Enter your new username:',\n                    inputType: 'text',\n                    inputValue: currentName,\n                    inputPlaceholder: 'Enter username',\n                    confirmText: 'Save',\n                    cancelText: 'Cancel',\n                    onConfirm: async (newUsername) => {\n                        if (newUsername && newUsername.trim() && newUsername.trim() !== currentName) {\n                            await updateUsername(newUsername.trim());\n                        }\n                    }\n                });\n            }\n        });\n    }\n\n    // Initialize avatar upload - wait for DOM to be ready\n    const avatarUpload = document.getElementById('avatarUpload');\n    if (avatarUpload) {\n        console.log('✅ Avatar upload input found, adding event listener');\n        // Remove any existing listeners first\n        avatarUpload.removeEventListener('change', handleAvatarUpload);\n        // Add the event listener\n        avatarUpload.addEventListener('change', handleAvatarUpload);\n    } else {\n        console.warn('⚠️ Avatar upload input not found in profile page');\n    }\n}\n\n// Make functions globally available\nwindow.loadPage = loadPage;\n\nasync function handleAvatarUpload(event) {\n    console.log('📸 Avatar upload triggered, processing file...');\n\n    if (!event || !event.target || !event.target.files) {\n        console.warn('Invalid upload event');\n        return;\n    }\n\n    const file = event.target.files[0];\n    if (!file) {\n        console.log('No file selected');\n        return;\n    }\n\n    console.log('File selected:', {\n        name: file.name,\n        size: file.size,\n        type: file.type\n    });\n\n    // Validate file type\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n    if (!allowedTypes.includes(file.type)) {\n        console.error('Invalid file type:', file.type);\n        showModal({\n            message: 'Please select a valid image file (JPEG, PNG, GIF, or WebP).',\n            confirmText: 'OK'\n        });\n        return;\n    }\n\n    // Validate file size (5MB limit)\n    const maxSize = 5 * 1024 * 1024; // 5MB in bytes\n    if (file.size > maxSize) {\n        showModal({\n            message: 'Image file is too large. Please select an image smaller than 5MB.',\n            confirmText: 'OK'\n        });\n        return;\n    }\n\n    try {\n        showSpinner();\n\n        // Generate unique filename\n        const fileExt = file.name.split('.').pop();\n        const fileName = `${currentUser.id}-${Date.now()}.${fileExt}`;\n\n        // Upload to Supabase Storage\n        const { data: uploadData, error: uploadError } = await supabase.storage\n            .from('profile-pictures')\n            .upload(fileName, file, {\n                cacheControl: '3600',\n                upsert: true\n            });\n\n        if (uploadError) {\n            console.error('Upload error:', uploadError);\n            showModal({\n                message: 'Failed to upload profile picture. Please try again.',\n                confirmText: 'OK'\n            });\n            return;\n        }\n\n        // Get public URL\n        const { data: urlData } = supabase.storage\n            .from('profile-pictures')\n            .getPublicUrl(fileName);\n\n        if (!urlData.publicUrl) {\n            showModal({\n                message: 'Failed to get image URL. Please try again.',\n                confirmText: 'OK'\n            });\n            return;\n        }\n\n        // Update user profile with new image URL\n        const { error: updateError } = await supabase\n            .from('user_profiles')\n            .update({\n                profile_picture_url: urlData.publicUrl,\n                updated_at: new Date().toISOString()\n            })\n            .eq('id', currentUser.id);\n\n        if (updateError) {\n            console.error('Profile update error:', updateError);\n            showModal({\n                message: 'Failed to update profile. Please try again.',\n                confirmText: 'OK'\n            });\n            return;\n        }\n\n        // Reload profile to show updated avatar\n        await loadUserProfile();\n\n        showModal({\n            message: '✅ Profile picture updated successfully!',\n            confirmText: 'OK'\n        });\n\n        console.log('Profile picture updated:', urlData.publicUrl);\n\n    } catch (error) {\n        console.error('Error uploading avatar:', error);\n        showModal({\n            message: 'An error occurred while uploading your profile picture. Please try again.',\n            confirmText: 'OK'\n        });\n    } finally {\n        hideSpinner();\n        // Clear the file input\n        if (event && event.target) {\n            event.target.value = '';\n        }\n    }\n}\n\n\nasync function initializeSubscriptionsPage() {\n    console.log('Initializing subscriptions page...');\n    await loadSubscriptionInfo();\n    initializeSubscriptionTabs();\n    initializeSubscriptionButtons();\n    console.log('Subscriptions page initialized successfully');\n}\n\nasync function initializeManageSubscriptionPage() {\n    console.log('Initializing manage subscription page...');\n    await loadManageSubscriptionInfo();\n    initializeManageSubscriptionButtons();\n}\n\nasync function loadManageSubscriptionInfo() {\n    if (!currentUser) {\n        console.warn('No current user found for manage subscription');\n        return;\n    }\n\n    console.log('Loading manage subscription info for user:', currentUser.id);\n\n    try {\n        const { data: profile, error } = await supabase\n            .from('user_profiles')\n            .select('*')\n            .eq('id', currentUser.id)\n            .single();\n\n        if (error) {\n            console.warn('Error loading subscription info:', error);\n            return;\n        }\n\n        console.log('Profile data loaded:', profile);\n        displayManageSubscriptionInfo(profile);\n    } catch (error) {\n        console.error('Error loading subscription info:', error);\n    }\n}\n\nfunction displayManageSubscriptionInfo(profile) {\n    const planInfoCard = document.getElementById('plan-info-card');\n    if (!planInfoCard) {\n        console.warn('plan-info-card element not found');\n        return;\n    }\n\n    console.log('Displaying subscription info for profile:', profile);\n\n    const currentTier = profile.current_tier || 'Free Tier';\n    const subscriptionEnd = profile.subscription_end;\n    const subscriptionStatus = profile.subscription_status || 'active';\n\n    let planContent = `\n        <h2>Current Plan: ${currentTier}</h2>\n        <p><strong>Status:</strong> ${subscriptionStatus}</p>\n    `;\n\n    if (subscriptionEnd) {\n        planContent += `<p><strong>Next Billing:</strong> ${formatTimestamp(subscriptionEnd)}</p>`;\n    }\n\n    if (currentTier === 'Free Tier') {\n        planContent += `\n            <p>You're currently on the free plan. Upgrade to unlock premium features!</p>\n            <button onclick=\"window.loadPage('subscriptions')\" class=\"button\">Upgrade Now</button>\n        `;\n    } else {\n        planContent += `\n            <p>Thank you for being a ${currentTier} subscriber!</p>\n        `;\n\n        // Show auto-renewal and cancellation options for paid plans\n        const autoRenewContainer = document.getElementById('auto-renew-container');\n        const cancelContainer = document.getElementById('cancel-subscription-container');\n\n        if (autoRenewContainer) autoRenewContainer.style.display = 'block';\n        if (cancelContainer) cancelContainer.style.display = 'block';\n    }\n\n    planInfoCard.innerHTML = planContent;\n    console.log('Subscription info displayed successfully');\n}\n\nfunction initializeManageSubscriptionButtons() {\n    // Change Plan button\n    const changePlanBtn = document.getElementById('changePlanBtn');\n    if (changePlanBtn) {\n        changePlanBtn.addEventListener('click', () => {\n            loadPage('subscriptions');\n        });\n    }\n\n    // Auto-renewal toggle\n    const toggleAutoRenewBtn = document.getElementById('toggleAutoRenewBtn');\n    if (toggleAutoRenewBtn) {\n        toggleAutoRenewBtn.textContent = 'Manage Auto-Renewal';\n        toggleAutoRenewBtn.addEventListener('click', () => {\n            showModal({\n                message: 'Auto-renewal management is coming soon! Contact support for assistance.',\n                confirmText: 'OK'\n            });\n        });\n    }\n\n    // Cancel subscription button\n    const cancelSubscriptionBtn = document.getElementById('cancelSubscriptionBtn');\n    if (cancelSubscriptionBtn) {\n        cancelSubscriptionBtn.addEventListener('click', () => {\n            showModal({\n                message: 'Are you sure you want to cancel your subscription? You will lose access to premium features at the end of your billing period.',\n                confirmText: 'Yes, Cancel',\n                cancelText: 'Keep Subscription',\n                onConfirm: () => {\n                    handleSubscriptionCancellation();\n                }\n            });\n        });\n    }\n}\n\nasync function handleSubscriptionCancellation() {\n    try {\n        showSpinner();\n\n        // Update subscription status to cancelled\n        const { error } = await supabase\n            .from('user_profiles')\n            .update({\n                subscription_status: 'cancelled',\n                updated_at: new Date().toISOString()\n            })\n            .eq('id', currentUser.id);\n\n        if (error) {\n            console.error('Error cancelling subscription:', error);\n            showModal({\n                message: 'Error cancelling subscription. Please try again or contact support.',\n                confirmText: 'OK'\n            });\n            return;\n        }\n\n        showModal({\n            message: 'Your subscription has been cancelled. You will retain access to premium features until the end of your current billing period.',\n            confirmText: 'OK',\n            onConfirm: () => {\n                // Reload the page to show updated status\n                loadManageSubscriptionInfo();\n            }\n        });\n\n    } catch (error) {\n        console.error('Error handling cancellation:', error);\n        showModal({\n            message: 'An error occurred. Please try again.',\n            confirmText: 'OK'\n        });\n    } finally {\n        hideSpinner();\n    }\n}\n\nasync function loadSubscriptionInfo() {\n    if (!currentUser) {\n        console.log('No user authenticated, skipping subscription info load');\n        return;\n    }\n\n    try {\n        const { data: profile, error } = await supabase\n            .from('user_profiles')\n            .select('current_tier, subscription_period, subscription_start, subscription_end, subscription_status')\n            .eq('id', currentUser.id)\n            .single();\n\n        if (error) {\n            console.warn('Error loading subscription info:', error);\n            return;\n        }\n\n        displaySubscriptionInfo(profile);\n    } catch (error) {\n        console.error('Error loading subscription info:', error);\n    }\n}\n\nfunction displaySubscriptionInfo(profile) {\n    // Update current tier display\n    const userTierElement = document.getElementById('user-tier');\n    if (userTierElement) {\n        userTierElement.textContent = profile.current_tier || 'Free Tier';\n    }\n\n    // Update tier expiry\n    const tierExpiryElement = document.getElementById('tier-expiry');\n    if (tierExpiryElement && profile.subscription_end) {\n        tierExpiryElement.textContent = `Expires: ${formatTimestamp(profile.subscription_end)}`;\n        tierExpiryElement.style.display = 'block';\n    } else if (tierExpiryElement) {\n        tierExpiryElement.style.display = 'none';\n    }\n}\n\nfunction initializeSubscriptionTabs() {\n    const tabButtons = document.querySelectorAll('[data-tab]');\n    const tabContents = document.querySelectorAll('.pricing-container');\n\n    tabButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const targetTab = button.getAttribute('data-tab');\n\n            // Update active button\n            tabButtons.forEach(btn => btn.classList.remove('active'));\n            button.classList.add('active');\n\n            // Update active content\n            tabContents.forEach(content => {\n                content.classList.remove('active');\n                if (content.id === targetTab) {\n                    content.classList.add('active');\n                }\n            });\n        });\n    });\n}\n\nfunction initializeLeagueTabs() {\n    console.log('Initializing league tabs...');\n    const tabButtons = document.querySelectorAll('.tab-btn[data-tab]');\n    const tabContents = document.querySelectorAll('.tab-content');\n\n    console.log('Found tab buttons:', tabButtons.length);\n    console.log('Found tab contents:', tabContents.length);\n\n    tabButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const targetTab = button.getAttribute('data-tab');\n            console.log('Tab clicked:', targetTab);\n\n            // Update active button\n            tabButtons.forEach(btn => btn.classList.remove('active'));\n            button.classList.add('active');\n\n            // Update active content\n            tabContents.forEach(content => {\n                content.classList.remove('active');\n                if (content.id === targetTab) {\n                    content.classList.add('active');\n                    console.log('Activated tab content:', targetTab);\n                }\n            });\n        });\n    });\n}\n\nfunction initializeSubscriptionButtons() {\n    console.log('Initializing subscription buttons...');\n    const subscribeButtons = document.querySelectorAll('.subscribe-btn');\n    console.log('Found subscription buttons:', subscribeButtons.length);\n\n    subscribeButtons.forEach(button => {\n        button.addEventListener('click', (e) => {\n            e.preventDefault();\n            console.log('Subscription button clicked');\n\n            const tier = button.getAttribute('data-tier');\n            const amount = button.getAttribute('data-amount');\n            const period = button.getAttribute('data-period');\n\n            console.log('Subscription details:', { tier, amount, period });\n\n            if (tier === 'free') {\n                showModal({\n                    message: 'You are already on the free tier!',\n                    confirmText: 'OK'\n                });\n                return;\n            }\n\n            // Handle subscription upgrade\n            handleSubscriptionUpgrade(tier, amount, period);\n        });\n    });\n}\n\nasync function handleSubscriptionUpgrade(tier, amount, period) {\n    try {\n        // Check if user is authenticated before showing upgrade modal\n        if (!currentUser) {\n            showModal({\n                message: 'Please log in to upgrade your subscription.',\n                confirmText: 'Login',\n                cancelText: 'Cancel',\n                onConfirm: () => {\n                    redirectToLogin();\n                }\n            });\n            return;\n        }\n\n        // For authenticated users, show payment flow\n        showModal({\n            message: `Upgrade to ${tier} tier for ₦${amount}/${period}?`,\n            confirmText: 'Upgrade',\n            cancelText: 'Cancel',\n            onConfirm: () => {\n                // Initialize Flutterwave payment\n                initializePayment(tier, period, amount);\n            }\n        });\n    } catch (error) {\n        console.error('Error handling subscription upgrade:', error);\n        showModal({\n            message: 'Error processing subscription upgrade. Please try again.',\n            confirmText: 'OK'\n        });\n    }\n}\n\nasync function initializeReferralPage() {\n    await loadReferralData();\n}\n\nasync function loadReferralData() {\n    if (!currentUser) return;\n\n    try {\n        // Get user's referral code\n        const { data: referralCode, error: codeError } = await supabase\n            .from('referral_codes')\n            .select('*')\n            .eq('user_id', currentUser.id)\n            .single();\n\n        // Get user's referrals\n        const { data: referrals, error: referralsError } = await supabase\n            .from('referrals')\n            .select(`\n                *,\n                user_profiles!referred_id (display_name, email, current_tier, created_at)\n            `)\n            .eq('referrer_id', currentUser.id)\n            .order('created_at', { ascending: false });\n\n        if (codeError && codeError.code !== 'PGRST116') {\n            console.warn('Error loading referral code:', codeError);\n        }\n\n        if (referralsError) {\n            console.warn('Error loading referrals:', referralsError);\n        }\n\n        displayReferralData(referralCode, referrals || []);\n    } catch (error) {\n        console.error('Error loading referral data:', error);\n    }\n}\n\nfunction displayReferralData(referralCode, referrals) {\n    const code = referralCode?.code || 'No Code Found';\n\n    // Update referral code input\n    const referralCodeInput = document.getElementById('referralCodeInput');\n    if (referralCodeInput) {\n        referralCodeInput.value = code;\n    }\n\n    // Update referral list\n    const referralListContainer = document.getElementById('referralListContainer');\n    if (referralListContainer) {\n        if (referrals.length === 0) {\n            referralListContainer.innerHTML = '<p>No referrals yet. Share your code to get started!</p>';\n        } else {\n            const referralHTML = `\n                <div class=\"table-responsive\">\n                    <table class=\"referral-table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Tier</th>\n                                <th>Joined</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            ${referrals.map(referral => `\n                                <tr>\n                                    <td data-label=\"Name\">${referral.user_profiles?.display_name || 'User'}</td>\n                                    <td data-label=\"Email\">${referral.user_profiles?.email || ''}</td>\n                                    <td data-label=\"Tier\"><span class=\"tier-badge-small\">${referral.user_profiles?.current_tier || 'Free Tier'}</span></td>\n                                    <td data-label=\"Joined\">${formatTimestamp(referral.created_at)}</td>\n                                    <td data-label=\"Status\">\n                                        <span class=\"reward-status ${referral.reward_claimed ? 'claimed' : 'pending'}\">\n                                            ${referral.reward_claimed ? '✅ Rewarded' : '⏳ Pending'}\n                                        </span>\n                                    </td>\n                                </tr>\n                            `).join('')}\n                        </tbody>\n                    </table>\n                </div>\n            `;\n            referralListContainer.innerHTML = referralHTML;\n        }\n    }\n\n    // Update rewards count\n    const rewardsCount = document.getElementById('rewardsCount');\n    if (rewardsCount) {\n        const claimedRewards = referrals.filter(r => r.reward_claimed).length;\n        rewardsCount.textContent = claimedRewards;\n    }\n\n    // Update rewards container\n    const rewardsContainer = document.getElementById('rewardsContainer');\n    if (rewardsContainer) {\n        const claimedReferrals = referrals.filter(r => r.reward_claimed);\n        if (claimedReferrals.length === 0) {\n            rewardsContainer.innerHTML = '<p>No rewards earned yet. You\\'ll get a reward when a referred user subscribes!</p>';\n        } else {\n            const rewardsHTML = claimedReferrals.map(referral => `\n                <div class=\"reward-item\">\n                    <span>Premium Week from ${referral.user_profiles?.display_name || 'User'}</span>\n                    <span class=\"reward-amount\">₦${referral.reward_amount?.toLocaleString() || '500'}</span>\n                </div>\n            `).join('');\n            rewardsContainer.innerHTML = rewardsHTML;\n        }\n    }\n\n    // Initialize referral page interactions\n    initializeReferralInteractions();\n}\n\nfunction initializeReferralInteractions() {\n    // Initialize copy referral code button\n    const copyReferralCodeBtn = document.getElementById('copyReferralCodeBtn');\n    if (copyReferralCodeBtn) {\n        copyReferralCodeBtn.addEventListener('click', () => {\n            const referralCodeInput = document.getElementById('referralCodeInput');\n            if (referralCodeInput && referralCodeInput.value !== 'Loading...' && referralCodeInput.value !== 'No Code Found') {\n                navigator.clipboard.writeText(referralCodeInput.value).then(() => {\n                    // Show success feedback\n                    copyReferralCodeBtn.textContent = 'Copied!';\n                    copyReferralCodeBtn.style.background = '#28a745';\n                    setTimeout(() => {\n                        copyReferralCodeBtn.textContent = 'Copy';\n                        copyReferralCodeBtn.style.background = '';\n                    }, 2000);\n                }).catch(() => {\n                    showModal({\n                        message: 'Failed to copy referral code',\n                        confirmText: 'OK'\n                    });\n                });\n            }\n        });\n    }\n\n    // Initialize share buttons\n    const shareWhatsAppBtn = document.getElementById('shareWhatsAppBtn');\n    if (shareWhatsAppBtn) {\n        shareWhatsAppBtn.addEventListener('click', () => {\n            const referralCode = document.getElementById('referralCodeInput')?.value;\n            if (referralCode && referralCode !== 'Loading...' && referralCode !== 'No Code Found') {\n                const message = `Join StatWise using my referral code: ${referralCode} and get exclusive AI sports predictions!`;\n                const url = `https://wa.me/?text=${encodeURIComponent(message)}`;\n                window.open(url, '_blank');\n            }\n        });\n    }\n\n    const shareTwitterBtn = document.getElementById('shareTwitterBtn');\n    if (shareTwitterBtn) {\n        shareTwitterBtn.addEventListener('click', () => {\n            const referralCode = document.getElementById('referralCodeInput')?.value;\n            if (referralCode && referralCode !== 'Loading...' && referralCode !== 'No Code Found') {\n                const message = `Join StatWise using my referral code: ${referralCode} and get exclusive AI sports predictions!`;\n                const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`;\n                window.open(url, '_blank');\n            }\n        });\n    }\n\n    const shareGenericBtn = document.getElementById('shareGenericBtn');\n    if (shareGenericBtn) {\n        shareGenericBtn.addEventListener('click', () => {\n            const referralCode = document.getElementById('referralCodeInput')?.value;\n            if (referralCode && referralCode !== 'Loading...' && referralCode !== 'No Code Found') {\n                const message = `Join StatWise using my referral code: ${referralCode} and get exclusive AI sports predictions!`;\n                if (navigator.share) {\n                    navigator.share({\n                        title: 'StatWise Referral',\n                        text: message\n                    });\n                } else {\n                    // Fallback to copying to clipboard\n                    navigator.clipboard.writeText(message).then(() => {\n                        showModal({\n                            message: 'Referral message copied to clipboard!',\n                            confirmText: 'OK'\n                        });\n                    });\n                }\n            }\n        });\n    }\n}\n\nasync function initializeInsightsPage() {\n    // VIP and VVIP tier only\n    if (!hasAccess('VIP Tier')) {\n        showUpgradeModal('VIP Tier');\n        return;\n    }\n\n    await loadInsights();\n}\n\nasync function loadInsights() {\n    try {\n        const { data: accuracy, error } = await supabase\n            .from('prediction_accuracy')\n            .select('*')\n            .order('date', { ascending: false })\n            .limit(30);\n\n        if (error) {\n            console.warn('Error loading insights:', error);\n            return;\n        }\n\n        displayInsights(accuracy || []);\n    } catch (error) {\n        console.error('Error loading insights:', error);\n    }\n}\n\nfunction displayInsights(accuracy) {\n    const container = document.getElementById('insights-container');\n    if (!container) return;\n\n    const totalPredictions = accuracy.reduce((sum, day) => sum + (day.total_predictions || 0), 0);\n    const correctPredictions = accuracy.reduce((sum, day) => sum + (day.correct_predictions || 0), 0);\n    const overallAccuracy = totalPredictions > 0 ? (correctPredictions / totalPredictions * 100).toFixed(1) : 0;\n\n    container.innerHTML = `\n        <div class=\"insights-section\">\n            <div class=\"insights-header\">\n                <h3>AI Prediction Performance</h3>\n                <div class=\"overall-stats\">\n                    <div class=\"stat-card\">\n                        <h4>Overall Accuracy</h4>\n                        <span class=\"stat-value\">${overallAccuracy}%</span>\n                    </div>\n                    <div class=\"stat-card\">\n                        <h4>Total Predictions</h4>\n                        <span class=\"stat-value\">${totalPredictions}</span>\n                    </div>\n                    <div class=\"stat-card\">\n                        <h4>Correct Predictions</h4>\n                        <span class=\"stat-value\">${correctPredictions}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"accuracy-chart\">\n                <h4>Recent Performance</h4>\n                ${accuracy.length === 0 ? `\n                    <p>No performance data available yet.</p>\n                ` : `\n                    <div class=\"chart-data\">\n                        ${accuracy.slice(0, 7).map(day => {\n                            const dayAccuracy = day.total_predictions > 0 ?\n                                (day.correct_predictions / day.total_predictions * 100).toFixed(1) : 0;\n                            return `\n                                <div class=\"chart-bar\">\n                                    <div class=\"bar\" style=\"height: ${dayAccuracy}%\"></div>\n                                    <span class=\"date\">${new Date(day.date).toLocaleDateString()}</span>\n                                    <span class=\"accuracy\">${dayAccuracy}%</span>\n                                </div>\n                            `;\n                        }).join('')}\n                    </div>\n                `}\n            </div>\n        </div>\n    `;\n}\n\n// ===== Global Functions =====\nwindow.savePrediction = async function(predictionId) {\n    if (!currentUser) {\n        showModal({ message: 'Please log in to save predictions.', confirmText: 'OK' });\n        return;\n    }\n\n    if (!predictionId) {\n        showModal({ message: 'Invalid prediction ID.', confirmText: 'OK' });\n        return;\n    }\n\n    try {\n        const { data, error } = await supabase\n            .from('user_prediction_history')\n            .insert({\n                user_id: currentUser.id,\n                prediction_id: predictionId,\n                saved_at: new Date().toISOString()\n            });\n\n        if (error && error.code !== '23505') { // Ignore duplicate key errors\n            console.warn('Error saving prediction:', error);\n            showModal({ message: 'Error saving prediction. Please try again.', confirmText: 'OK' });\n            return;\n        }\n\n        showModal({\n            message: 'Prediction saved to your history!',\n            confirmText: 'View History',\n            cancelText: 'Continue',\n            onConfirm: () => {\n                try {\n                    loadPage('history');\n                } catch (error) {\n                    console.error('Error loading history page:', error);\n                }\n            }\n        });\n    } catch (error) {\n        console.error('Error saving prediction:', error);\n        showModal({ message: 'Error saving prediction. Please try again.', confirmText: 'OK' });\n    }\n};\n\n// Referral code copying is now handled in initializeReferralInteractions()\n\nwindow.signOut = async function() {\n    try {\n        console.log('Starting sign out process...');\n        showLoader();\n        \n        // Sign out from Supabase\n        const { error } = await supabase.auth.signOut();\n        \n        if (error) {\n            console.error('Supabase sign out error:', error);\n            hideLoader();\n            \n            // Show error and still proceed with local cleanup\n            alert('Sign out encountered an issue, but local data will be cleared.');\n        }\n        \n        // Clear local data regardless of Supabase error\n        try {\n            localStorage.clear();\n            sessionStorage.clear();\n        } catch (storageError) {\n            console.warn('Error clearing storage:', storageError);\n        }\n        \n        // Reset global variables\n        currentUser = null;\n        verifiedTier = null;\n        \n        hideLoader();\n        \n        console.log('Sign out successful, redirecting to login...');\n        \n        // Redirect to login page using absolute path from root\n        window.location.href = '/Auth/login.html';\n        \n    } catch (error) {\n        console.error('Unexpected error during sign out:', error);\n        hideLoader();\n        \n        // Force cleanup and redirect even on error\n        try {\n            localStorage.clear();\n            sessionStorage.clear();\n        } catch (e) {\n            console.warn('Error clearing storage:', e);\n        }\n        \n        alert('Sign out completed with errors. Redirecting to login...');\n        window.location.href = '/Auth/login.html';\n    }\n};\n\nwindow.initializePayment = function(tier, period, amount) {\n    if (!currentUser) {\n        showModal({ message: 'Please log in to subscribe.' });\n        return;\n    }\n\n    // Initialize Flutterwave payment\n    FlutterwaveCheckout({\n        public_key: FLWPUBK,\n        tx_ref: `statwise_${currentUser.id}_${Date.now()}`,\n        amount: amount,\n        currency: \"NGN\",\n        payment_options: \"card,mobilemoney,ussd\",\n        customer: {\n            email: currentUser.email,\n            phone_number: \"\",\n            name: currentUser.user_metadata?.display_name || currentUser.email\n        },\n        customizations: {\n            title: \"StatWise Subscription\",\n            description: `${tier} - ${period}`,\n            logo: \"\"\n        },\n        callback: function (data) {\n            console.log('Payment callback:', data);\n            if (data.status === \"successful\") {\n                // Show loader while verifying payment\n                showLoader();\n                handleSuccessfulPayment(data, tier, period, amount);\n            } else if (data.status === \"cancelled\") {\n                console.log('Payment was cancelled by user');\n                showModal({\n                    message: 'Payment was cancelled. You can try again anytime.',\n                    confirmText: 'OK'\n                });\n            } else {\n                console.log('Payment failed:', data);\n                showModal({\n                    message: 'Payment failed. Please try again or contact support.',\n                    confirmText: 'OK'\n                });\n            }\n        },\n        onclose: function() {\n            console.log('Payment modal closed');\n            // Don't show loader if modal is just closed without payment\n        }\n    });\n};\n\nasync function handleSuccessfulPayment(paymentData, tier, period, amount) {\n    try {\n        console.log('🔄 Verifying payment with server...');\n\n        // Call Supabase Edge Function to verify payment\n        const { data: verificationResult, error: verificationError } = await supabase.functions.invoke('verify-payment', {\n            body: {\n                transaction_id: paymentData.transaction_id,\n                tx_ref: paymentData.tx_ref,\n                amount: amount,\n                tier: tier,\n                period: period,\n                user_id: currentUser.id,\n                flw_ref: paymentData.flw_ref || paymentData.transaction_id\n            }\n        });\n\n        // Always hide loader after verification attempt (success or error)\n        hideLoader();\n\n        if (verificationError) {\n            console.error('Payment verification failed:', verificationError);\n            showModal({\n                message: 'Payment verification failed. Please contact support with your transaction ID: ' + paymentData.transaction_id,\n                confirmText: 'OK'\n            });\n            return;\n        }\n\n        if (verificationResult?.success) {\n            // Update local user tier\n            verifiedTier = tier;\n            console.log('✅ Payment verified and subscription updated successfully!');\n\n            showModal({\n                message: `🎉 Congratulations!\\n\\nYour ${tier} subscription is now active!\\n\\nTransaction ID: ${paymentData.transaction_id}`,\n                confirmText: 'Continue',\n                onConfirm: () => {\n                    // Reload the subscriptions page to show updated tier\n                    loadPage('subscriptions');\n                }\n            });\n        } else {\n            console.error('Payment verification failed:', verificationResult);\n            showModal({\n                message: verificationResult?.message || 'Payment could not be verified. Please contact support.',\n                confirmText: 'OK'\n            });\n        }\n\n    } catch (error) {\n        hideLoader();\n        console.error('Error handling successful payment:', error);\n        showModal({\n            message: 'Payment successful but there was an error verifying it. Please contact support with your transaction ID: ' + paymentData.transaction_id,\n            confirmText: 'OK'\n        });\n    }\n}\n\nfunction redirectToLogin() {\n    console.log('No user found, redirecting to login...');\n    window.location.href = './Auth/login.html';\n}\n\n// ===== Ad System Management =====\nfunction initializeAdSystemForUser() {\n    console.log('🔧 Initializing ad system for tier:', verifiedTier);\n\n    if (verifiedTier === \"Free Tier\") {\n        // Check if consent has been granted for advertising\n        checkConsentAndLoadAds();\n    } else {\n        console.log('👑 Premium user - no ads');\n        hideAdBlockerMessage(); // Hide any existing adblocker message\n    }\n}\n\n// Check consent status and load ads accordingly\nfunction checkConsentAndLoadAds() {\n    // Listen for consent updates\n    window.addEventListener('consentUpdated', function(event) {\n        const consent = event.detail;\n        console.log('🍪 Consent updated:', consent);\n\n        if (consent.ad_storage === 'granted' && verifiedTier === \"Free Tier\") {\n            loadAdsForFreeUsers();\n        } else {\n            console.log('🚫 Ads not loaded - consent denied or premium user');\n        }\n    });\n\n    // Check if consent manager is available and get current consent\n    if (window.consentManager) {\n        const currentConsent = window.consentManager.getConsentStatus();\n        if (currentConsent && currentConsent.ad_storage === 'granted') {\n            loadAdsForFreeUsers();\n        } else {\n            console.log('⏳ Waiting for user consent to load ads...');\n        }\n    } else {\n        // Fallback: load consent manager if not available\n        console.log('⏳ Consent manager not ready, waiting...');\n        setTimeout(checkConsentAndLoadAds, 1000);\n    }\n}\n\nfunction loadAdsForFreeUsers() {\n    if (verifiedTier !== \"Free Tier\" || adsLoaded) {\n        console.log('👑 Premium user - ads disabled');\n        return;\n    }\n\n    console.log('📺 Loading ads for free user...');\n\n    // Load Google AdSense script dynamically\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9868946535437166';\n    script.crossOrigin = 'anonymous';\n\n    script.onload = () => {\n        console.log('✅ AdSense loaded successfully');\n        adsLoaded = true;\n        // Adblocker detection disabled\n        // setTimeout(detectAdBlocker, 1000);\n    };\n\n    script.onerror = () => {\n        console.log('❌ AdSense failed to load');\n        // Adblocker detection disabled\n        // adblockerDetected = true;\n        // showAdBlockerMessage();\n    };\n\n    document.head.appendChild(script);\n}\n\nfunction detectAdBlocker() {\n    try {\n        console.log('🕵️ Checking for adblocker...');\n\n        // Create a test ad element\n        const testAd = document.createElement('div');\n        testAd.innerHTML = '&nbsp;';\n        testAd.className = 'adsbox adsbygoogle';\n        testAd.style.position = 'absolute';\n        testAd.style.left = '-9999px';\n        testAd.style.width = '1px';\n        testAd.style.height = '1px';\n\n        document.body.appendChild(testAd);\n\n        setTimeout(() => {\n            try {\n                const isBlocked = testAd.offsetHeight === 0 ||\n                                 testAd.offsetWidth === 0 ||\n                                 testAd.style.display === 'none' ||\n                                 testAd.style.visibility === 'hidden';\n\n                if (document.body.contains(testAd)) {\n                    document.body.removeChild(testAd);\n                }\n\n                if (isBlocked || !window.adsbygoogle) {\n                    console.log('🚫 Adblocker detected');\n                    adblockerDetected = true;\n                    showAdBlockerMessage();\n                } else {\n                    console.log('✅ No adblocker detected');\n                    adblockerDetected = false;\n                }\n            } catch (err) {\n                console.error('Error during adblocker detection:', err);\n            }\n        }, 100);\n    } catch (err) {\n        console.error('Error in detectAdBlocker:', err);\n    }\n}\n\nfunction showAdBlockerMessage() {\n    try {\n        // Only show for free users\n        if (verifiedTier !== \"Free Tier\") return;\n\n        console.log('📢 Showing adblocker message');\n\n        // Don't show if already displayed\n        if (document.getElementById('adblocker-overlay')) {\n            console.log('Adblocker overlay already displayed');\n            return;\n        }\n\n        // Create full-page overlay\n        const overlay = document.createElement('div');\n        overlay.id = 'adblocker-overlay';\n        overlay.innerHTML = `\n            <div class=\"adblocker-container\">\n                <div class=\"adblocker-content\">\n                    <div class=\"adblocker-icon\">🚫</div>\n                    <h2>AdBlocker Detected</h2>\n                    <p>We noticed you're using an ad blocker. To continue using StatWise for free, please:</p>\n                    <ul>\n                        <li>✅ Disable your ad blocker for this site</li>\n                        <li>🔄 Refresh the page</li>\n                        <li>💎 Or upgrade to Premium for an ad-free experience</li>\n                    </ul>\n                    <div class=\"adblocker-buttons\">\n                        <button onclick=\"window.location.reload()\" class=\"btn-refresh\">Refresh Page</button>\n                        <button onclick=\"window.loadPage('subscriptions')\" class=\"btn-upgrade\">Upgrade to Premium</button>\n                    </div>\n                    <p class=\"adblocker-note\">Ads help us keep StatWise free for everyone!</p>\n                </div>\n            </div>\n        `;\n\n        document.body.appendChild(overlay);\n    } catch (err) {\n        console.error('Error showing adblocker message:', err);\n    }\n}\n\nfunction hideAdBlockerMessage() {\n    const overlay = document.getElementById('adblocker-overlay');\n    if (overlay) {\n        overlay.remove();\n    }\n}\n\n// ===== Username Update Function =====\nasync function updateUsername(newUsername) {\n    try {\n        showSpinner();\n\n        const { error } = await supabase\n            .from('user_profiles')\n            .update({\n                display_name: newUsername,\n                username: newUsername,\n                updated_at: new Date().toISOString()\n            })\n            .eq('id', currentUser.id);\n\n        if (error) {\n            console.error('Error updating username:', error);\n            showModal({\n                message: 'Failed to update username. Please try again.',\n                confirmText: 'OK'\n            });\n            return;\n        }\n\n        // Update the display immediately\n        const userNameElement = document.getElementById('userName');\n        if (userNameElement) {\n            userNameElement.textContent = newUsername;\n        }\n\n        showModal({\n            message: 'Username updated successfully!',\n            confirmText: 'OK'\n        });\n\n    } catch (error) {\n        console.error('Error updating username:', error);\n        showModal({\n            message: 'Failed to update username. Please try again.',\n            confirmText: 'OK'\n        });\n    } finally {\n        hideSpinner();\n    }\n}\n\n// Theme initialization is now handled by ui.js\n\n// ===== Modal Helper Function =====\nfunction showModal(options) {\n    try {\n        // Validate options\n        if (!options || typeof options !== 'object') {\n            console.error('Invalid modal options');\n            return;\n        }\n\n        const modal = document.createElement('div');\n        modal.className = 'modal-overlay';\n\n        const inputFieldHTML = options.inputType ? `\n            <div class=\"modal-input-wrapper\">\n                <input type=\"${options.inputType}\" class=\"modal-input\" value=\"${options.inputValue || ''}\" placeholder=\"${options.inputPlaceholder || ''}\">\n            </div>\n        ` : '';\n\n        // Escape HTML to prevent XSS\n        const safeMessage = options.message ? String(options.message).replace(/</g, '&lt;').replace(/>/g, '&gt;') : '';\n\n        modal.innerHTML = `\n            <div class=\"modal-content\">\n                <div class=\"modal-message\">${safeMessage}</div>\n                ${inputFieldHTML}\n                <div class=\"modal-actions\">\n                    ${options.cancelText ? `<button class=\"btn-cancel\">${options.cancelText}</button>` : ''}\n                    <button class=\"btn-confirm ${options.confirmClass || 'btn-primary'}\">${options.confirmText || 'OK'}</button>\n                </div>\n            </div>\n        `;\n\n        document.body.appendChild(modal);\n\n        const confirmBtn = modal.querySelector('.btn-confirm');\n        const cancelBtn = modal.querySelector('.btn-cancel');\n        const inputField = modal.querySelector('.modal-input');\n\n        // Focus input if it exists\n        if (inputField) {\n            setTimeout(() => {\n                try {\n                    inputField.focus();\n                } catch (focusError) {\n                    console.warn('Could not focus input field:', focusError);\n                }\n            }, 100);\n        }\n\n        const cleanup = () => {\n            try {\n                if (modal && modal.parentNode) {\n                    document.body.removeChild(modal);\n                }\n            } catch (cleanupError) {\n                console.warn('Error cleaning up modal:', cleanupError);\n            }\n        };\n\n        if (confirmBtn) {\n            confirmBtn.addEventListener('click', () => {\n                try {\n                    const inputValue = inputField ? inputField.value : null;\n                    cleanup();\n                    if (options.onConfirm) {\n                        if (inputField) {\n                            options.onConfirm(inputValue);\n                        } else {\n                            options.onConfirm();\n                        }\n                    }\n                } catch (confirmError) {\n                    console.error('Error in modal confirm:', confirmError);\n                    cleanup();\n                }\n            });\n        }\n\n        if (cancelBtn) {\n            cancelBtn.addEventListener('click', () => {\n                try {\n                    cleanup();\n                    if (options.onCancel) options.onCancel();\n                } catch (cancelError) {\n                    console.error('Error in modal cancel:', cancelError);\n                }\n            });\n        }\n\n        // Handle Enter key for input\n        if (inputField) {\n            inputField.addEventListener('keypress', (e) => {\n                if (e.key === 'Enter' && confirmBtn) {\n                    confirmBtn.click();\n                }\n            });\n        }\n\n        // Close on overlay click\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                try {\n                    cleanup();\n                    if (options.onCancel) options.onCancel();\n                } catch (overlayError) {\n                    console.error('Error in modal overlay click:', overlayError);\n                }\n            }\n        });\n\n    } catch (error) {\n        console.error('Error creating modal:', error);\n    }\n}\n\nconsole.log('✅ StatWise main application loaded with Supabase integration!');","size_bytes":70309},"env.example.js":{"content":"// env.example.js\n// ================================\n// This is a template file. Copy it to env.js and fill in your actual configuration.\n// env.js is ignored by Git to keep your keys secure.\n// ================================\n\n// Import Firebase SDK\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js\";\nimport { getAuth } from \"https://www.gstatic.com/firebasejs/10.12.0/firebase-auth.js\";\nimport { getFunctions } from \"https://www.gstatic.com/firebasejs/10.12.0/firebase-functions.js\";\nimport { getFirestore } from \"https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js\";\nimport { getMessaging } from \"https://www.gstatic.com/firebasejs/10.12.0/firebase-messaging.js\";\nimport { getStorage } from \"https://www.gstatic.com/firebasejs/10.12.0/firebase-storage.js\";\n\n// Firebase config - It's safe for this to be in client-side code.\nconst firebaseConfig = {\n  apiKey: \"YOUR_API_KEY\",\n  authDomain: \"YOUR_AUTH_DOMAIN\",\n  projectId: \"YOUR_PROJECT_ID\",\n  storageBucket: \"YOUR_STORAGE_BUCKET\",\n  messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n  appId: \"YOUR_APP_ID\",\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig);\n\n// Export services\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const functions = getFunctions(app);\nexport const messaging = getMessaging(app);\nexport const storage = getStorage(app);\n\n// Flutterwave Public Key (Safe for frontend)\nexport const FLWPUBK = \"YOUR_FLUTTERWAVE_PUBLIC_KEY\";","size_bytes":1507},"google-cmp.js":{"content":"/**\n * StatWise Google Certified CMP Integration\n * Uses Google's Funding Choices (officially certified CMP)\n * Compliant with IAB TCF v2.2 and Google requirements\n */\n\n// Global error handler to suppress non-critical errors from third-party scripts\n(function() {\n    // Filter console.error to suppress benign third-party errors\n    const originalConsoleError = console.error;\n    console.error = function(...args) {\n        // Check if this is the \"uncaught exception\" error from Google scripts\n        if (args.length > 0 && args[0] && typeof args[0] === 'object') {\n            const message = args[0].message || JSON.stringify(args[0]);\n            if (message.includes('uncaught exception') || message.includes('error was not an error object')) {\n                // Suppress this benign error - it's from Google's third-party scripts\n                return;\n            }\n        }\n        // Log all other errors normally\n        originalConsoleError.apply(console, args);\n    };\n    \n    const originalErrorHandler = window.onerror;\n    \n    window.onerror = function(message, source, lineno, colno, error) {\n        // Suppress \"uncaught exception\" errors from third-party scripts\n        if (message && typeof message === 'string' && message.includes('uncaught exception')) {\n            return true; // Prevent default error handling\n        }\n        \n        // Check if error is from Google CMP or ads scripts\n        if (source && (source.includes('fundingchoicesmessages') || source.includes('adsbygoogle'))) {\n            return true;\n        }\n        \n        // Call original handler if it exists\n        if (originalErrorHandler) {\n            return originalErrorHandler(message, source, lineno, colno, error);\n        }\n        \n        return false;\n    };\n    \n    // Catch unhandled promise rejections\n    window.addEventListener('unhandledrejection', function(event) {\n        if (!event.reason || typeof event.reason !== 'object' || !event.reason.stack) {\n            event.preventDefault();\n        }\n    });\n})();\n\nclass GoogleCertifiedCMP {\n    constructor() {\n        this.consentKey = 'statwise_consent_v2';\n        this.cmpLoaded = false;\n        this.tcfApiAvailable = false;\n        this.init();\n    }\n\n    init() {\n        // Initialize Google Consent Mode v2 with region-specific defaults\n        this.initializeConsentMode();\n        \n        // Load Google's certified CMP (Funding Choices)\n        this.loadGoogleCMP();\n        \n        // Setup IAB TCF API integration\n        this.setupTCFIntegration();\n    }\n\n    initializeConsentMode() {\n        // Ensure gtag is available\n        if (typeof gtag === 'undefined') {\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            window.gtag = gtag;\n            gtag('js', new Date());\n        }\n\n        // Set region-specific default consent states\n        // EEA, UK, and Switzerland require consent banners\n        gtag('consent', 'default', {\n            'ad_storage': 'denied',\n            'ad_user_data': 'denied',\n            'ad_personalization': 'denied',\n            'analytics_storage': 'denied',\n            'functionality_storage': 'denied',\n            'personalization_storage': 'denied',\n            'security_storage': 'granted',\n            'wait_for_update': 2000,\n            'region': ['AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB', 'CH']\n        });\n\n        // For other regions, grant consent by default\n        gtag('consent', 'default', {\n            'ad_storage': 'granted',\n            'ad_user_data': 'granted',\n            'ad_personalization': 'granted',\n            'analytics_storage': 'granted',\n            'functionality_storage': 'granted',\n            'personalization_storage': 'granted',\n            'security_storage': 'granted',\n            'region': ['US', 'CA', 'AU', 'JP', 'KR', 'IN', 'BR', 'MX', 'ZA', 'EG', 'NG', 'KE', 'MA', 'TN', 'GH', 'SN', 'CI', 'UG', 'TZ', 'ZW', 'ZM', 'MW', 'RW', 'BW', 'NA', 'SZ', 'LS', 'MG', 'MU', 'SC']\n        });\n\n        console.log('StatWise Google Consent Mode v2 initialized with regional defaults');\n    }\n\n    loadGoogleCMP() {\n        // Load Google's Funding Choices (officially certified CMP)\n        window.googletag = window.googletag || {cmd: []};\n        \n        // Configure Funding Choices for your AdSense publisher ID\n        const script = document.createElement('script');\n        script.async = true;\n        script.src = 'https://fundingchoicesmessages.google.com/i/pub-9868946535437166?ers=1';\n        script.onload = () => {\n            console.log('✅ Google Funding Choices CMP loaded');\n            this.cmpLoaded = true;\n        };\n        script.onerror = () => {\n            console.warn('⚠️ Google CMP failed to load, falling back to manual consent');\n            this.initializeFallbackConsent();\n        };\n        \n        document.head.appendChild(script);\n\n        // Configure CMP behavior\n        window.googletag.cmd.push(() => {\n            window.googletag.pubads().enableAsyncRendering();\n            window.googletag.pubads().enableSingleRequest();\n            window.googletag.enableServices();\n        });\n    }\n\n    setupTCFIntegration() {\n        // Check if __tcfapi is available\n        const checkTCFAPI = () => {\n            if (typeof window.__tcfapi === 'function') {\n                this.tcfApiAvailable = true;\n                this.initializeTCFListeners();\n            } else {\n                // Wait for TCF API to be available\n                setTimeout(checkTCFAPI, 100);\n            }\n        };\n        \n        checkTCFAPI();\n    }\n\n    initializeTCFListeners() {\n        console.log('✅ TCF API available, setting up consent listeners');\n        \n        // Listen for TCF consent changes\n        window.__tcfapi('addEventListener', 2, (tcData, success) => {\n            if (success && tcData) {\n                console.log('🍪 TCF consent event:', tcData.eventStatus);\n                this.handleTCFConsentUpdate(tcData);\n            }\n        });\n\n        // Get initial consent status\n        window.__tcfapi('getTCData', 2, (tcData, success) => {\n            if (success && tcData) {\n                this.handleTCFConsentUpdate(tcData);\n            }\n        });\n    }\n\n    handleTCFConsentUpdate(tcData) {\n        // Convert TCF data to our format\n        const consentData = this.convertTCFToConsent(tcData);\n        \n        console.log('🍪 Converting TCF consent:', consentData);\n        \n        // Update Google Consent Mode\n        gtag('consent', 'update', {\n            'ad_storage': consentData.ad_storage,\n            'ad_user_data': consentData.ad_user_data,\n            'ad_personalization': consentData.ad_personalization,\n            'analytics_storage': consentData.analytics_storage,\n            'functionality_storage': consentData.functionality_storage,\n            'personalization_storage': consentData.personalization_storage\n        });\n\n        // Store consent locally\n        this.storeConsent(consentData);\n        \n        // Trigger ad system update\n        this.triggerAdSystemUpdate(consentData);\n    }\n\n    convertTCFToConsent(tcData) {\n        // Check for Google vendor consent and purposes\n        const googleVendorConsent = tcData.vendor && tcData.vendor.consents && tcData.vendor.consents[755]; // Google vendor ID\n        const purpose1 = tcData.purpose && tcData.purpose.consents && tcData.purpose.consents[1]; // Store and/or access information\n        const purpose3 = tcData.purpose && tcData.purpose.consents && tcData.purpose.consents[3]; // Create personalized ads profile\n        const purpose4 = tcData.purpose && tcData.purpose.consents && tcData.purpose.consents[4]; // Select personalized ads\n        \n        return {\n            ad_storage: (purpose1 && googleVendorConsent) ? 'granted' : 'denied',\n            ad_user_data: (purpose1 && googleVendorConsent) ? 'granted' : 'denied',\n            ad_personalization: (purpose3 && purpose4 && googleVendorConsent) ? 'granted' : 'denied',\n            analytics_storage: (purpose1 && googleVendorConsent) ? 'granted' : 'denied',\n            functionality_storage: 'granted', // Always granted for basic functionality\n            personalization_storage: (purpose3 && googleVendorConsent) ? 'granted' : 'denied',\n            tcfStatus: tcData.eventStatus,\n            cmpStatus: tcData.cmpStatus\n        };\n    }\n\n    handleConsentUpdate(consentData) {\n        console.log('🍪 Google CMP consent updated:', consentData);\n        \n        // Update Google Consent Mode\n        gtag('consent', 'update', {\n            'ad_storage': consentData.ad_storage || 'denied',\n            'ad_user_data': consentData.ad_user_data || 'denied',\n            'ad_personalization': consentData.ad_personalization || 'denied',\n            'analytics_storage': consentData.analytics_storage || 'denied',\n            'functionality_storage': consentData.functionality_storage || 'granted',\n            'personalization_storage': consentData.personalization_storage || 'denied'\n        });\n\n        // Store consent locally\n        this.storeConsent(consentData);\n        \n        // Trigger ad system update\n        this.triggerAdSystemUpdate(consentData);\n    }\n\n    storeConsent(consent) {\n        const consentData = {\n            ...consent,\n            timestamp: Date.now(),\n            cmp: 'google-funding-choices'\n        };\n\n        try {\n            localStorage.setItem(this.consentKey, JSON.stringify(consentData));\n        } catch (e) {\n            console.warn('Could not store consent data:', e);\n        }\n    }\n\n    getStoredConsent() {\n        try {\n            const stored = localStorage.getItem(this.consentKey);\n            return stored ? JSON.parse(stored) : null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    triggerAdSystemUpdate(consent) {\n        // Dispatch event for other systems (backward compatibility)\n        const event = new CustomEvent('consentUpdated', { \n            detail: consent \n        });\n        window.dispatchEvent(event);\n\n        // Direct integration with StatWise ad system\n        if (consent.ad_storage === 'granted' && window.initializeAdSystemForUser) {\n            console.log('🎯 Triggering ad system for consented user');\n            window.initializeAdSystemForUser();\n        } else {\n            console.log('🚫 Ad system not triggered - consent denied or function not available');\n        }\n        \n        console.log('📡 Consent update event dispatched:', consent);\n    }\n\n    checkAndApplyConsent() {\n        const storedConsent = this.getStoredConsent();\n        if (storedConsent) {\n            // Apply previously stored consent\n            this.handleConsentUpdate(storedConsent);\n        }\n    }\n\n    // Fallback consent for when Google CMP fails to load\n    initializeFallbackConsent() {\n        console.log('📋 Initializing privacy-compliant fallback consent system');\n        \n        // Simple regional-only banner (no IP geolocation)\n        this.showFallbackConsentBanner();\n    }\n\n    showFallbackConsentBanner() {\n        // Only show if no consent has been given yet\n        if (this.getStoredConsent()) return;\n\n        const banner = document.createElement('div');\n        banner.id = 'fallback-consent-banner';\n        banner.style.cssText = `\n            position: fixed;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background: #1a1a1a;\n            color: white;\n            padding: 20px;\n            text-align: center;\n            z-index: 10000;\n            box-shadow: 0 -2px 10px rgba(0,0,0,0.3);\n        `;\n        \n        banner.innerHTML = `\n            <div style=\"max-width: 1200px; margin: 0 auto;\">\n                <p style=\"margin: 0 0 15px 0;\"><strong>🍪 Privacy Notice:</strong> We use cookies and similar technologies to enhance your experience, analyze usage, and show relevant ads. Choose your preferences below.</p>\n                <button id=\"accept-fallback-consent\" style=\"background: #00d4aa; color: white; border: none; padding: 12px 24px; border-radius: 8px; margin: 0 10px; cursor: pointer; font-weight: 600;\">✓ Accept All</button>\n                <button id=\"reject-fallback-consent\" style=\"background: #ff6b6b; color: white; border: none; padding: 12px 24px; border-radius: 8px; margin: 0 10px; cursor: pointer; font-weight: 600;\">✗ Reject All</button>\n                <button id=\"essential-only-consent\" style=\"background: #666; color: white; border: none; padding: 12px 24px; border-radius: 8px; margin: 0 10px; cursor: pointer; font-weight: 600;\">Essential Only</button>\n            </div>\n        `;\n        \n        document.body.appendChild(banner);\n        \n        // Handle consent choices\n        banner.querySelector('#accept-fallback-consent').addEventListener('click', () => {\n            this.handleTCFConsentUpdate({\n                eventStatus: 'useractioncomplete',\n                purpose: { consents: { 1: true, 3: true, 4: true } },\n                vendor: { consents: { 755: true } } // Google vendor\n            });\n            banner.remove();\n        });\n        \n        banner.querySelector('#reject-fallback-consent').addEventListener('click', () => {\n            this.handleTCFConsentUpdate({\n                eventStatus: 'useractioncomplete',\n                purpose: { consents: { 1: false, 3: false, 4: false } },\n                vendor: { consents: { 755: false } }\n            });\n            banner.remove();\n        });\n        \n        banner.querySelector('#essential-only-consent').addEventListener('click', () => {\n            this.handleTCFConsentUpdate({\n                eventStatus: 'useractioncomplete',\n                purpose: { consents: { 1: false, 3: false, 4: false } },\n                vendor: { consents: { 755: false } }\n            });\n            banner.remove();\n        });\n    }\n\n    // Public methods for manual consent management\n    grantAllConsent() {\n        this.handleConsentUpdate({\n            ad_storage: 'granted',\n            ad_user_data: 'granted',\n            ad_personalization: 'granted',\n            analytics_storage: 'granted',\n            functionality_storage: 'granted',\n            personalization_storage: 'granted'\n        });\n    }\n\n    revokeAllConsent() {\n        this.handleConsentUpdate({\n            ad_storage: 'denied',\n            ad_user_data: 'denied',\n            ad_personalization: 'denied',\n            analytics_storage: 'denied',\n            functionality_storage: 'granted',\n            personalization_storage: 'denied'\n        });\n    }\n\n    resetConsent() {\n        localStorage.removeItem(this.consentKey);\n        location.reload();\n    }\n\n    getConsentStatus() {\n        return this.getStoredConsent();\n    }\n}\n\n// Initialize Google certified CMP when DOM is ready\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Make CMP globally available\n    window.googleCMP = new GoogleCertifiedCMP();\n    \n    // Backward compatibility with proper TCF integration\n    window.consentManager = {\n        getConsentStatus: () => {\n            const status = window.googleCMP?.getConsentStatus();\n            console.log('📊 Getting consent status:', status);\n            return status;\n        },\n        resetConsent: () => window.googleCMP?.resetConsent(),\n        grantAllConsent: () => window.googleCMP?.grantAllConsent(),\n        revokeAllConsent: () => window.googleCMP?.revokeAllConsent(),\n        // Additional methods for compatibility\n        setConsentChoices: () => console.log('🔧 Consent choices - using Google CMP interface'),\n        showBanner: () => console.log('🏠 Banner management handled by Google CMP')\n    };\n});\n\n// Global functions for testing\nwindow.grantAllConsent = () => window.googleCMP?.grantAllConsent();\nwindow.revokeAllConsent = () => window.googleCMP?.revokeAllConsent();\nwindow.resetConsent = () => window.googleCMP?.resetConsent();","size_bytes":16085}},"version":2}