rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the request is from the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // ===== Users Collection =====
    // Allow anyone who is logged in to read, write, and query user data.
    // This is permissive for testing but allows all profile updates, referral lookups, etc.
    match /users/{userId} {
      allow read, write, delete: if isAuthenticated();

      // --- History Subcollection ---
      // Allow any logged-in user to read or write to any history subcollection.
      // This covers a user writing to their own history and a new user writing
      // to their referrer's history.
      match /history/{historyId} {
        allow read, write, delete: if isAuthenticated();
      }
    }

    // ===== Subscriptions Collection =====
    // Allow a user to read and write to their own subscription document.
    match /subscriptions/{userId} {
      allow read, write: if isOwner(userId);
    }

    // ===== Rewards Collection =====
    // Allow any logged-in user to create, read, and update rewards.
    // This covers a user creating a reward for their referrer and a user
    // claiming a reward (updating the 'claimed' field).
    match /rewards/{rewardId} {
      allow read, write: if isAuthenticated();
    }
  }
}